<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191121 17:30:41.757" generator="Robot 3.1.1 (Python 3.5.2 on linux)">
<suite id="s1" source="/home/wangyimo/6666666/robot-mall-server/tests" name="Tests">
<suite id="s1-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_commodity" name="Admin Commodity">
<suite id="s1-s1-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_commodity/commodity.robot" name="Commodity">
<kw type="setup" library="robot_mall_service_library.commodity.CommodityLibrary" name="Login">
<arguments>
<arg>${admin_username}</arg>
<arg>${admin_password}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.272" starttime="20191121 17:30:41.930"></status>
</kw>
<test id="s1-s1-s1-t1" name="Get Admin Commodities">
<kw library="utils_library.BaseUtilsLibrary" name="Get Current Sec">
<doc>获取此时的秒数,
:param only_today:是否从当天00:00:00开始
:type only_today:bool
:param timezone:时区(默认为北京时间)
:type timezone:int
:return:秒数
:rtype:int</doc>
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20191121 17:30:42.277" level="INFO">${time1} = 63042</msg>
<status status="PASS" endtime="20191121 17:30:42.278" starttime="20191121 17:30:42.277"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Add Number">
<doc>提供了数字相加的方式,如果是字符串会转成数字
:param args: 需要相加的数字
:return: 总和
:rtype: int</doc>
<arguments>
<arg>${time1}</arg>
<arg>1000</arg>
</arguments>
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20191121 17:30:42.279" level="INFO">${time2} = 64042</msg>
<status status="PASS" endtime="20191121 17:30:42.279" starttime="20191121 17:30:42.278"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${time1},${time2}</arg>
</arguments>
<assign>
<var>${section}</var>
</assign>
<msg timestamp="20191121 17:30:42.280" level="INFO">${section} = 63042,64042</msg>
<status status="PASS" endtime="20191121 17:30:42.281" starttime="20191121 17:30:42.280"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:42.283" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:42.283" starttime="20191121 17:30:42.281"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>sales_status=1</arg>
<arg>shelf_time=0,155555</arg>
<arg>commodity_name=1</arg>
<arg>page_size=20</arg>
<arg>page_num=1</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:42.285" level="INFO">${unessential_params} = {'sales_status': '1', 'shelf_time': '0,155555', 'commodity_name': '1', 'page_size': '20', 'page_num': '1'}</msg>
<status status="PASS" endtime="20191121 17:30:42.285" starttime="20191121 17:30:42.283"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Commodities Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:42.288" level="INFO">[{'sales_status': '1'}, {'shelf_time': '0,155555'}, {'commodity_name': '1'}, {'page_size': '20'}, {'page_num': '1'}]</msg>
<msg timestamp="20191121 17:30:42.289" level="INFO">${results} = [{'sales_status': '1'}, {'shelf_time': '0,155555'}, {'commodity_name': '1'}, {'page_size': '20'}, {'page_num': '1'}]</msg>
<status status="PASS" endtime="20191121 17:30:42.289" starttime="20191121 17:30:42.287"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'sales_status': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:42.686" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:42.687" starttime="20191121 17:30:42.293"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.692" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328533.739175, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}, {'subtitle': '分页吧', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632013.139812, 'specification_id': '9f0212a605eb11ea85430242ac15000a', 'updated_time': 1573632013.139909, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '分页吧', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;分页吧分页吧分页吧&lt;/p&gt;', 'created_time': 1573632012.952107, 'removal_time': None, 'updated_time': 1573632013.142483, 'commodity_name': '分页吧啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/76c5d30c7221e0fd83511172035488c9.jpg'], 'commodity_id': '9ee4327c05eb11eabd200242ac15000a', 'shelf_time': 1573632013.142186}, {'subtitle': '分页吧', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573631990.015446, 'specification_id': '913993ce05eb11ea80cf0242ac15000a', 'updated_time': 1573631990.015488, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '分页吧', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;分页吧 &lt;img src=" https://uustorage-t.uucin.com/media/park/610c2260016648250bb6f45a73b7464d.png " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573631989.859776, 'removal_time': None, 'updated_time': 1573631990.017894, 'commodity_name': '分页吧', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/07c733620e8fe9ddb61e3f16019abf77.png'], 'commodity_id': '9120743e05eb11ea80cf0242ac15000a', 'shelf_time': 1573631990.017634}]</msg>
<status status="PASS" endtime="20191121 17:30:42.693" starttime="20191121 17:30:42.688"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.693" starttime="20191121 17:30:42.687"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:42.696" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:42.696" starttime="20191121 17:30:42.695"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.698" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:42.698" starttime="20191121 17:30:42.697"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:42.700" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:42.700" starttime="20191121 17:30:42.699"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.701" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:42.701" starttime="20191121 17:30:42.700"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.704" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?sales_status=1</msg>
<status status="PASS" endtime="20191121 17:30:42.704" starttime="20191121 17:30:42.703"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:42.706" starttime="20191121 17:30:42.705"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.708" starttime="20191121 17:30:42.707"></status>
</kw>
<msg timestamp="20191121 17:30:42.708" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:42.708" starttime="20191121 17:30:42.702"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.711" starttime="20191121 17:30:42.710"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.723" starttime="20191121 17:30:42.712"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.724" starttime="20191121 17:30:42.711"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.725" starttime="20191121 17:30:42.724"></status>
</kw>
<msg timestamp="20191121 17:30:42.726" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:42.726" starttime="20191121 17:30:42.709"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.729" starttime="20191121 17:30:42.728"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.729" starttime="20191121 17:30:42.726"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.730" level="INFO">388.024</msg>
<status status="PASS" endtime="20191121 17:30:42.730" starttime="20191121 17:30:42.729"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:42.732" level="INFO">${elapsed} = 388</msg>
<status status="PASS" endtime="20191121 17:30:42.732" starttime="20191121 17:30:42.731"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:42.734" level="INFO">${elapsed} = 388</msg>
<status status="PASS" endtime="20191121 17:30:42.735" starttime="20191121 17:30:42.734"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:42.738" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:42.739" starttime="20191121 17:30:42.737"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.739" starttime="20191121 17:30:42.735"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.739" starttime="20191121 17:30:42.732"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.739" starttime="20191121 17:30:42.694"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.740" starttime="20191121 17:30:42.291"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.740" starttime="20191121 17:30:42.290"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.740" starttime="20191121 17:30:42.290"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'shelf_time': '0,155555'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:42.894" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:42.894" starttime="20191121 17:30:42.743"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.897" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:42.897" starttime="20191121 17:30:42.896"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.897" starttime="20191121 17:30:42.895"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:42.900" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:42.900" starttime="20191121 17:30:42.899"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.902" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:42.902" starttime="20191121 17:30:42.901"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:42.903" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:42.904" starttime="20191121 17:30:42.902"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.905" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:42.905" starttime="20191121 17:30:42.904"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.908" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?shelf_time=0%2C155555</msg>
<status status="PASS" endtime="20191121 17:30:42.908" starttime="20191121 17:30:42.907"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:42.910" starttime="20191121 17:30:42.909"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.911" starttime="20191121 17:30:42.910"></status>
</kw>
<msg timestamp="20191121 17:30:42.912" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:42.912" starttime="20191121 17:30:42.906"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.916" starttime="20191121 17:30:42.914"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.922" starttime="20191121 17:30:42.917"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.922" starttime="20191121 17:30:42.916"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.923" starttime="20191121 17:30:42.923"></status>
</kw>
<msg timestamp="20191121 17:30:42.924" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:42.924" starttime="20191121 17:30:42.913"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:42.926" starttime="20191121 17:30:42.925"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.926" starttime="20191121 17:30:42.924"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:42.927" level="INFO">146.189</msg>
<status status="PASS" endtime="20191121 17:30:42.927" starttime="20191121 17:30:42.926"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:42.928" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:42.928" starttime="20191121 17:30:42.927"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:42.929" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:42.929" starttime="20191121 17:30:42.929"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:42.931" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:42.931" starttime="20191121 17:30:42.930"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.931" starttime="20191121 17:30:42.929"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.931" starttime="20191121 17:30:42.928"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.931" starttime="20191121 17:30:42.898"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.932" starttime="20191121 17:30:42.742"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.932" starttime="20191121 17:30:42.741"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:42.932" starttime="20191121 17:30:42.740"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:43.083" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.083" starttime="20191121 17:30:42.933"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.086" level="INFO">[{'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '111', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573613665.99417, 'specification_id': 'e741cee205c011ea94ec0242ac15000a', 'updated_time': 1573616271.738708, 'stock': 15, 'unit_sell_price': 100, 'specification_name': '蓝色', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;ssssssssssssssssss&lt;/p&gt;', 'created_time': 1573613665.832788, 'removal_time': 1573613821.125224, 'updated_time': 1573616271.536745, 'commodity_name': '312211', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/5b76465fcec4f6a552f065d773c7264e.png'], 'commodity_id': 'e728104c05c011eaacef0242ac15000a', 'shelf_time': 1573613665.996609}]</msg>
<status status="PASS" endtime="20191121 17:30:43.086" starttime="20191121 17:30:43.084"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.086" starttime="20191121 17:30:43.083"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:43.089" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.090" starttime="20191121 17:30:43.088"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.091" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.091" starttime="20191121 17:30:43.090"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:43.093" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.093" starttime="20191121 17:30:43.092"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.094" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.095" starttime="20191121 17:30:43.093"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.102" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?commodity_name=1</msg>
<status status="PASS" endtime="20191121 17:30:43.102" starttime="20191121 17:30:43.096"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.104" starttime="20191121 17:30:43.103"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.105" starttime="20191121 17:30:43.104"></status>
</kw>
<msg timestamp="20191121 17:30:43.106" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.106" starttime="20191121 17:30:43.095"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.109" starttime="20191121 17:30:43.108"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.115" starttime="20191121 17:30:43.110"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.115" starttime="20191121 17:30:43.109"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.116" starttime="20191121 17:30:43.115"></status>
</kw>
<msg timestamp="20191121 17:30:43.116" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.116" starttime="20191121 17:30:43.107"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.118" starttime="20191121 17:30:43.117"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.118" starttime="20191121 17:30:43.117"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.119" level="INFO">146.978</msg>
<status status="PASS" endtime="20191121 17:30:43.119" starttime="20191121 17:30:43.118"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.120" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:43.120" starttime="20191121 17:30:43.119"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.121" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:43.121" starttime="20191121 17:30:43.120"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:43.123" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:43.122"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:43.121"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:43.120"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:43.087"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:42.932"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:42.932"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.123" starttime="20191121 17:30:42.932"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_size': '20'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:43.335" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.336" starttime="20191121 17:30:43.124"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.340" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328533.739175, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}, {'subtitle': '分页吧', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632013.139812, 'specification_id': '9f0212a605eb11ea85430242ac15000a', 'updated_time': 1573632013.139909, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '分页吧', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;分页吧分页吧分页吧&lt;/p&gt;', 'created_time': 1573632012.952107, 'removal_time': None, 'updated_time': 1573632013.142483, 'commodity_name': '分页吧啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/76c5d30c7221e0fd83511172035488c9.jpg'], 'commodity_id': '9ee4327c05eb11eabd200242ac15000a', 'shelf_time': 1573632013.142186}, {'subtitle': '分页吧', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573631990.015446, 'specification_id': '913993ce05eb11ea80cf0242ac15000a', 'updated_time': 1573631990.015488, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '分页吧', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;分页吧 &lt;img src=" https://uustorage-t.uucin.com/media/park/610c2260016648250bb6f45a73b7464d.png " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573631989.859776, 'removal_time': None, 'updated_time': 1573631990.017894, 'commodity_name': '分页吧', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/07c733620e8fe9ddb61e3f16019abf77.png'], 'commodity_id': '9120743e05eb11ea80cf0242ac15000a', 'shelf_time': 1573631990.017634}, {'subtitle': '分页了嘛', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573631950.758326, 'specification_id': '79d36be205eb11eaa61a0242ac15000a', 'updated_time': 1573631950.758419, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '分页了嘛', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;分页了嘛&lt;/p&gt;', 'created_time': 1573631950.560543, 'removal_time': None, 'updated_time': 1573631950.761171, 'commodity_name': '分页了嘛', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/6b3cc730d1798ec856b5a7dcc3c0f788.jpg'], 'commodity_id': '79b4010805eb11eabd200242ac15000a', 'shelf_time': 1573631950.760739}, {'subtitle': '删吧', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1100, 'created_time': 1573631924.489302, 'specification_id': '6a2b1e0605eb11ea85430242ac15000a', 'updated_time': 1573631924.48936, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '删吧', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;删吧删吧&lt;/p&gt;', 'created_time': 1573631924.318616, 'removal_time': None, 'updated_time': 1573631924.491964, 'commodity_name': '删吧', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/5470d1cced24d6cabd7ee7c88feffada.png'], 'commodity_id': '6a0fe73a05eb11ea80cf0242ac15000a', 'shelf_time': 1573631924.491701}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573631888.846789, 'specification_id': '54ec6f4005eb11ea85430242ac15000a', 'updated_time': 1573631888.846834, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '删啦', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;删啦&lt;/p&gt;', 'created_time': 1573631888.650198, 'removal_time': None, 'updated_time': 1573631888.849658, 'commodity_name': '删啦', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/a2b33e8e38352bba38f81513bb2b6811.jpg'], 'commodity_id': '54cd4cdc05eb11ea85430242ac15000a', 'shelf_time': 1573631888.849141}]</msg>
<status status="PASS" endtime="20191121 17:30:43.342" starttime="20191121 17:30:43.337"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.342" starttime="20191121 17:30:43.336"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:43.345" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.345" starttime="20191121 17:30:43.344"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.346" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.347" starttime="20191121 17:30:43.345"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:43.348" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.348" starttime="20191121 17:30:43.347"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.350" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.350" starttime="20191121 17:30:43.349"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.353" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?page_size=20</msg>
<status status="PASS" endtime="20191121 17:30:43.354" starttime="20191121 17:30:43.353"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.355" starttime="20191121 17:30:43.354"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.357" starttime="20191121 17:30:43.356"></status>
</kw>
<msg timestamp="20191121 17:30:43.357" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.357" starttime="20191121 17:30:43.351"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.359" starttime="20191121 17:30:43.358"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.365" starttime="20191121 17:30:43.360"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.366" starttime="20191121 17:30:43.359"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.366" starttime="20191121 17:30:43.366"></status>
</kw>
<msg timestamp="20191121 17:30:43.367" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.367" starttime="20191121 17:30:43.358"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.368" starttime="20191121 17:30:43.367"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.368" starttime="20191121 17:30:43.367"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.368" level="INFO">207.851</msg>
<status status="PASS" endtime="20191121 17:30:43.369" starttime="20191121 17:30:43.368"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.369" level="INFO">${elapsed} = 207</msg>
<status status="PASS" endtime="20191121 17:30:43.369" starttime="20191121 17:30:43.369"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.370" level="INFO">${elapsed} = 207</msg>
<status status="PASS" endtime="20191121 17:30:43.370" starttime="20191121 17:30:43.370"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:43.372" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.371"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.370"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.369"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.343"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.124"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.123"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.372" starttime="20191121 17:30:43.123"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_num': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:43.521" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.521" starttime="20191121 17:30:43.373"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.523" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328533.739175, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}]</msg>
<status status="PASS" endtime="20191121 17:30:43.523" starttime="20191121 17:30:43.522"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.523" starttime="20191121 17:30:43.522"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:43.524" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.524" starttime="20191121 17:30:43.523"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.524" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.524" starttime="20191121 17:30:43.524"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:43.525" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.525" starttime="20191121 17:30:43.524"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.525" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.525" starttime="20191121 17:30:43.525"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.526" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?page_num=1</msg>
<status status="PASS" endtime="20191121 17:30:43.526" starttime="20191121 17:30:43.526"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.526" starttime="20191121 17:30:43.526"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.527" starttime="20191121 17:30:43.527"></status>
</kw>
<msg timestamp="20191121 17:30:43.527" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.527" starttime="20191121 17:30:43.525"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.528" starttime="20191121 17:30:43.527"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.530" starttime="20191121 17:30:43.528"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.530" starttime="20191121 17:30:43.528"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.531" starttime="20191121 17:30:43.531"></status>
</kw>
<msg timestamp="20191121 17:30:43.531" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.531" starttime="20191121 17:30:43.527"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.532" starttime="20191121 17:30:43.532"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.532" starttime="20191121 17:30:43.531"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.532" level="INFO">146.173</msg>
<status status="PASS" endtime="20191121 17:30:43.532" starttime="20191121 17:30:43.532"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.533" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:43.533" starttime="20191121 17:30:43.533"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.534" level="INFO">${elapsed} = 146</msg>
<status status="PASS" endtime="20191121 17:30:43.534" starttime="20191121 17:30:43.533"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:43.535" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.535"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.534"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.533"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.523"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.373"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.373"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:43.372"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:42.289"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.535" starttime="20191121 17:30:42.286"></status>
</kw>
<kw name="Get Admin Commodities Success">
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:43.690" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.690" starttime="20191121 17:30:43.536"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.695" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328533.739175, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}]</msg>
<status status="PASS" endtime="20191121 17:30:43.696" starttime="20191121 17:30:43.692"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.696" starttime="20191121 17:30:43.691"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:43.699" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.699" starttime="20191121 17:30:43.698"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.701" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.701" starttime="20191121 17:30:43.700"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:43.702" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.703" starttime="20191121 17:30:43.701"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.704" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.704" starttime="20191121 17:30:43.703"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.708" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:43.708" starttime="20191121 17:30:43.707"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.710" starttime="20191121 17:30:43.708"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.711" starttime="20191121 17:30:43.710"></status>
</kw>
<msg timestamp="20191121 17:30:43.712" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.712" starttime="20191121 17:30:43.705"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.714" starttime="20191121 17:30:43.713"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.724" starttime="20191121 17:30:43.716"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.724" starttime="20191121 17:30:43.715"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.725" starttime="20191121 17:30:43.724"></status>
</kw>
<msg timestamp="20191121 17:30:43.725" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.725" starttime="20191121 17:30:43.712"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.727" starttime="20191121 17:30:43.726"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.727" starttime="20191121 17:30:43.726"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.728" level="INFO">151.774</msg>
<status status="PASS" endtime="20191121 17:30:43.728" starttime="20191121 17:30:43.727"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.729" level="INFO">${elapsed} = 151</msg>
<status status="PASS" endtime="20191121 17:30:43.729" starttime="20191121 17:30:43.728"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.730" level="INFO">${elapsed} = 151</msg>
<status status="PASS" endtime="20191121 17:30:43.730" starttime="20191121 17:30:43.730"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:43.732" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:43.732" starttime="20191121 17:30:43.731"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.732" starttime="20191121 17:30:43.730"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.732" starttime="20191121 17:30:43.729"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.732" starttime="20191121 17:30:43.697"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.732" starttime="20191121 17:30:43.536"></status>
</kw>
<doc>接口名:获取商品列表

请求方式:Get

预期结果:输入正确参数,http响应码返回 200,返回的Json数据为 commodity 列表。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms~200ms</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:43.733" starttime="20191121 17:30:42.273"></status>
</test>
<test id="s1-s1-s1-t2" name="Get Admin Commodities Fail">
<kw library="utils_library.BaseUtilsLibrary" name="Get Current Sec">
<doc>获取此时的秒数,
:param only_today:是否从当天00:00:00开始
:type only_today:bool
:param timezone:时区(默认为北京时间)
:type timezone:int
:return:秒数
:rtype:int</doc>
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20191121 17:30:43.735" level="INFO">${time1} = 63043</msg>
<status status="PASS" endtime="20191121 17:30:43.735" starttime="20191121 17:30:43.734"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Add Number">
<doc>提供了数字相加的方式,如果是字符串会转成数字
:param args: 需要相加的数字
:return: 总和
:rtype: int</doc>
<arguments>
<arg>${time1}</arg>
<arg>1000</arg>
</arguments>
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20191121 17:30:43.735" level="INFO">${time2} = 64043</msg>
<status status="PASS" endtime="20191121 17:30:43.735" starttime="20191121 17:30:43.735"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${time1},${time2}</arg>
</arguments>
<assign>
<var>${section}</var>
</assign>
<msg timestamp="20191121 17:30:43.736" level="INFO">${section} = 63043,64043</msg>
<status status="PASS" endtime="20191121 17:30:43.736" starttime="20191121 17:30:43.736"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:43.737" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:43.737" starttime="20191121 17:30:43.736"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>sales_status=a</arg>
<arg>shelf_time=a,b</arg>
<arg>commodity_name=.</arg>
<arg>page_size=a</arg>
<arg>page_num=a</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:43.737" level="INFO">${unessential_params} = {'sales_status': 'a', 'shelf_time': 'a,b', 'commodity_name': '.', 'page_size': 'a', 'page_num': 'a'}</msg>
<status status="PASS" endtime="20191121 17:30:43.737" starttime="20191121 17:30:43.737"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Commodities Fail422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>success=False</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:43.738" level="INFO">${results} = [{'sales_status': 'a'}, {'shelf_time': 'a,b'}, {'commodity_name': '.'}, {'page_size': 'a'}, {'page_num': 'a'}]</msg>
<status status="PASS" endtime="20191121 17:30:43.738" starttime="20191121 17:30:43.738"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'sales_status': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:43.841" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.841" starttime="20191121 17:30:43.740"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:43.844" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.845" starttime="20191121 17:30:43.843"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.846" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.846" starttime="20191121 17:30:43.845"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:43.848" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:43.848" starttime="20191121 17:30:43.847"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.849" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:43.850" starttime="20191121 17:30:43.848"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.852" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?sales_status=a</msg>
<status status="PASS" endtime="20191121 17:30:43.853" starttime="20191121 17:30:43.851"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:43.854" starttime="20191121 17:30:43.853"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.856" starttime="20191121 17:30:43.855"></status>
</kw>
<msg timestamp="20191121 17:30:43.856" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.856" starttime="20191121 17:30:43.850"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.859" starttime="20191121 17:30:43.858"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.866" starttime="20191121 17:30:43.860"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.866" starttime="20191121 17:30:43.859"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.868" starttime="20191121 17:30:43.867"></status>
</kw>
<msg timestamp="20191121 17:30:43.868" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:43.868" starttime="20191121 17:30:43.857"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:43.871" starttime="20191121 17:30:43.870"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.872" starttime="20191121 17:30:43.869"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:43.873" level="INFO">99.054</msg>
<status status="PASS" endtime="20191121 17:30:43.873" starttime="20191121 17:30:43.872"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.875" level="INFO">${elapsed} = 99</msg>
<status status="PASS" endtime="20191121 17:30:43.875" starttime="20191121 17:30:43.874"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:43.878" level="INFO">${elapsed} = 99</msg>
<status status="PASS" endtime="20191121 17:30:43.878" starttime="20191121 17:30:43.876"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:43.881" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:43.881" starttime="20191121 17:30:43.880"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.882" starttime="20191121 17:30:43.879"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.882" starttime="20191121 17:30:43.875"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.882" starttime="20191121 17:30:43.842"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.882" starttime="20191121 17:30:43.739"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.883" starttime="20191121 17:30:43.739"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:43.883" starttime="20191121 17:30:43.739"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'shelf_time': 'a,b'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.130" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.130" starttime="20191121 17:30:43.886"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.134" level="INFO">${bug_level} = BugLevel:Blocker</msg>
<status status="PASS" endtime="20191121 17:30:44.134" starttime="20191121 17:30:44.132"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.135" level="INFO">Set tag 'BugLevel:Blocker'.</msg>
<status status="PASS" endtime="20191121 17:30:44.136" starttime="20191121 17:30:44.134"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.137" level="INFO">${status_tag} = ShouldBe:422But:500</msg>
<status status="PASS" endtime="20191121 17:30:44.137" starttime="20191121 17:30:44.136"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.139" level="INFO">Set tag 'ShouldBe:422But:500'.</msg>
<status status="PASS" endtime="20191121 17:30:44.139" starttime="20191121 17:30:44.137"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.141" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?shelf_time=a%2Cb</msg>
<status status="PASS" endtime="20191121 17:30:44.142" starttime="20191121 17:30:44.141"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:44.144" level="FAIL">500 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:44.144" starttime="20191121 17:30:44.142"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:44.147" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities?shelf_time=a%2Cb 错误。test_case：Get Admin Commodities Fail:应返回422，但返回500。</msg>
<status status="PASS" endtime="20191121 17:30:44.148" starttime="20191121 17:30:44.146"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.148" starttime="20191121 17:30:44.145"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.148" starttime="20191121 17:30:44.139"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.149" starttime="20191121 17:30:44.131"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.149" starttime="20191121 17:30:43.884"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.149" starttime="20191121 17:30:43.883"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.150" starttime="20191121 17:30:43.883"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '.'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.278" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.278" starttime="20191121 17:30:44.153"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.281" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:44.281" starttime="20191121 17:30:44.280"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.283" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:44.283" starttime="20191121 17:30:44.282"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.285" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:44.285" starttime="20191121 17:30:44.284"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.286" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:44.287" starttime="20191121 17:30:44.285"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.289" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?commodity_name=.</msg>
<status status="PASS" endtime="20191121 17:30:44.289" starttime="20191121 17:30:44.288"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:44.291" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:44.292" starttime="20191121 17:30:44.290"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:44.295" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities?commodity_name=. 错误。test_case：Get Admin Commodities Fail:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:44.296" starttime="20191121 17:30:44.294"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.296" starttime="20191121 17:30:44.292"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.296" starttime="20191121 17:30:44.287"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.297" starttime="20191121 17:30:44.279"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.297" starttime="20191121 17:30:44.151"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.297" starttime="20191121 17:30:44.150"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.297" starttime="20191121 17:30:44.150"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_size': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.403" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.403" starttime="20191121 17:30:44.301"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.406" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.407" starttime="20191121 17:30:44.405"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.408" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.408" starttime="20191121 17:30:44.407"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.410" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.410" starttime="20191121 17:30:44.409"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.412" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.412" starttime="20191121 17:30:44.410"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.415" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?page_size=a</msg>
<status status="PASS" endtime="20191121 17:30:44.415" starttime="20191121 17:30:44.414"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.417" starttime="20191121 17:30:44.416"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.418" starttime="20191121 17:30:44.418"></status>
</kw>
<msg timestamp="20191121 17:30:44.419" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.419" starttime="20191121 17:30:44.413"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.422" starttime="20191121 17:30:44.421"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.428" starttime="20191121 17:30:44.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.428" starttime="20191121 17:30:44.422"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.430" starttime="20191121 17:30:44.429"></status>
</kw>
<msg timestamp="20191121 17:30:44.431" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.431" starttime="20191121 17:30:44.420"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.433" starttime="20191121 17:30:44.432"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.434" starttime="20191121 17:30:44.431"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.435" level="INFO">97.707</msg>
<status status="PASS" endtime="20191121 17:30:44.435" starttime="20191121 17:30:44.434"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.437" level="INFO">${elapsed} = 97</msg>
<status status="PASS" endtime="20191121 17:30:44.437" starttime="20191121 17:30:44.436"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.439" level="INFO">${elapsed} = 97</msg>
<status status="PASS" endtime="20191121 17:30:44.439" starttime="20191121 17:30:44.438"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:44.441" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:44.441" starttime="20191121 17:30:44.440"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.441" starttime="20191121 17:30:44.439"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.441" starttime="20191121 17:30:44.437"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.442" starttime="20191121 17:30:44.404"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.442" starttime="20191121 17:30:44.299"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.442" starttime="20191121 17:30:44.298"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.442" starttime="20191121 17:30:44.298"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_num': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Commodities Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.552" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.552" starttime="20191121 17:30:44.444"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.556" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.556" starttime="20191121 17:30:44.554"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.557" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.558" starttime="20191121 17:30:44.556"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.559" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.559" starttime="20191121 17:30:44.558"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.561" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.561" starttime="20191121 17:30:44.560"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.563" level="INFO">https://mall-server-d.parkone.cn/admin/commodities?page_num=a</msg>
<status status="PASS" endtime="20191121 17:30:44.564" starttime="20191121 17:30:44.563"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.565" starttime="20191121 17:30:44.564"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.567" starttime="20191121 17:30:44.566"></status>
</kw>
<msg timestamp="20191121 17:30:44.568" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.568" starttime="20191121 17:30:44.561"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.571" starttime="20191121 17:30:44.570"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.577" starttime="20191121 17:30:44.572"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.577" starttime="20191121 17:30:44.571"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.579" starttime="20191121 17:30:44.578"></status>
</kw>
<msg timestamp="20191121 17:30:44.579" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.579" starttime="20191121 17:30:44.569"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.582" starttime="20191121 17:30:44.581"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.582" starttime="20191121 17:30:44.580"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.583" level="INFO">105.165</msg>
<status status="PASS" endtime="20191121 17:30:44.583" starttime="20191121 17:30:44.582"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.584" level="INFO">${elapsed} = 105</msg>
<status status="PASS" endtime="20191121 17:30:44.584" starttime="20191121 17:30:44.584"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.586" level="INFO">${elapsed} = 105</msg>
<status status="PASS" endtime="20191121 17:30:44.586" starttime="20191121 17:30:44.585"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:44.588" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:44.588" starttime="20191121 17:30:44.587"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.588" starttime="20191121 17:30:44.587"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.588" starttime="20191121 17:30:44.585"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.589" starttime="20191121 17:30:44.552"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.589" starttime="20191121 17:30:44.443"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.589" starttime="20191121 17:30:44.442"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.589" starttime="20191121 17:30:44.442"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.589" starttime="20191121 17:30:43.738"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.589" starttime="20191121 17:30:43.737"></status>
</kw>
<kw name="Get Admin Commodities Fail422">
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.738" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.739" starttime="20191121 17:30:44.590"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.742" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:44.742" starttime="20191121 17:30:44.740"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.744" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:44.744" starttime="20191121 17:30:44.742"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.746" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:44.746" starttime="20191121 17:30:44.745"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.748" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:44.748" starttime="20191121 17:30:44.746"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.751" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:44.751" starttime="20191121 17:30:44.750"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:44.753" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:44.753" starttime="20191121 17:30:44.751"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:44.757" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities 错误。test_case：Get Admin Commodities Fail:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:44.757" starttime="20191121 17:30:44.755"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.757" starttime="20191121 17:30:44.754"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.758" starttime="20191121 17:30:44.748"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.758" starttime="20191121 17:30:44.739"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:44.758" starttime="20191121 17:30:44.590"></status>
</kw>
<doc>接口名:获取商品列表{
}
请求方式:Get

预期结果:输入错误参数,http响应码返回 422,返回的Json数据符合校验。</doc>
<tags>
<tag>BugLevel:Blocker</tag>
<tag>BugLevel:Critical</tag>
<tag>model:admin_commodity</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
<tag>RespTime:100ms~200ms</tag>
<tag>ShouldBe:422But:200</tag>
<tag>ShouldBe:422But:500</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:44.759" starttime="20191121 17:30:43.733">Several failures occurred:

1) 500 != 422

2) 200 != 422

3) 200 != 422</status>
</test>
<test id="s1-s1-s1-t3" name="Post Admin Commodities">
<kw library="utils_library.BaseUtilsLibrary" name="Faker Name">
<doc>生成虚假测试名字
:return: 虚假测试名字</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20191121 17:30:44.808" level="INFO">${name} = 王林</msg>
<status status="PASS" endtime="20191121 17:30:44.808" starttime="20191121 17:30:44.763"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.809" level="INFO">${name} = 王林</msg>
<status status="PASS" endtime="20191121 17:30:44.809" starttime="20191121 17:30:44.809"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg</arg>
</arguments>
<assign>
<var>${commodity_images}</var>
</assign>
<msg timestamp="20191121 17:30:44.810" level="INFO">${commodity_images} = ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']</msg>
<status status="PASS" endtime="20191121 17:30:44.810" starttime="20191121 17:30:44.809"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4</arg>
</arguments>
<assign>
<var>${commodity_videos}</var>
</assign>
<msg timestamp="20191121 17:30:44.810" level="INFO">${commodity_videos} = ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']</msg>
<status status="PASS" endtime="20191121 17:30:44.810" starttime="20191121 17:30:44.810"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${commodity_images}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.811" level="INFO">${commodity_images} = ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']</msg>
<status status="PASS" endtime="20191121 17:30:44.811" starttime="20191121 17:30:44.810"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${commodity_videos}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.812" level="INFO">${commodity_videos} = ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']</msg>
<status status="PASS" endtime="20191121 17:30:44.812" starttime="20191121 17:30:44.811"></status>
</kw>
<kw name="Post Admin Commodity Success">
<arguments>
<arg>commodity_name=${name}的商品</arg>
<arg>subtitle=商品</arg>
<arg>commodity_images=${commodity_images}</arg>
<arg>commodity_videos=${commodity_videos}</arg>
<arg>commodity_description=test</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodities">
<doc>创建商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:44.926" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.927" starttime="20191121 17:30:44.812"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.929" level="INFO">{'created_time': 1574328644.924063, 'commodity_id': '97e789540c4111eabc550242ac15000a'}</msg>
<status status="PASS" endtime="20191121 17:30:44.929" starttime="20191121 17:30:44.928"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.929" starttime="20191121 17:30:44.927"></status>
</kw>
<kw library="resources" name="Expect Status is 201">
<doc>检测响应状态是否为201 Created，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/post_201.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:44.932" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.933" starttime="20191121 17:30:44.931"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.935" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.935" starttime="20191121 17:30:44.933"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:44.937" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:44.937" starttime="20191121 17:30:44.936"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.938" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:44.938" starttime="20191121 17:30:44.937"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.941" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:44.941" starttime="20191121 17:30:44.940"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:44.943" starttime="20191121 17:30:44.942"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.944" starttime="20191121 17:30:44.943"></status>
</kw>
<msg timestamp="20191121 17:30:44.945" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.945" starttime="20191121 17:30:44.939"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.948" starttime="20191121 17:30:44.947"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.952" starttime="20191121 17:30:44.949"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.953" starttime="20191121 17:30:44.948"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.954" starttime="20191121 17:30:44.953"></status>
</kw>
<msg timestamp="20191121 17:30:44.955" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:44.955" starttime="20191121 17:30:44.946"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:44.958" starttime="20191121 17:30:44.957"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.958" starttime="20191121 17:30:44.955"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.959" level="INFO">111.648</msg>
<status status="PASS" endtime="20191121 17:30:44.960" starttime="20191121 17:30:44.958"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.961" level="INFO">${elapsed} = 111</msg>
<status status="PASS" endtime="20191121 17:30:44.961" starttime="20191121 17:30:44.960"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:44.964" level="INFO">${elapsed} = 111</msg>
<status status="PASS" endtime="20191121 17:30:44.964" starttime="20191121 17:30:44.963"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:44.967" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:44.967" starttime="20191121 17:30:44.966"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.968" starttime="20191121 17:30:44.964"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.968" starttime="20191121 17:30:44.962"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.968" starttime="20191121 17:30:44.930"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${resp.json()}"!=''</arg>
<arg>${resp.json()['commodity_id']}</arg>
</arguments>
<assign>
<var>${commodity_id}</var>
</assign>
<msg timestamp="20191121 17:30:44.970" level="INFO">${commodity_id} = 97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:44.971" starttime="20191121 17:30:44.969"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${commodity_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:44.972" level="INFO">${commodity_id} = 97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:44.972" starttime="20191121 17:30:44.971"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:44.972" starttime="20191121 17:30:44.812"></status>
</kw>
<doc>接口名:创建商品

请求方式:Post

预期结果:输入正确参数,http响应码返回 201,返回的Json数据符合校验。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:201</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:44.973" starttime="20191121 17:30:44.760"></status>
</test>
<test id="s1-s1-s1-t4" name="Post Admin Commodities Fail">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Post Admin Commodity Fail422</arg>
<arg>commodity_name=${name}的商品1</arg>
<arg>commodity_images=aa</arg>
<arg>commodity_description=..</arg>
</arguments>
<kw name="Post Admin Commodity Fail422">
<arguments>
<arg>commodity_name=${name}的商品1</arg>
<arg>commodity_images=aa</arg>
<arg>commodity_description=..</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodities">
<doc>创建商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.095" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.095" starttime="20191121 17:30:44.979"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.098" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.098" starttime="20191121 17:30:45.097"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.100" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.100" starttime="20191121 17:30:45.099"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.101" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.102" starttime="20191121 17:30:45.100"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.103" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.103" starttime="20191121 17:30:45.102"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.106" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:45.106" starttime="20191121 17:30:45.105"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.108" starttime="20191121 17:30:45.106"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.109" starttime="20191121 17:30:45.108"></status>
</kw>
<msg timestamp="20191121 17:30:45.110" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.110" starttime="20191121 17:30:45.104"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.112" starttime="20191121 17:30:45.111"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.118" starttime="20191121 17:30:45.114"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.118" starttime="20191121 17:30:45.113"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.120" starttime="20191121 17:30:45.119"></status>
</kw>
<msg timestamp="20191121 17:30:45.120" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.121" starttime="20191121 17:30:45.110"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.123" starttime="20191121 17:30:45.123"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.124" starttime="20191121 17:30:45.121"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.125" level="INFO">111.863</msg>
<status status="PASS" endtime="20191121 17:30:45.125" starttime="20191121 17:30:45.124"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.127" level="INFO">${elapsed} = 111</msg>
<status status="PASS" endtime="20191121 17:30:45.127" starttime="20191121 17:30:45.126"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.129" level="INFO">${elapsed} = 111</msg>
<status status="PASS" endtime="20191121 17:30:45.129" starttime="20191121 17:30:45.128"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.131" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.131" starttime="20191121 17:30:45.130"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.131" starttime="20191121 17:30:45.129"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.132" starttime="20191121 17:30:45.127"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.132" starttime="20191121 17:30:45.096"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.132" starttime="20191121 17:30:44.978"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.132" starttime="20191121 17:30:44.977"></status>
</kw>
<kw name="Post Admin Commodity Fail422">
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodities">
<doc>创建商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.237" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.238" starttime="20191121 17:30:45.133"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.241" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.242" starttime="20191121 17:30:45.239"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.243" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.243" starttime="20191121 17:30:45.242"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.245" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.245" starttime="20191121 17:30:45.244"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.246" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.247" starttime="20191121 17:30:45.245"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.249" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:45.249" starttime="20191121 17:30:45.248"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.251" starttime="20191121 17:30:45.250"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.252" starttime="20191121 17:30:45.252"></status>
</kw>
<msg timestamp="20191121 17:30:45.253" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.253" starttime="20191121 17:30:45.247"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.256" starttime="20191121 17:30:45.255"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.262" starttime="20191121 17:30:45.257"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.262" starttime="20191121 17:30:45.256"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.264" starttime="20191121 17:30:45.263"></status>
</kw>
<msg timestamp="20191121 17:30:45.264" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.264" starttime="20191121 17:30:45.254"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.267" starttime="20191121 17:30:45.266"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.267" starttime="20191121 17:30:45.265"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.268" level="INFO">101.695</msg>
<status status="PASS" endtime="20191121 17:30:45.268" starttime="20191121 17:30:45.267"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.269" level="INFO">${elapsed} = 101</msg>
<status status="PASS" endtime="20191121 17:30:45.269" starttime="20191121 17:30:45.268"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.271" level="INFO">${elapsed} = 101</msg>
<status status="PASS" endtime="20191121 17:30:45.271" starttime="20191121 17:30:45.270"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.273" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.273" starttime="20191121 17:30:45.272"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.273" starttime="20191121 17:30:45.271"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.273" starttime="20191121 17:30:45.270"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.273" starttime="20191121 17:30:45.238"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.274" starttime="20191121 17:30:45.132"></status>
</kw>
<doc>接口名:创建商品

请求方式:Post

预期结果:输入错误参数,http响应码返回 422,返回的Json数据符合校验。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:45.274" starttime="20191121 17:30:44.974"></status>
</test>
<test id="s1-s1-s1-t5" name="Put Admin Commodities">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>commodity_name=${name}的商品</arg>
<arg>commodity_images=${commodity_images}</arg>
<arg>commodity_description=robottest</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:45.277" level="INFO">${essential_params} = {'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest'}</msg>
<status status="PASS" endtime="20191121 17:30:45.277" starttime="20191121 17:30:45.276"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>subtitle=商品</arg>
<arg>commodity_videos=${commodity_videos}</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:45.277" level="INFO">${unessential_params} = {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']}</msg>
<status status="PASS" endtime="20191121 17:30:45.278" starttime="20191121 17:30:45.277"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Put Admin Commodity Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:45.279" level="INFO">[{'commodity_description': 'robottest', 'subtitle': '商品', 'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}, {'commodity_description': 'robottest', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}]</msg>
<msg timestamp="20191121 17:30:45.279" level="INFO">${results} = [{'commodity_description': 'robottest', 'subtitle': '商品', 'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}, {'commodity...</msg>
<status status="PASS" endtime="20191121 17:30:45.279" starttime="20191121 17:30:45.278"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest', 'subtitle': '商品'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.398" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.398" starttime="20191121 17:30:45.281"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.401" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.401" starttime="20191121 17:30:45.400"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.403" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.403" starttime="20191121 17:30:45.401"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.404" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.404" starttime="20191121 17:30:45.403"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.406" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.406" starttime="20191121 17:30:45.405"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.409" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:45.409" starttime="20191121 17:30:45.408"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.411" starttime="20191121 17:30:45.409"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.412" starttime="20191121 17:30:45.411"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.413" starttime="20191121 17:30:45.407"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.414" level="INFO">114.175</msg>
<status status="PASS" endtime="20191121 17:30:45.414" starttime="20191121 17:30:45.413"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.416" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:45.416" starttime="20191121 17:30:45.415"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.418" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:45.418" starttime="20191121 17:30:45.417"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.422" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.422" starttime="20191121 17:30:45.421"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.422" starttime="20191121 17:30:45.419"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.422" starttime="20191121 17:30:45.416"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.423" starttime="20191121 17:30:45.399"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.423" starttime="20191121 17:30:45.280"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.423" starttime="20191121 17:30:45.280"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.423" starttime="20191121 17:30:45.280"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest', 'commodity_videos': ['https://u...">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.549" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.550" starttime="20191121 17:30:45.427"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.551" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.551" starttime="20191121 17:30:45.550"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.552" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.552" starttime="20191121 17:30:45.551"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.553" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.553" starttime="20191121 17:30:45.552"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.554" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.554" starttime="20191121 17:30:45.553"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.554" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:45.554" starttime="20191121 17:30:45.554"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.555" starttime="20191121 17:30:45.554"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.555" starttime="20191121 17:30:45.555"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.555" starttime="20191121 17:30:45.554"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.555" level="INFO">119.365</msg>
<status status="PASS" endtime="20191121 17:30:45.555" starttime="20191121 17:30:45.555"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.556" level="INFO">${elapsed} = 119</msg>
<status status="PASS" endtime="20191121 17:30:45.556" starttime="20191121 17:30:45.556"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.556" level="INFO">${elapsed} = 119</msg>
<status status="PASS" endtime="20191121 17:30:45.556" starttime="20191121 17:30:45.556"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.557" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.557"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.556"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.556"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.550"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.425"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.424"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.279"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.278"></status>
</kw>
<doc>接口名:修改商品

请求方式:Put

预期结果:输入正确id,正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:45.557" starttime="20191121 17:30:45.274"></status>
</test>
<test id="s1-s1-s1-t6" name="Put Admin Commodities Fail404">
<kw name="Put Admin Commodity Fail404">
<arguments>
<arg>commodity_id=sadsadsadsa</arg>
<arg>commodity_name=${name}的商品</arg>
<arg>subtitle=商品</arg>
<arg>commodity_images=${commodity_images}</arg>
<arg>commodity_videos=${commodity_videos}</arg>
<arg>commodity_description=robottest</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.673" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.673" starttime="20191121 17:30:45.559"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.676" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.676" starttime="20191121 17:30:45.675"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.678" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.678" starttime="20191121 17:30:45.677"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.679" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.680" starttime="20191121 17:30:45.678"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.681" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.681" starttime="20191121 17:30:45.680"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.684" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/sadsadsadsa</msg>
<status status="PASS" endtime="20191121 17:30:45.684" starttime="20191121 17:30:45.683"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.686" starttime="20191121 17:30:45.684"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.687" starttime="20191121 17:30:45.686"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.688" starttime="20191121 17:30:45.682"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.689" level="INFO">112.105</msg>
<status status="PASS" endtime="20191121 17:30:45.689" starttime="20191121 17:30:45.688"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.691" level="INFO">${elapsed} = 112</msg>
<status status="PASS" endtime="20191121 17:30:45.691" starttime="20191121 17:30:45.690"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.693" level="INFO">${elapsed} = 112</msg>
<status status="PASS" endtime="20191121 17:30:45.693" starttime="20191121 17:30:45.692"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.698" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.698" starttime="20191121 17:30:45.697"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.698" starttime="20191121 17:30:45.694"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.698" starttime="20191121 17:30:45.691"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.699" starttime="20191121 17:30:45.674"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.699" starttime="20191121 17:30:45.558"></status>
</kw>
<doc>接口名:修改商品

请求方式:Put

预期结果:输入错误commodity_id,正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:45.699" starttime="20191121 17:30:45.558"></status>
</test>
<test id="s1-s1-s1-t7" name="Put Admin Commodities Fail422">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:45.703" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:45.704" starttime="20191121 17:30:45.703"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>subtitle=aa</arg>
<arg>commodity_videos=aa</arg>
<arg>commodity_name=aaa</arg>
<arg>commodity_images=aaa</arg>
<arg>commodity_description=..</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:45.705" level="INFO">${unessential_params} = {'subtitle': 'aa', 'commodity_videos': 'aa', 'commodity_name': 'aaa', 'commodity_images': 'aaa', 'commodity_description': '..'}</msg>
<status status="PASS" endtime="20191121 17:30:45.705" starttime="20191121 17:30:45.704"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Put Admin Commodity Fail422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:45.707" level="INFO">[{'subtitle': 'aa'}, {'commodity_videos': 'aa'}, {'commodity_name': 'aaa'}, {'commodity_images': 'aaa'}, {'commodity_description': '..'}]</msg>
<msg timestamp="20191121 17:30:45.707" level="INFO">${results} = [{'subtitle': 'aa'}, {'commodity_videos': 'aa'}, {'commodity_name': 'aaa'}, {'commodity_images': 'aaa'}, {'commodity_description': '..'}]</msg>
<status status="PASS" endtime="20191121 17:30:45.707" starttime="20191121 17:30:45.707"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'subtitle': 'aa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.808" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.808" starttime="20191121 17:30:45.709"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.811" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.811" starttime="20191121 17:30:45.810"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.812" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.813" starttime="20191121 17:30:45.811"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.814" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.814" starttime="20191121 17:30:45.813"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.816" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.816" starttime="20191121 17:30:45.815"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.819" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:45.819" starttime="20191121 17:30:45.818"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.821" starttime="20191121 17:30:45.819"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.822" starttime="20191121 17:30:45.821"></status>
</kw>
<msg timestamp="20191121 17:30:45.823" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.823" starttime="20191121 17:30:45.816"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.825" starttime="20191121 17:30:45.824"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.833" starttime="20191121 17:30:45.827"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.833" starttime="20191121 17:30:45.826"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.834" starttime="20191121 17:30:45.833"></status>
</kw>
<msg timestamp="20191121 17:30:45.835" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.835" starttime="20191121 17:30:45.823"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.838" starttime="20191121 17:30:45.837"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.838" starttime="20191121 17:30:45.835"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.839" level="INFO">95.294</msg>
<status status="PASS" endtime="20191121 17:30:45.839" starttime="20191121 17:30:45.838"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.840" level="INFO">${elapsed} = 95</msg>
<status status="PASS" endtime="20191121 17:30:45.840" starttime="20191121 17:30:45.839"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.842" level="INFO">${elapsed} = 95</msg>
<status status="PASS" endtime="20191121 17:30:45.842" starttime="20191121 17:30:45.841"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.843" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.843"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.842"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.840"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.808"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.708"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.708"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.844" starttime="20191121 17:30:45.708"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_videos': 'aa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:45.945" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.945" starttime="20191121 17:30:45.846"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:45.948" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.948" starttime="20191121 17:30:45.947"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.950" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.950" starttime="20191121 17:30:45.949"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:45.951" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:45.952" starttime="20191121 17:30:45.950"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.953" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:45.953" starttime="20191121 17:30:45.952"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.956" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:45.956" starttime="20191121 17:30:45.955"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:45.958" starttime="20191121 17:30:45.956"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.959" starttime="20191121 17:30:45.958"></status>
</kw>
<msg timestamp="20191121 17:30:45.960" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.960" starttime="20191121 17:30:45.954"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.962" starttime="20191121 17:30:45.962"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.967" starttime="20191121 17:30:45.963"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.967" starttime="20191121 17:30:45.963"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.968" starttime="20191121 17:30:45.967"></status>
</kw>
<msg timestamp="20191121 17:30:45.968" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:45.968" starttime="20191121 17:30:45.960"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:45.970" starttime="20191121 17:30:45.969"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.970" starttime="20191121 17:30:45.969"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:45.971" level="INFO">96.53</msg>
<status status="PASS" endtime="20191121 17:30:45.971" starttime="20191121 17:30:45.970"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.972" level="INFO">${elapsed} = 96</msg>
<status status="PASS" endtime="20191121 17:30:45.972" starttime="20191121 17:30:45.971"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:45.973" level="INFO">${elapsed} = 96</msg>
<status status="PASS" endtime="20191121 17:30:45.973" starttime="20191121 17:30:45.972"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:45.974" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:45.974" starttime="20191121 17:30:45.974"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.974" starttime="20191121 17:30:45.973"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.974" starttime="20191121 17:30:45.972"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.974" starttime="20191121 17:30:45.946"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.974" starttime="20191121 17:30:45.845"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.975" starttime="20191121 17:30:45.845"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:45.975" starttime="20191121 17:30:45.844"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': 'aaa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.095" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.096" starttime="20191121 17:30:45.976"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.098" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.099" starttime="20191121 17:30:46.097"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.100" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.100" starttime="20191121 17:30:46.099"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.102" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.102" starttime="20191121 17:30:46.101"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.103" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.104" starttime="20191121 17:30:46.102"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.106" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:46.107" starttime="20191121 17:30:46.105"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.108" starttime="20191121 17:30:46.107"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.110" starttime="20191121 17:30:46.109"></status>
</kw>
<msg timestamp="20191121 17:30:46.110" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.111" starttime="20191121 17:30:46.104"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.113" starttime="20191121 17:30:46.112"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.120" starttime="20191121 17:30:46.114"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.120" starttime="20191121 17:30:46.114"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.122" starttime="20191121 17:30:46.121"></status>
</kw>
<msg timestamp="20191121 17:30:46.122" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.122" starttime="20191121 17:30:46.111"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.124" starttime="20191121 17:30:46.123"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.124" starttime="20191121 17:30:46.122"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.125" level="INFO">117.038</msg>
<status status="PASS" endtime="20191121 17:30:46.125" starttime="20191121 17:30:46.125"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.126" level="INFO">${elapsed} = 117</msg>
<status status="PASS" endtime="20191121 17:30:46.127" starttime="20191121 17:30:46.126"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.128" level="INFO">${elapsed} = 117</msg>
<status status="PASS" endtime="20191121 17:30:46.128" starttime="20191121 17:30:46.127"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.130" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:46.129"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:46.128"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:46.127"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:46.096"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:45.975"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:45.975"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.130" starttime="20191121 17:30:45.975"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_images': 'aaa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.237" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.237" starttime="20191121 17:30:46.132"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.240" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.240" starttime="20191121 17:30:46.239"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.242" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.242" starttime="20191121 17:30:46.241"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.243" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.244" starttime="20191121 17:30:46.242"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.245" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.245" starttime="20191121 17:30:46.244"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.248" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:46.248" starttime="20191121 17:30:46.247"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.250" starttime="20191121 17:30:46.249"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.251" starttime="20191121 17:30:46.250"></status>
</kw>
<msg timestamp="20191121 17:30:46.252" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.252" starttime="20191121 17:30:46.246"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.255" starttime="20191121 17:30:46.254"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.261" starttime="20191121 17:30:46.256"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.262" starttime="20191121 17:30:46.255"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.263" starttime="20191121 17:30:46.262"></status>
</kw>
<msg timestamp="20191121 17:30:46.264" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.264" starttime="20191121 17:30:46.252"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.267" starttime="20191121 17:30:46.266"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.267" starttime="20191121 17:30:46.264"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.268" level="INFO">102.14</msg>
<status status="PASS" endtime="20191121 17:30:46.268" starttime="20191121 17:30:46.267"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.269" level="INFO">${elapsed} = 102</msg>
<status status="PASS" endtime="20191121 17:30:46.269" starttime="20191121 17:30:46.268"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.271" level="INFO">${elapsed} = 102</msg>
<status status="PASS" endtime="20191121 17:30:46.271" starttime="20191121 17:30:46.270"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.273" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.273" starttime="20191121 17:30:46.272"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.273" starttime="20191121 17:30:46.271"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.273" starttime="20191121 17:30:46.269"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.273" starttime="20191121 17:30:46.237"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.274" starttime="20191121 17:30:46.131"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.274" starttime="20191121 17:30:46.131"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.274" starttime="20191121 17:30:46.131"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_description': '..'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.387" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.387" starttime="20191121 17:30:46.275"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.390" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.390" starttime="20191121 17:30:46.389"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.391" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.392" starttime="20191121 17:30:46.390"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.393" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.393" starttime="20191121 17:30:46.392"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.395" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.395" starttime="20191121 17:30:46.394"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.398" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:46.398" starttime="20191121 17:30:46.397"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.400" starttime="20191121 17:30:46.398"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.401" starttime="20191121 17:30:46.400"></status>
</kw>
<msg timestamp="20191121 17:30:46.402" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.402" starttime="20191121 17:30:46.396"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.404" starttime="20191121 17:30:46.403"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.411" starttime="20191121 17:30:46.406"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.411" starttime="20191121 17:30:46.405"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.413" starttime="20191121 17:30:46.412"></status>
</kw>
<msg timestamp="20191121 17:30:46.413" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.414" starttime="20191121 17:30:46.402"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.416" starttime="20191121 17:30:46.415"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.417" starttime="20191121 17:30:46.414"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.418" level="INFO">108.628</msg>
<status status="PASS" endtime="20191121 17:30:46.418" starttime="20191121 17:30:46.417"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.419" level="INFO">${elapsed} = 108</msg>
<status status="PASS" endtime="20191121 17:30:46.419" starttime="20191121 17:30:46.418"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.421" level="INFO">${elapsed} = 108</msg>
<status status="PASS" endtime="20191121 17:30:46.421" starttime="20191121 17:30:46.420"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.423" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.423" starttime="20191121 17:30:46.422"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.423" starttime="20191121 17:30:46.421"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.423" starttime="20191121 17:30:46.419"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.423" starttime="20191121 17:30:46.388"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:46.275"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:46.274"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:46.274"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:45.708"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:45.705"></status>
</kw>
<doc>接口名:修改商品

请求方式:Put

预期结果:输入错误参数,正确commodity_id,http响应码返回 204。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:46.424" starttime="20191121 17:30:45.701"></status>
</test>
<test id="s1-s1-s1-t8" name="Patch Admin Commodities Operation">
<kw name="Patch Admin Commodities Operation Success">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>operation=2</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Patch Admin Commodities Operation">
<doc>商品上架下架接口</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.553" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.553" starttime="20191121 17:30:46.427"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.556" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.556" starttime="20191121 17:30:46.555"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.558" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.558" starttime="20191121 17:30:46.557"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.559" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.559" starttime="20191121 17:30:46.558"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.561" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.561" starttime="20191121 17:30:46.560"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.564" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:46.564" starttime="20191121 17:30:46.563"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.566" starttime="20191121 17:30:46.564"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.567" starttime="20191121 17:30:46.566"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.568" starttime="20191121 17:30:46.562"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.569" level="INFO">123.229</msg>
<status status="PASS" endtime="20191121 17:30:46.569" starttime="20191121 17:30:46.568"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.571" level="INFO">${elapsed} = 123</msg>
<status status="PASS" endtime="20191121 17:30:46.571" starttime="20191121 17:30:46.570"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.573" level="INFO">${elapsed} = 123</msg>
<status status="PASS" endtime="20191121 17:30:46.574" starttime="20191121 17:30:46.572"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.577" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.577" starttime="20191121 17:30:46.576"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.577" starttime="20191121 17:30:46.574"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.578" starttime="20191121 17:30:46.571"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.578" starttime="20191121 17:30:46.554"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.578" starttime="20191121 17:30:46.426"></status>
</kw>
<doc>接口名:商品上架下架接口

请求方式:Patch

预期结果:输入正确id,正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:46.579" starttime="20191121 17:30:46.425"></status>
</test>
<test id="s1-s1-s1-t9" name="Patch Admin Commodities Operation Fail404">
<kw name="Patch Admin Commodities Operation Fail404">
<arguments>
<arg>commodity_id=dsadsadq342334</arg>
<arg>operation=1</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Patch Admin Commodities Operation">
<doc>商品上架下架接口</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.701" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.701" starttime="20191121 17:30:46.584"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.704" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.704" starttime="20191121 17:30:46.703"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.706" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.706" starttime="20191121 17:30:46.705"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.707" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.708" starttime="20191121 17:30:46.706"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.709" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.709" starttime="20191121 17:30:46.708"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.712" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/dsadsadq342334</msg>
<status status="PASS" endtime="20191121 17:30:46.712" starttime="20191121 17:30:46.711"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.714" starttime="20191121 17:30:46.712"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.715" starttime="20191121 17:30:46.714"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.716" starttime="20191121 17:30:46.710"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.717" level="INFO">112.836</msg>
<status status="PASS" endtime="20191121 17:30:46.717" starttime="20191121 17:30:46.716"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.719" level="INFO">${elapsed} = 112</msg>
<status status="PASS" endtime="20191121 17:30:46.719" starttime="20191121 17:30:46.718"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.721" level="INFO">${elapsed} = 112</msg>
<status status="PASS" endtime="20191121 17:30:46.721" starttime="20191121 17:30:46.720"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.725" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.725" starttime="20191121 17:30:46.724"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.725" starttime="20191121 17:30:46.722"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.726" starttime="20191121 17:30:46.719"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.726" starttime="20191121 17:30:46.702"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.726" starttime="20191121 17:30:46.583"></status>
</kw>
<doc>接口名:商品上架下架接口

请求方式:Patch

预期结果:输入错误id,正确参数,http响应码返回 404。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:46.727" starttime="20191121 17:30:46.580"></status>
</test>
<test id="s1-s1-s1-t10" name="Patch Admin Commodities Operation Fail422">
<kw name="Patch Admin Commodities Operation Fail422">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>operation=dsadsadsadas</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Patch Admin Commodities Operation">
<doc>商品上架下架接口</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.833" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.833" starttime="20191121 17:30:46.732"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:46.836" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.836" starttime="20191121 17:30:46.835"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.838" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.838" starttime="20191121 17:30:46.836"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:46.839" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:46.839" starttime="20191121 17:30:46.838"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.842" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:46.842" starttime="20191121 17:30:46.840"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.845" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:46.845" starttime="20191121 17:30:46.844"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.847" starttime="20191121 17:30:46.845"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.848" starttime="20191121 17:30:46.847"></status>
</kw>
<msg timestamp="20191121 17:30:46.849" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.849" starttime="20191121 17:30:46.843"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.851" starttime="20191121 17:30:46.850"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.858" starttime="20191121 17:30:46.852"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.858" starttime="20191121 17:30:46.852"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.859" starttime="20191121 17:30:46.858"></status>
</kw>
<msg timestamp="20191121 17:30:46.860" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:46.860" starttime="20191121 17:30:46.849"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:46.862" starttime="20191121 17:30:46.862"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.863" starttime="20191121 17:30:46.860"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.864" level="INFO">97.818</msg>
<status status="PASS" endtime="20191121 17:30:46.864" starttime="20191121 17:30:46.863"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.865" level="INFO">${elapsed} = 97</msg>
<status status="PASS" endtime="20191121 17:30:46.865" starttime="20191121 17:30:46.864"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:46.867" level="INFO">${elapsed} = 97</msg>
<status status="PASS" endtime="20191121 17:30:46.867" starttime="20191121 17:30:46.866"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:46.868" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:46.868" starttime="20191121 17:30:46.868"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.869" starttime="20191121 17:30:46.867"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.869" starttime="20191121 17:30:46.865"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.869" starttime="20191121 17:30:46.834"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.869" starttime="20191121 17:30:46.731"></status>
</kw>
<doc>接口名:商品上架下架接口

请求方式:Patch

预期结果:输入错误参数,正确id,http响应码返回 422。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:46.869" starttime="20191121 17:30:46.728"></status>
</test>
<test id="s1-s1-s1-t11" name="Get Admin Commodity Detail">
<kw name="Get Admin Commodity Detail Success">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodity Detail">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:46.991" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:46.991" starttime="20191121 17:30:46.872"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:46.994" level="INFO">{'subtitle': '', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'robottest', 'created_time': 1574328644.924063, 'removal_time': 1574328646.549427, 'updated_time': 1574328646.550012, 'commodity_name': '王林的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '97e789540c4111eabc550242ac15000a', 'shelf_time': None}</msg>
<status status="PASS" endtime="20191121 17:30:46.994" starttime="20191121 17:30:46.993"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:46.994" starttime="20191121 17:30:46.992"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_commodity/get_detail_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.000" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.001" starttime="20191121 17:30:46.996"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.002" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.002" starttime="20191121 17:30:47.001"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.004" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.004" starttime="20191121 17:30:47.003"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.005" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.006" starttime="20191121 17:30:47.004"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.008" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:47.008" starttime="20191121 17:30:47.007"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.010" starttime="20191121 17:30:47.009"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.012" starttime="20191121 17:30:47.011"></status>
</kw>
<msg timestamp="20191121 17:30:47.012" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:47.012" starttime="20191121 17:30:47.006"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.015" starttime="20191121 17:30:47.014"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.021" starttime="20191121 17:30:47.016"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.022" starttime="20191121 17:30:47.015"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.023" starttime="20191121 17:30:47.022"></status>
</kw>
<msg timestamp="20191121 17:30:47.023" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:47.023" starttime="20191121 17:30:47.013"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.023" starttime="20191121 17:30:47.023"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.024" starttime="20191121 17:30:47.023"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.024" level="INFO">116.558</msg>
<status status="PASS" endtime="20191121 17:30:47.024" starttime="20191121 17:30:47.024"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.024" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:47.024" starttime="20191121 17:30:47.024"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.025" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:47.025" starttime="20191121 17:30:47.024"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.025" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.025" starttime="20191121 17:30:47.025"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.025" starttime="20191121 17:30:47.025"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.025" starttime="20191121 17:30:47.024"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.026" starttime="20191121 17:30:46.995"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.026" starttime="20191121 17:30:46.871"></status>
</kw>
<doc>接口名:获取商品详情

请求方式:Get

预期结果:输入正确参数,http响应码返回 200,返回的Json数据为 commodity 对象。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.026" starttime="20191121 17:30:46.870"></status>
</test>
<test id="s1-s1-s1-t12" name="Get Admin Commodity Detail Fail404">
<kw name="Get Admin Commodity Detail Fail404">
<arguments>
<arg>commodity_id=dsadsadq342334</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodity Detail">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.154" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.154" starttime="20191121 17:30:47.027"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.157" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.157" starttime="20191121 17:30:47.156"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.160" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.160" starttime="20191121 17:30:47.158"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.162" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.162" starttime="20191121 17:30:47.160"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.163" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.164" starttime="20191121 17:30:47.162"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.166" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/dsadsadq342334</msg>
<status status="PASS" endtime="20191121 17:30:47.166" starttime="20191121 17:30:47.165"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.168" starttime="20191121 17:30:47.167"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.169" starttime="20191121 17:30:47.169"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.170" starttime="20191121 17:30:47.164"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.171" level="INFO">125.438</msg>
<status status="PASS" endtime="20191121 17:30:47.171" starttime="20191121 17:30:47.170"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.173" level="INFO">${elapsed} = 125</msg>
<status status="PASS" endtime="20191121 17:30:47.173" starttime="20191121 17:30:47.172"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.175" level="INFO">${elapsed} = 125</msg>
<status status="PASS" endtime="20191121 17:30:47.176" starttime="20191121 17:30:47.175"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.179" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.179" starttime="20191121 17:30:47.178"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.179" starttime="20191121 17:30:47.176"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.180" starttime="20191121 17:30:47.173"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.180" starttime="20191121 17:30:47.155"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.180" starttime="20191121 17:30:47.027"></status>
</kw>
<doc>接口名:获取商品详情

请求方式:Get

预期结果:输入错误commodity_id,http响应码返回 404。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.181" starttime="20191121 17:30:47.026"></status>
</test>
<test id="s1-s1-s1-t13" name="Post Admin Commodity Specification">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>specification_id=28f8c6820b3011ea9d820242ac15000a</arg>
<arg>specification_name=库存1</arg>
<arg>unit_original_price=12300</arg>
<arg>unit_sell_price=1200</arg>
<arg>stock=10</arg>
</arguments>
<assign>
<var>${specification}</var>
</assign>
<msg timestamp="20191121 17:30:47.186" level="INFO">${specification} = {'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'specification_name': '库存1', 'unit_original_price': '12300', 'unit_sell_price': '1200', 'stock': '10'}</msg>
<status status="PASS" endtime="20191121 17:30:47.186" starttime="20191121 17:30:47.185"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${specification}</arg>
</arguments>
<assign>
<var>${specification_objs}</var>
</assign>
<msg timestamp="20191121 17:30:47.187" level="INFO">${specification_objs} = [{'unit_original_price': '12300', 'unit_sell_price': '1200', 'specification_name': '库存1', 'stock': '10', 'specification_id': '28f8c6820b3011ea9d820242ac15000a'}]</msg>
<status status="PASS" endtime="20191121 17:30:47.187" starttime="20191121 17:30:47.187"></status>
</kw>
<kw name="Post Admin Commodity Specification Success">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>specification_objs=${specification_objs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodity Specification">
<doc>创建/修改规格</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.320" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.321" starttime="20191121 17:30:47.189"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.324" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.324" starttime="20191121 17:30:47.322"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.325" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.325" starttime="20191121 17:30:47.324"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.327" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.327" starttime="20191121 17:30:47.326"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.329" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.329" starttime="20191121 17:30:47.328"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.331" level="INFO">https://mall-server-d.parkone.cn//admin/commodities/97e789540c4111eabc550242ac15000a/specification</msg>
<status status="PASS" endtime="20191121 17:30:47.332" starttime="20191121 17:30:47.331"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.333" starttime="20191121 17:30:47.332"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.336" starttime="20191121 17:30:47.334"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.336" starttime="20191121 17:30:47.329"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.338" level="INFO">127.838</msg>
<status status="PASS" endtime="20191121 17:30:47.338" starttime="20191121 17:30:47.337"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.339" level="INFO">${elapsed} = 127</msg>
<status status="PASS" endtime="20191121 17:30:47.339" starttime="20191121 17:30:47.338"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.342" level="INFO">${elapsed} = 127</msg>
<status status="PASS" endtime="20191121 17:30:47.342" starttime="20191121 17:30:47.341"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.345" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.345" starttime="20191121 17:30:47.344"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.346" starttime="20191121 17:30:47.342"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.346" starttime="20191121 17:30:47.340"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.346" starttime="20191121 17:30:47.321"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.347" starttime="20191121 17:30:47.188"></status>
</kw>
<doc>接口名:创建/修改规格

请求方式:Post

预期结果:输入正确参数,http响应码返回 201,返回的Json数据符合验证。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.347" starttime="20191121 17:30:47.182"></status>
</test>
<test id="s1-s1-s1-t14" name="Post Admin Commodity Specification Fail404">
<kw name="Post Admin Commodity Specification Fail404">
<arguments>
<arg>commodity_id=dsadsadq342334</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodity Specification">
<doc>创建/修改规格</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.471" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.471" starttime="20191121 17:30:47.352"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.474" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.474" starttime="20191121 17:30:47.473"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.476" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.476" starttime="20191121 17:30:47.475"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.477" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.478" starttime="20191121 17:30:47.476"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.479" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.479" starttime="20191121 17:30:47.478"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.482" level="INFO">https://mall-server-d.parkone.cn//admin/commodities/dsadsadq342334/specification</msg>
<status status="PASS" endtime="20191121 17:30:47.482" starttime="20191121 17:30:47.481"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.484" starttime="20191121 17:30:47.483"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.485" starttime="20191121 17:30:47.484"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.486" starttime="20191121 17:30:47.480"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.487" level="INFO">114.843</msg>
<status status="PASS" endtime="20191121 17:30:47.487" starttime="20191121 17:30:47.486"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.489" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:47.489" starttime="20191121 17:30:47.488"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.491" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:47.492" starttime="20191121 17:30:47.490"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.496" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.496" starttime="20191121 17:30:47.494"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.496" starttime="20191121 17:30:47.492"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.496" starttime="20191121 17:30:47.489"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.497" starttime="20191121 17:30:47.472"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.497" starttime="20191121 17:30:47.351"></status>
</kw>
<doc>接口名:创建/修改规格

请求方式:Post

预期结果:输入错误id,正确参数,http响应码返回 201,返回的Json数据符合验证。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.498" starttime="20191121 17:30:47.348"></status>
</test>
<test id="s1-s1-s1-t15" name="Post Admin Commodity Specification Fail422">
<kw name="Post Admin Commodity Specification Fail422">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodity Specification">
<doc>创建/修改规格</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.618" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.618" starttime="20191121 17:30:47.503"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.621" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:47.621" starttime="20191121 17:30:47.620"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.622" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:47.623" starttime="20191121 17:30:47.621"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.624" level="INFO">${status_tag} = ShouldBe:422But:204</msg>
<status status="PASS" endtime="20191121 17:30:47.624" starttime="20191121 17:30:47.623"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.626" level="INFO">Set tag 'ShouldBe:422But:204'.</msg>
<status status="PASS" endtime="20191121 17:30:47.626" starttime="20191121 17:30:47.625"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.628" level="INFO">https://mall-server-d.parkone.cn//admin/commodities/97e789540c4111eabc550242ac15000a/specification</msg>
<status status="PASS" endtime="20191121 17:30:47.629" starttime="20191121 17:30:47.628"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:47.631" level="FAIL">204 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:47.631" starttime="20191121 17:30:47.629"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:47.634" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：min/commodities/97e789540c4111eabc550242ac15000a/specification 错误。test_case：Post Admin Commodity Specification Fail422:应返回422，但返回204。</msg>
<status status="PASS" endtime="20191121 17:30:47.635" starttime="20191121 17:30:47.633"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.635" starttime="20191121 17:30:47.632"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:47.635" starttime="20191121 17:30:47.626"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:47.636" starttime="20191121 17:30:47.618"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:47.636" starttime="20191121 17:30:47.502"></status>
</kw>
<doc>接口名:创建/修改规格

请求方式:Post

预期结果:输入错误参数,http响应码返回 422,返回的Json数据符合验证。</doc>
<tags>
<tag>BugLevel:Critical</tag>
<tag>model:admin_commodity</tag>
<tag>Respcode:422</tag>
<tag>ShouldBe:422But:204</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:47.637" starttime="20191121 17:30:47.499">204 != 422</status>
</test>
<test id="s1-s1-s1-t16" name="Delete Admin Commodities">
<kw name="Delete Admin Commodities Success">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Delete Admin Commodities">
<doc>删除商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.773" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.773" starttime="20191121 17:30:47.642"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.776" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.776" starttime="20191121 17:30:47.774"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.777" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.777" starttime="20191121 17:30:47.776"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.779" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.779" starttime="20191121 17:30:47.778"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.780" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.781" starttime="20191121 17:30:47.779"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.783" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:47.783" starttime="20191121 17:30:47.782"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.785" starttime="20191121 17:30:47.784"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.787" starttime="20191121 17:30:47.786"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.787" starttime="20191121 17:30:47.781"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.788" level="INFO">129.096</msg>
<status status="PASS" endtime="20191121 17:30:47.789" starttime="20191121 17:30:47.788"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.790" level="INFO">${elapsed} = 129</msg>
<status status="PASS" endtime="20191121 17:30:47.790" starttime="20191121 17:30:47.789"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.793" level="INFO">${elapsed} = 129</msg>
<status status="PASS" endtime="20191121 17:30:47.793" starttime="20191121 17:30:47.792"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.796" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.797" starttime="20191121 17:30:47.795"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.797" starttime="20191121 17:30:47.793"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.797" starttime="20191121 17:30:47.791"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.797" starttime="20191121 17:30:47.773"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.798" starttime="20191121 17:30:47.641"></status>
</kw>
<doc>接口名:删除商品

请求方式:Delete

预期结果:输入正确id,正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.798" starttime="20191121 17:30:47.638"></status>
</test>
<test id="s1-s1-s1-t17" name="Delete Admin Commodities Fail404">
<kw name="Delete Admin Commodities Fail404">
<arguments>
<arg>commodity_id=sadsadsadsa</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Delete Admin Commodities">
<doc>删除商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:47.913" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.914" starttime="20191121 17:30:47.803"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:47.917" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.917" starttime="20191121 17:30:47.915"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.918" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.919" starttime="20191121 17:30:47.917"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:47.920" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:47.920" starttime="20191121 17:30:47.919"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.922" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:47.922" starttime="20191121 17:30:47.920"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.925" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/sadsadsadsa</msg>
<status status="PASS" endtime="20191121 17:30:47.925" starttime="20191121 17:30:47.924"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:47.927" starttime="20191121 17:30:47.926"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:47.929" starttime="20191121 17:30:47.928"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.929" starttime="20191121 17:30:47.922"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:47.930" level="INFO">106.905</msg>
<status status="PASS" endtime="20191121 17:30:47.931" starttime="20191121 17:30:47.930"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.932" level="INFO">${elapsed} = 106</msg>
<status status="PASS" endtime="20191121 17:30:47.932" starttime="20191121 17:30:47.931"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:47.935" level="INFO">${elapsed} = 106</msg>
<status status="PASS" endtime="20191121 17:30:47.935" starttime="20191121 17:30:47.934"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:47.938" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:47.938" starttime="20191121 17:30:47.937"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.939" starttime="20191121 17:30:47.935"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.939" starttime="20191121 17:30:47.933"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.939" starttime="20191121 17:30:47.914"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:47.940" starttime="20191121 17:30:47.802"></status>
</kw>
<doc>接口名:删除商品

请求方式:Delete

预期结果:输入错误commodity_id,正确参数,http响应码返回 404。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:47.940" starttime="20191121 17:30:47.799"></status>
</test>
<kw type="teardown" library="robot_mall_service_library.commodity.CommodityLibrary" name="Logout">
<status status="PASS" endtime="20191121 17:30:47.986" starttime="20191121 17:30:47.943"></status>
</kw>
<doc>admin_commodity</doc>
<status status="FAIL" endtime="20191121 17:30:47.987" starttime="20191121 17:30:41.777"></status>
</suite>
<suite id="s1-s1-s2" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_commodity/commodity.unauthorized.robot" name="Commodity.Unauthorized">
<test id="s1-s1-s2-t1" name="Get Admin Commodities Without Login">
<kw name="Get Admin Commodities Fail403">
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.193" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.193" starttime="20191121 17:30:48.007"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.194" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.194" starttime="20191121 17:30:48.194"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.195" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.195" starttime="20191121 17:30:48.194"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.195" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.195" starttime="20191121 17:30:48.195"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.195" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.195" starttime="20191121 17:30:48.195"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.196" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:48.196" starttime="20191121 17:30:48.196"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.196" starttime="20191121 17:30:48.196"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.197" starttime="20191121 17:30:48.196"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.197" starttime="20191121 17:30:48.195"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.197" level="INFO">185.201</msg>
<status status="PASS" endtime="20191121 17:30:48.197" starttime="20191121 17:30:48.197"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.198" level="INFO">${elapsed} = 185</msg>
<status status="PASS" endtime="20191121 17:30:48.198" starttime="20191121 17:30:48.197"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.198" level="INFO">${elapsed} = 185</msg>
<status status="PASS" endtime="20191121 17:30:48.198" starttime="20191121 17:30:48.198"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.199" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.199" starttime="20191121 17:30:48.199"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.199" starttime="20191121 17:30:48.198"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.199" starttime="20191121 17:30:48.198"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.199" starttime="20191121 17:30:48.194"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.199" starttime="20191121 17:30:48.006"></status>
</kw>
<doc>接口名:获取检车线列表

请求方式:Get

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.200" starttime="20191121 17:30:48.006"></status>
</test>
<test id="s1-s1-s2-t2" name="Post Admin Commodities Without Login">
<kw library="utils_library.BaseUtilsLibrary" name="Faker Name">
<doc>生成虚假测试名字
:return: 虚假测试名字</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20191121 17:30:48.213" level="INFO">${name} = 曾萍</msg>
<status status="PASS" endtime="20191121 17:30:48.213" starttime="20191121 17:30:48.201"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.213" level="INFO">${name} = 曾萍</msg>
<status status="PASS" endtime="20191121 17:30:48.213" starttime="20191121 17:30:48.213"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg</arg>
</arguments>
<assign>
<var>${commodity_images}</var>
</assign>
<msg timestamp="20191121 17:30:48.214" level="INFO">${commodity_images} = ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']</msg>
<status status="PASS" endtime="20191121 17:30:48.214" starttime="20191121 17:30:48.213"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4</arg>
</arguments>
<assign>
<var>${commodity_videos}</var>
</assign>
<msg timestamp="20191121 17:30:48.214" level="INFO">${commodity_videos} = ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']</msg>
<status status="PASS" endtime="20191121 17:30:48.214" starttime="20191121 17:30:48.214"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${commodity_images}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.214" level="INFO">${commodity_images} = ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']</msg>
<status status="PASS" endtime="20191121 17:30:48.214" starttime="20191121 17:30:48.214"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${commodity_videos}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.215" level="INFO">${commodity_videos} = ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']</msg>
<status status="PASS" endtime="20191121 17:30:48.215" starttime="20191121 17:30:48.215"></status>
</kw>
<kw name="Post Admin Commodity Fail403">
<arguments>
<arg>commodity_name=${name}的商品</arg>
<arg>subtitle=商品</arg>
<arg>commodity_images=${commodity_images}</arg>
<arg>commodity_videos=${commodity_videos}</arg>
<arg>commodity_description=test</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodities">
<doc>创建商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.293" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.293" starttime="20191121 17:30:48.215"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.296" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.296" starttime="20191121 17:30:48.295"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.297" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.298" starttime="20191121 17:30:48.296"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.299" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.299" starttime="20191121 17:30:48.298"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.301" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.301" starttime="20191121 17:30:48.300"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.303" level="INFO">https://mall-server-d.parkone.cn/admin/commodities</msg>
<status status="PASS" endtime="20191121 17:30:48.304" starttime="20191121 17:30:48.303"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.305" starttime="20191121 17:30:48.304"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.307" starttime="20191121 17:30:48.306"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.307" starttime="20191121 17:30:48.301"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.309" level="INFO">74.979</msg>
<status status="PASS" endtime="20191121 17:30:48.309" starttime="20191121 17:30:48.308"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.310" level="INFO">${elapsed} = 74</msg>
<status status="PASS" endtime="20191121 17:30:48.311" starttime="20191121 17:30:48.309"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.313" level="INFO">${elapsed} = 74</msg>
<status status="PASS" endtime="20191121 17:30:48.313" starttime="20191121 17:30:48.312"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.316" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.317" starttime="20191121 17:30:48.315"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.317" starttime="20191121 17:30:48.314"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.317" starttime="20191121 17:30:48.311"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.317" starttime="20191121 17:30:48.293"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.318" starttime="20191121 17:30:48.215"></status>
</kw>
<doc>接口名:创建商品

请求方式:Post

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.318" starttime="20191121 17:30:48.200"></status>
</test>
<test id="s1-s1-s2-t3" name="Put Admin Commodities Without Login">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>commodity_name=${name}的商品</arg>
<arg>commodity_images=${commodity_images}</arg>
<arg>commodity_description=robottest</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:48.323" level="INFO">${essential_params} = {'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest'}</msg>
<status status="PASS" endtime="20191121 17:30:48.323" starttime="20191121 17:30:48.322"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>subtitle=商品</arg>
<arg>commodity_videos=${commodity_videos}</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:48.324" level="INFO">${unessential_params} = {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4']}</msg>
<status status="PASS" endtime="20191121 17:30:48.325" starttime="20191121 17:30:48.324"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Put Admin Commodity Fail403</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:48.327" level="INFO">[{'commodity_description': 'robottest', 'subtitle': '商品', 'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}, {'commodity_description': 'robottest', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}]</msg>
<msg timestamp="20191121 17:30:48.327" level="INFO">${results} = [{'commodity_description': 'robottest', 'subtitle': '商品', 'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg']}, {'commodity...</msg>
<status status="PASS" endtime="20191121 17:30:48.327" starttime="20191121 17:30:48.326"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest', 'subtitle': '商品'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail403">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.409" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.409" starttime="20191121 17:30:48.329"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.412" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.413" starttime="20191121 17:30:48.411"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.414" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.414" starttime="20191121 17:30:48.413"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.416" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.416" starttime="20191121 17:30:48.415"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.417" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.418" starttime="20191121 17:30:48.416"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.420" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:48.421" starttime="20191121 17:30:48.419"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.422" starttime="20191121 17:30:48.421"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.424" starttime="20191121 17:30:48.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.424" starttime="20191121 17:30:48.418"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.426" level="INFO">76.453</msg>
<status status="PASS" endtime="20191121 17:30:48.426" starttime="20191121 17:30:48.425"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.427" level="INFO">${elapsed} = 76</msg>
<status status="PASS" endtime="20191121 17:30:48.428" starttime="20191121 17:30:48.426"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.430" level="INFO">${elapsed} = 76</msg>
<status status="PASS" endtime="20191121 17:30:48.430" starttime="20191121 17:30:48.429"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.433" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.433" starttime="20191121 17:30:48.432"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.434" starttime="20191121 17:30:48.431"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.434" starttime="20191121 17:30:48.428"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.434" starttime="20191121 17:30:48.410"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.435" starttime="20191121 17:30:48.328"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.435" starttime="20191121 17:30:48.328"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.435" starttime="20191121 17:30:48.328"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '曾萍的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_description': 'robottest', 'commodity_videos': ['https://u...">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Put Admin Commodity Fail403">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Put Admin Commodities">
<doc>修改商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.517" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.517" starttime="20191121 17:30:48.438"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.520" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.520" starttime="20191121 17:30:48.519"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.522" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.522" starttime="20191121 17:30:48.521"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.523" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.524" starttime="20191121 17:30:48.522"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.526" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.526" starttime="20191121 17:30:48.524"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.529" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:48.529" starttime="20191121 17:30:48.528"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.531" starttime="20191121 17:30:48.529"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.532" starttime="20191121 17:30:48.531"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.533" starttime="20191121 17:30:48.527"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.534" level="INFO">75.658</msg>
<status status="PASS" endtime="20191121 17:30:48.534" starttime="20191121 17:30:48.533"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.536" level="INFO">${elapsed} = 75</msg>
<status status="PASS" endtime="20191121 17:30:48.536" starttime="20191121 17:30:48.535"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.538" level="INFO">${elapsed} = 75</msg>
<status status="PASS" endtime="20191121 17:30:48.539" starttime="20191121 17:30:48.537"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.542" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.542" starttime="20191121 17:30:48.541"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.542" starttime="20191121 17:30:48.539"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.542" starttime="20191121 17:30:48.536"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.543" starttime="20191121 17:30:48.518"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.543" starttime="20191121 17:30:48.436"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.543" starttime="20191121 17:30:48.436"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.543" starttime="20191121 17:30:48.435"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.543" starttime="20191121 17:30:48.327"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.544" starttime="20191121 17:30:48.325"></status>
</kw>
<doc>接口名:修改商品

请求方式:Put

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.544" starttime="20191121 17:30:48.319"></status>
</test>
<test id="s1-s1-s2-t4" name="Patch Admin Commodities Operation Without Login">
<kw name="Patch Admin Commodities Operation Fail403">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>operation=1</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Patch Admin Commodities Operation">
<doc>商品上架下架接口</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.636" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.636" starttime="20191121 17:30:48.549"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.639" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.639" starttime="20191121 17:30:48.638"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.641" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.641" starttime="20191121 17:30:48.640"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.642" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.642" starttime="20191121 17:30:48.641"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.644" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.644" starttime="20191121 17:30:48.643"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.647" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:48.647" starttime="20191121 17:30:48.646"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.649" starttime="20191121 17:30:48.647"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.650" starttime="20191121 17:30:48.649"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.651" starttime="20191121 17:30:48.645"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.652" level="INFO">83.218</msg>
<status status="PASS" endtime="20191121 17:30:48.652" starttime="20191121 17:30:48.651"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.654" level="INFO">${elapsed} = 83</msg>
<status status="PASS" endtime="20191121 17:30:48.654" starttime="20191121 17:30:48.653"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.656" level="INFO">${elapsed} = 83</msg>
<status status="PASS" endtime="20191121 17:30:48.657" starttime="20191121 17:30:48.656"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.660" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.661" starttime="20191121 17:30:48.659"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.661" starttime="20191121 17:30:48.657"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.661" starttime="20191121 17:30:48.654"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.661" starttime="20191121 17:30:48.637"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.662" starttime="20191121 17:30:48.548"></status>
</kw>
<doc>接口名:商品上架下架接口

请求方式:Patch

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.662" starttime="20191121 17:30:48.545"></status>
</test>
<test id="s1-s1-s2-t5" name="Get Admin Commodity Detail Without Login">
<kw name="Get Admin Commodity Detail Fail403">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Get Admin Commodity Detail">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.748" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.748" starttime="20191121 17:30:48.667"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.751" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.751" starttime="20191121 17:30:48.750"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.753" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.753" starttime="20191121 17:30:48.752"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.755" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.755" starttime="20191121 17:30:48.754"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.756" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.756" starttime="20191121 17:30:48.755"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.759" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:48.759" starttime="20191121 17:30:48.758"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.761" starttime="20191121 17:30:48.760"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.762" starttime="20191121 17:30:48.762"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.763" starttime="20191121 17:30:48.757"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.764" level="INFO">78.095</msg>
<status status="PASS" endtime="20191121 17:30:48.764" starttime="20191121 17:30:48.763"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.766" level="INFO">${elapsed} = 78</msg>
<status status="PASS" endtime="20191121 17:30:48.766" starttime="20191121 17:30:48.765"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.769" level="INFO">${elapsed} = 78</msg>
<status status="PASS" endtime="20191121 17:30:48.769" starttime="20191121 17:30:48.768"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.772" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.772" starttime="20191121 17:30:48.771"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.772" starttime="20191121 17:30:48.769"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.773" starttime="20191121 17:30:48.766"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.773" starttime="20191121 17:30:48.749"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.773" starttime="20191121 17:30:48.666"></status>
</kw>
<doc>接口名:获取商品详情

请求方式:Get

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.774" starttime="20191121 17:30:48.663"></status>
</test>
<test id="s1-s1-s2-t6" name="Post Admin Commodity Specification Without Login">
<kw name="Post Admin Commodity Specification Fail403">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>specification_objs=</arg>
<arg>delete_specification_ids=</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Post Admin Commodity Specification">
<doc>创建/修改规格</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:48.875" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.875" starttime="20191121 17:30:48.779"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:48.878" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.878" starttime="20191121 17:30:48.877"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.880" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.880" starttime="20191121 17:30:48.879"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:48.881" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:48.881" starttime="20191121 17:30:48.880"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.883" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:48.883" starttime="20191121 17:30:48.882"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.886" level="INFO">https://mall-server-d.parkone.cn//admin/commodities/97e789540c4111eabc550242ac15000a/specification</msg>
<status status="PASS" endtime="20191121 17:30:48.886" starttime="20191121 17:30:48.885"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:48.888" starttime="20191121 17:30:48.886"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:48.889" starttime="20191121 17:30:48.888"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.890" starttime="20191121 17:30:48.884"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:48.891" level="INFO">92.747</msg>
<status status="PASS" endtime="20191121 17:30:48.891" starttime="20191121 17:30:48.890"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.893" level="INFO">${elapsed} = 92</msg>
<status status="PASS" endtime="20191121 17:30:48.893" starttime="20191121 17:30:48.892"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:48.895" level="INFO">${elapsed} = 92</msg>
<status status="PASS" endtime="20191121 17:30:48.895" starttime="20191121 17:30:48.894"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:48.898" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:48.899" starttime="20191121 17:30:48.898"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.899" starttime="20191121 17:30:48.896"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.899" starttime="20191121 17:30:48.893"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.900" starttime="20191121 17:30:48.876"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:48.900" starttime="20191121 17:30:48.778"></status>
</kw>
<doc>接口名:创建/修改规格

请求方式:Post

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:48.900" starttime="20191121 17:30:48.775"></status>
</test>
<test id="s1-s1-s2-t7" name="Delete Admin Commodities Without Login">
<kw name="Delete Admin Commodities Fail403">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="robot_mall_service_library.commodity.CommodityLibrary" name="Delete Admin Commodities">
<doc>删除商品</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:49.001" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.001" starttime="20191121 17:30:48.904"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:49.004" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.004" starttime="20191121 17:30:49.003"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.006" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.006" starttime="20191121 17:30:49.005"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:49.008" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.008" starttime="20191121 17:30:49.006"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.009" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.009" starttime="20191121 17:30:49.008"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.015" level="INFO">https://mall-server-d.parkone.cn/admin/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:49.015" starttime="20191121 17:30:49.014"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.017" starttime="20191121 17:30:49.016"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.018" starttime="20191121 17:30:49.018"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.019" starttime="20191121 17:30:49.010"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.020" level="INFO">93.139</msg>
<status status="PASS" endtime="20191121 17:30:49.020" starttime="20191121 17:30:49.019"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.022" level="INFO">${elapsed} = 93</msg>
<status status="PASS" endtime="20191121 17:30:49.022" starttime="20191121 17:30:49.021"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.024" level="INFO">${elapsed} = 93</msg>
<status status="PASS" endtime="20191121 17:30:49.025" starttime="20191121 17:30:49.024"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:49.027" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:49.028" starttime="20191121 17:30:49.027"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.028" starttime="20191121 17:30:49.025"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.028" starttime="20191121 17:30:49.022"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.029" starttime="20191121 17:30:49.002"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.029" starttime="20191121 17:30:48.903"></status>
</kw>
<doc>接口名:删除商品

请求方式:Delete

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_commodity</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:49.029" starttime="20191121 17:30:48.901"></status>
</test>
<doc>admin_commodity</doc>
<status status="PASS" endtime="20191121 17:30:49.031" starttime="20191121 17:30:47.996"></status>
</suite>
<status status="FAIL" endtime="20191121 17:30:49.036" starttime="20191121 17:30:41.776"></status>
</suite>
<suite id="s1-s2" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_order" name="Admin Order">
<suite id="s1-s2-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_order/order.robot" name="Order">
<kw type="setup" library="robot_mall_service_library.order.OrderLibrary" name="Login">
<arguments>
<arg>${admin_username}</arg>
<arg>${admin_password}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.312" starttime="20191121 17:30:49.053"></status>
</kw>
<test id="s1-s2-s1-t1" name="Get Admin Orders">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:49.316" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:49.316" starttime="20191121 17:30:49.315"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_status=1</arg>
<arg>delivery_status=1</arg>
<arg>mobile=13188676566</arg>
<arg>contact=wy</arg>
<arg>order_id=7e60145c0b5511ea9dbb0242ac15000a</arg>
<arg>commodity_name=走过路过不要错过，走过路过不要错过-再见</arg>
<arg>order_time=0,155555</arg>
<arg>pay_time=0,155555</arg>
<arg>page_size=20</arg>
<arg>page_num=1</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:49.318" level="INFO">${unessential_params} = {'pay_status': '1', 'delivery_status': '1', 'mobile': '13188676566', 'contact': 'wy', 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'order_time': '0,155555'...</msg>
<status status="PASS" endtime="20191121 17:30:49.318" starttime="20191121 17:30:49.317"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Orders Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:49.322" level="INFO">[{'pay_status': '1'}, {'delivery_status': '1'}, {'mobile': '13188676566'}, {'contact': 'wy'}, {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}, {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}, {'order_time': '0,155555'}, {'pay_time': '0,155555'}, {'page_size': '20'}, {'page_num': '1'}]</msg>
<msg timestamp="20191121 17:30:49.322" level="INFO">${results} = [{'pay_status': '1'}, {'delivery_status': '1'}, {'mobile': '13188676566'}, {'contact': 'wy'}, {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}, {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}, {'order_time...</msg>
<status status="PASS" endtime="20191121 17:30:49.322" starttime="20191121 17:30:49.321"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_status': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:49.563" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.563" starttime="20191121 17:30:49.326"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.567" level="INFO">[{'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13388888888', 'confirm_type': None, 'order_id': '83171886049a11eab9c20242ac15000a', 'order_time': 1573487225.900814, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 500, 'real_price': 400, 'contact': '张永兴定时任务测试', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '蓝色款1', 'specification_id': '6c9d8f67046a11eab066309c23b28abb', 'unit_original_price': 100, 'amount': 5, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573487405.900814, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573487225.903692, 'trade_no': None, 'ht_code': '10001483', 'updated_time': 1573487225.903723, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13388888888', 'confirm_type': None, 'order_id': 'b7e4d392049911eaa4030242ac15000a', 'order_time': 1573486884.993511, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 500, 'real_price': 400, 'contact': '张永兴定时任务测试', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '蓝色款1', 'specification_id': '6c9d8f67046a11eab066309c23b28abb', 'unit_original_price': 100, 'amount': 5, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573487064.993511, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573486884.997106, 'trade_no': None, 'ht_code': '10001483', 'updated_time': 1573486884.997156, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '274d6dba047311ea90340242ac15000a', 'order_time': 1573470321.534084, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573470921.534084, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573470321.537911, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573470321.537943, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'dac50a4a047011eab066309c23b28abb', 'order_time': 1573469334.141216, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573469934.141216, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573469334.142021, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573469334.142035, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'b9756a14046c11eab066309c23b28abb', 'order_time': 1573467560.26758, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573468160.26758, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467560.268523, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467560.268545, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '74458a64046c11eab066309c23b28abb', 'order_time': 1573467444.190481, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573468044.190481, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467444.192792, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467444.19284, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'e90b19aa046b11eab066309c23b28abb', 'order_time': 1573467210.604137, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467810.604137, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467210.606612, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467210.606664, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '5988c3ae046b11eab066309c23b28abb', 'order_time': 1573466969.836533, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467569.836533, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573466969.837179, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573466969.837191, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '4337ef44046b11eab066309c23b28abb', 'order_time': 1573466932.396306, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467532.396306, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573466932.398485, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573466932.398532, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:49.567" starttime="20191121 17:30:49.564"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.568" starttime="20191121 17:30:49.564"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:49.571" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.571" starttime="20191121 17:30:49.569"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.572" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.572" starttime="20191121 17:30:49.571"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:49.574" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.574" starttime="20191121 17:30:49.573"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.575" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.576" starttime="20191121 17:30:49.574"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.578" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_status=1</msg>
<status status="PASS" endtime="20191121 17:30:49.579" starttime="20191121 17:30:49.577"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.580" starttime="20191121 17:30:49.579"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.582" starttime="20191121 17:30:49.581"></status>
</kw>
<msg timestamp="20191121 17:30:49.582" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.582" starttime="20191121 17:30:49.576"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.585" starttime="20191121 17:30:49.584"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.599" starttime="20191121 17:30:49.586"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.599" starttime="20191121 17:30:49.585"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.601" starttime="20191121 17:30:49.600"></status>
</kw>
<msg timestamp="20191121 17:30:49.601" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.601" starttime="20191121 17:30:49.583"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.604" starttime="20191121 17:30:49.603"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.604" starttime="20191121 17:30:49.602"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.606" level="INFO">231.556</msg>
<status status="PASS" endtime="20191121 17:30:49.606" starttime="20191121 17:30:49.605"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.608" level="INFO">${elapsed} = 231</msg>
<status status="PASS" endtime="20191121 17:30:49.608" starttime="20191121 17:30:49.606"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.610" level="INFO">${elapsed} = 231</msg>
<status status="PASS" endtime="20191121 17:30:49.610" starttime="20191121 17:30:49.609"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:49.615" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:49.615" starttime="20191121 17:30:49.614"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.615" starttime="20191121 17:30:49.611"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.616" starttime="20191121 17:30:49.608"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.616" starttime="20191121 17:30:49.568"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:49.623" level="INFO">${order_id} = 83171886049a11eab9c20242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:49.623" starttime="20191121 17:30:49.616"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.624" level="INFO">${order_id} = 83171886049a11eab9c20242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:49.625" starttime="20191121 17:30:49.624"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.625" starttime="20191121 17:30:49.324"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.625" starttime="20191121 17:30:49.324"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.625" starttime="20191121 17:30:49.323"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_status': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:49.744" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.744" starttime="20191121 17:30:49.627"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.749" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7ec7e7240c3811eabc550242ac15000a', 'order_time': 1574324737.294362, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325337.294362, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325337.294362, 'delivery_company': None, 'postage': None, 'pay_time': 1574324743.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324737.296745, 'trade_no': '4200000464201911212385312402', 'ht_code': '10001075', 'updated_time': 1574324745.28375, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '4fa32cc40c3811ea9cf50242ac15000a', 'order_time': 1574324658.199959, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325258.199959, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325258.199959, 'delivery_company': None, 'postage': None, 'pay_time': 1574324664.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324658.203517, 'trade_no': '4200000454201911216224166540', 'ht_code': '10001075', 'updated_time': 1574324665.900112, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '大地好的好的好', 'mobile': '13388888888', 'confirm_type': None, 'order_id': 'bea01e6e0c3511ea83a00242ac15000a', 'order_time': 1574323555.917227, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '张永兴', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574324155.917227, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574324155.917227, 'delivery_company': None, 'postage': None, 'pay_time': 1574323657.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574323555.920192, 'trade_no': '4200000468201911219747584294', 'ht_code': '10001483', 'updated_time': 1574323659.033387, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': 'cfe3b2020c3111eaa09a0242ac15000a', 'order_time': 1574321866.894716, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574322466.894716, 'delivery_status': None, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574322466.894716, 'delivery_company': None, 'postage': None, 'pay_time': 1574321873.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574321866.897209, 'trade_no': '4200000458201911212862464808', 'ht_code': '10001075', 'updated_time': 1574321874.726339, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '45eb6ce20c2d11ea88790242ac15000a', 'order_time': 1574319917.432834, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574320517.432834, 'delivery_status': None, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574320517.432834, 'delivery_company': None, 'postage': None, 'pay_time': 1574319924.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574319917.43546, 'trade_no': '4200000466201911211602519422', 'ht_code': '10001075', 'updated_time': 1574319926.024889, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '测试', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'bb023db40c0311ea9fdf0242ac15000a', 'order_time': 1574302075.012758, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1, 'real_price': 1, 'contact': '王超', 'discount_price': 0, 'detail': [{'subtitle': 'test商城test商城test商城te', 'specification_name': 'test', 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'pay_expire_time': 1574302675.012758, 'delivery_status': None, 'unit_original_price': 1, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574302675.012758, 'delivery_company': None, 'postage': None, 'pay_time': 1574302078.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574302075.016081, 'trade_no': '4200000471201911215259490128', 'ht_code': '10001554', 'updated_time': 1574302080.710067, 'commodity_name': 'test商城test商城test商城te', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'a36c46180c0311eaae930242ac15000a', 'order_time': 1574302035.442425, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574302635.442425, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574302635.442425, 'delivery_company': None, 'postage': None, 'pay_time': 1574302039.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574302035.445613, 'trade_no': '4200000456201911212174679069', 'ht_code': '10001554', 'updated_time': 1574302041.120972, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '50848d360c0111ea9fdf0242ac15000a', 'order_time': 1574301037.357081, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574301637.357081, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574301637.357081, 'delivery_company': None, 'postage': None, 'pay_time': 1574301048.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574301037.361352, 'trade_no': '4200000467201911216018096711', 'ht_code': '10001442', 'updated_time': 1574301050.3046, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7361e6100b6011ea9d820242ac15000a', 'order_time': 1574231946.87688, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 17600, 'real_price': 2, 'contact': '王超', 'discount_price': 17598, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574232546.87688, 'unit_original_price': 8800, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574232546.87688, 'delivery_company': None, 'postage': None, 'pay_time': 1574231952.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574231946.879968, 'trade_no': '4200000463201911201477999989', 'ht_code': '10001075', 'updated_time': 1574231953.856587, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'f96c72000b4411eaaae90242ac15000a', 'order_time': 1574220145.852262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 200, 'real_price': 2, 'contact': '王超', 'discount_price': 198, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220745.852262, 'unit_original_price': 100, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220745.852262, 'delivery_company': None, 'postage': None, 'pay_time': 1574220154.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574220145.855333, 'trade_no': '4200000453201911204903381810', 'ht_code': '10001553', 'updated_time': 1574220155.961172, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:49.751" starttime="20191121 17:30:49.746"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.751" starttime="20191121 17:30:49.745"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:49.754" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.754" starttime="20191121 17:30:49.753"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.755" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.756" starttime="20191121 17:30:49.754"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:49.757" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.757" starttime="20191121 17:30:49.756"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.759" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.759" starttime="20191121 17:30:49.758"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.762" level="INFO">https://mall-server-d.parkone.cn/admin/orders?delivery_status=1</msg>
<status status="PASS" endtime="20191121 17:30:49.762" starttime="20191121 17:30:49.761"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.764" starttime="20191121 17:30:49.762"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.765" starttime="20191121 17:30:49.764"></status>
</kw>
<msg timestamp="20191121 17:30:49.766" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.766" starttime="20191121 17:30:49.760"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.768" starttime="20191121 17:30:49.767"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.782" starttime="20191121 17:30:49.770"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.783" starttime="20191121 17:30:49.769"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.784" starttime="20191121 17:30:49.783"></status>
</kw>
<msg timestamp="20191121 17:30:49.784" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.784" starttime="20191121 17:30:49.766"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.785" starttime="20191121 17:30:49.785"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.786" starttime="20191121 17:30:49.784"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.786" level="INFO">113.992</msg>
<status status="PASS" endtime="20191121 17:30:49.786" starttime="20191121 17:30:49.786"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.787" level="INFO">${elapsed} = 113</msg>
<status status="PASS" endtime="20191121 17:30:49.787" starttime="20191121 17:30:49.787"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.788" level="INFO">${elapsed} = 113</msg>
<status status="PASS" endtime="20191121 17:30:49.788" starttime="20191121 17:30:49.788"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:49.790" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:49.790" starttime="20191121 17:30:49.789"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.790" starttime="20191121 17:30:49.788"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.790" starttime="20191121 17:30:49.787"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.790" starttime="20191121 17:30:49.752"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:49.795" level="INFO">${order_id} = b9aff05a0c3f11eab3e80242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:49.795" starttime="20191121 17:30:49.790"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.796" level="INFO">${order_id} = b9aff05a0c3f11eab3e80242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:49.796" starttime="20191121 17:30:49.795"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.796" starttime="20191121 17:30:49.626"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.796" starttime="20191121 17:30:49.625"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.796" starttime="20191121 17:30:49.625"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'mobile': '13188676566'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:49.912" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.913" starttime="20191121 17:30:49.797"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.915" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:49.915" starttime="20191121 17:30:49.914"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.916" starttime="20191121 17:30:49.913"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:49.918" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.919" starttime="20191121 17:30:49.917"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.920" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.920" starttime="20191121 17:30:49.919"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:49.922" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.922" starttime="20191121 17:30:49.921"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.923" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:49.924" starttime="20191121 17:30:49.922"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.926" level="INFO">https://mall-server-d.parkone.cn/admin/orders?mobile=13188676566</msg>
<status status="PASS" endtime="20191121 17:30:49.926" starttime="20191121 17:30:49.925"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:49.928" starttime="20191121 17:30:49.927"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.930" starttime="20191121 17:30:49.929"></status>
</kw>
<msg timestamp="20191121 17:30:49.930" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.930" starttime="20191121 17:30:49.924"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.933" starttime="20191121 17:30:49.932"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.943" starttime="20191121 17:30:49.934"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.943" starttime="20191121 17:30:49.933"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.944" starttime="20191121 17:30:49.943"></status>
</kw>
<msg timestamp="20191121 17:30:49.944" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:49.944" starttime="20191121 17:30:49.931"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:49.946" starttime="20191121 17:30:49.946"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.947" starttime="20191121 17:30:49.945"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.947" level="INFO">113.285</msg>
<status status="PASS" endtime="20191121 17:30:49.947" starttime="20191121 17:30:49.947"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.948" level="INFO">${elapsed} = 113</msg>
<status status="PASS" endtime="20191121 17:30:49.948" starttime="20191121 17:30:49.948"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:49.950" level="INFO">${elapsed} = 113</msg>
<status status="PASS" endtime="20191121 17:30:49.950" starttime="20191121 17:30:49.949"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:49.951" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:49.951" starttime="20191121 17:30:49.951"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.952" starttime="20191121 17:30:49.950"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.952" starttime="20191121 17:30:49.948"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.952" starttime="20191121 17:30:49.916"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:49.953" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.953" starttime="20191121 17:30:49.952"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:49.953" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:49.953" starttime="20191121 17:30:49.953"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.953" starttime="20191121 17:30:49.797"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.954" starttime="20191121 17:30:49.796"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:49.954" starttime="20191121 17:30:49.796"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'contact': 'wy'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.075" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.075" starttime="20191121 17:30:49.955"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.077" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:50.078" starttime="20191121 17:30:50.076"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.078" starttime="20191121 17:30:50.076"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.081" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.081" starttime="20191121 17:30:50.080"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.082" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.083" starttime="20191121 17:30:50.081"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.084" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.084" starttime="20191121 17:30:50.083"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.086" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.086" starttime="20191121 17:30:50.085"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.089" level="INFO">https://mall-server-d.parkone.cn/admin/orders?contact=wy</msg>
<status status="PASS" endtime="20191121 17:30:50.089" starttime="20191121 17:30:50.088"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.091" starttime="20191121 17:30:50.089"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.092" starttime="20191121 17:30:50.091"></status>
</kw>
<msg timestamp="20191121 17:30:50.093" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.093" starttime="20191121 17:30:50.087"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.096" starttime="20191121 17:30:50.094"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.105" starttime="20191121 17:30:50.098"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.105" starttime="20191121 17:30:50.097"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.107" starttime="20191121 17:30:50.106"></status>
</kw>
<msg timestamp="20191121 17:30:50.107" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.107" starttime="20191121 17:30:50.093"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.109" starttime="20191121 17:30:50.108"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.109" starttime="20191121 17:30:50.108"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.110" level="INFO">117.509</msg>
<status status="PASS" endtime="20191121 17:30:50.110" starttime="20191121 17:30:50.110"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.112" level="INFO">${elapsed} = 117</msg>
<status status="PASS" endtime="20191121 17:30:50.112" starttime="20191121 17:30:50.111"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.113" level="INFO">${elapsed} = 117</msg>
<status status="PASS" endtime="20191121 17:30:50.113" starttime="20191121 17:30:50.112"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:50.115" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:50.115" starttime="20191121 17:30:50.114"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.115" starttime="20191121 17:30:50.113"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.115" starttime="20191121 17:30:50.112"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.115" starttime="20191121 17:30:50.078"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:50.116" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.116" starttime="20191121 17:30:50.116"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.117" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.117" starttime="20191121 17:30:50.116"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.117" starttime="20191121 17:30:49.954"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.117" starttime="20191121 17:30:49.954"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.117" starttime="20191121 17:30:49.954"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.241" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.241" starttime="20191121 17:30:50.119"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.244" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'order_time': 1574227240.856133, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227840.856133, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228684.513688, 'delivery_order': '0101010101010', 'pay_expire_time': 1574227840.856133, 'delivery_company': '顺丰速递', 'postage': 0, 'pay_time': 1574227247.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574227240.858832, 'trade_no': '4200000457201911207176559869', 'ht_code': '10001075', 'updated_time': 1574228684.514251, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:50.244" starttime="20191121 17:30:50.243"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.244" starttime="20191121 17:30:50.242"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.247" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.247" starttime="20191121 17:30:50.246"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.249" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.249" starttime="20191121 17:30:50.248"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.250" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.251" starttime="20191121 17:30:50.249"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.252" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.252" starttime="20191121 17:30:50.251"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.255" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_id=7e60145c0b5511ea9dbb0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:50.255" starttime="20191121 17:30:50.254"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.258" starttime="20191121 17:30:50.255"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.259" starttime="20191121 17:30:50.258"></status>
</kw>
<msg timestamp="20191121 17:30:50.260" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.260" starttime="20191121 17:30:50.253"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.262" starttime="20191121 17:30:50.262"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.272" starttime="20191121 17:30:50.264"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.272" starttime="20191121 17:30:50.263"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.273" starttime="20191121 17:30:50.273"></status>
</kw>
<msg timestamp="20191121 17:30:50.274" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.274" starttime="20191121 17:30:50.260"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.276" starttime="20191121 17:30:50.275"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.276" starttime="20191121 17:30:50.274"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.277" level="INFO">119.837</msg>
<status status="PASS" endtime="20191121 17:30:50.277" starttime="20191121 17:30:50.276"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.278" level="INFO">${elapsed} = 119</msg>
<status status="PASS" endtime="20191121 17:30:50.278" starttime="20191121 17:30:50.277"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.279" level="INFO">${elapsed} = 119</msg>
<status status="PASS" endtime="20191121 17:30:50.279" starttime="20191121 17:30:50.279"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:50.281" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:50.281" starttime="20191121 17:30:50.281"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.281" starttime="20191121 17:30:50.280"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.282" starttime="20191121 17:30:50.278"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.282" starttime="20191121 17:30:50.245"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:50.283" level="INFO">${order_id} = 7e60145c0b5511ea9dbb0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:50.283" starttime="20191121 17:30:50.282"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.284" level="INFO">${order_id} = 7e60145c0b5511ea9dbb0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:50.284" starttime="20191121 17:30:50.283"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.284" starttime="20191121 17:30:50.118"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.284" starttime="20191121 17:30:50.118"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.284" starttime="20191121 17:30:50.117"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.421" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.421" starttime="20191121 17:30:50.285"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.426" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': 2, 'order_id': '1fa56b560b4611eaa3c10242ac15000a', 'order_time': 1574220639.476032, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 100, 'real_price': 1, 'contact': '王超', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574221239.476032, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228983.920859, 'delivery_order': '010101010101010', 'pay_expire_time': 1574221239.476032, 'delivery_company': '测试物流', 'postage': 0, 'pay_time': 1574220650.0, 'confirm_time': 1574229005.741067, 'delivery_status': 3, 'created_time': 1574220639.478746, 'trade_no': '4200000452201911208221303763', 'ht_code': '10001553', 'updated_time': 1574229005.825145, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'order_time': 1574227240.856133, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227840.856133, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228684.513688, 'delivery_order': '0101010101010', 'pay_expire_time': 1574227840.856133, 'delivery_company': '顺丰速递', 'postage': 0, 'pay_time': 1574227247.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574227240.858832, 'trade_no': '4200000457201911207176559869', 'ht_code': '10001075', 'updated_time': 1574228684.514251, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '542a75720b5711ea9d820242ac15000a', 'order_time': 1574228029.033906, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228629.033906, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228629.033906, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574228029.037176, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574228629.191849, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7ec740e00b5611ea9dbb0242ac15000a', 'order_time': 1574227671.02927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228271.02927, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228271.02927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227671.031749, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574228271.212699, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '75b618140b5611eaa3c10242ac15000a', 'order_time': 1574227655.816469, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228255.816469, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228255.816469, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227655.819742, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574228255.984453, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '17186eaa0b5711ea9d820242ac15000a', 'order_time': 1574227926.574662, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228526.574662, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228526.574662, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227926.577366, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574227950.56497, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': 2, 'order_id': 'a0e1d6f60b5411eaaae90242ac15000a', 'order_time': 1574226869.252247, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227469.252247, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574226920.760629, 'delivery_order': '123', 'pay_expire_time': 1574227469.252247, 'delivery_company': '123', 'postage': 100, 'pay_time': 1574226875.0, 'confirm_time': 1574226973.112821, 'delivery_status': 3, 'created_time': 1574226869.254946, 'trade_no': '4200000452201911208270120144', 'ht_code': '10001442', 'updated_time': 1574226973.199195, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6b66551e0b4611ea9d820242ac15000a', 'order_time': 1574220766.568921, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1200, 'contact': '王超', 'discount_price': 11100, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574221366.568921, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221366.568921, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220766.572196, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221366.76559, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2010910', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '326373c80b4611eaaae90242ac15000a', 'order_time': 1574220670.920505, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区0910', 'total_amount': 61500, 'real_price': 6000, 'contact': 'Robot杨秀兰', 'discount_price': 55500, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存0可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574221270.920505, 'unit_original_price': 12300, 'amount': 5, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221270.920505, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220670.922891, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574221276.099253, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '2bd58cc60b4611eaa3c10242ac15000a', 'order_time': 1574220659.924126, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 100, 'real_price': 1, 'contact': '王超', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574221259.924126, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221259.924126, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220659.926579, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221260.055325, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b6b492ca0b4511eaaae90242ac15000a', 'order_time': 1574220463.414588, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1200, 'contact': '王超', 'discount_price': 11100, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574221063.414588, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221063.414588, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220463.417166, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221063.547564, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2018068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '042e4b3c0b4511ea9dbb0242ac15000a', 'order_time': 1574220163.900235, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区8068', 'total_amount': 61500, 'real_price': 6000, 'contact': 'Robot胡淑珍', 'discount_price': 55500, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574220763.900235, 'unit_original_price': 12300, 'amount': 5, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220763.900235, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220163.902744, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574220764.054628, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '89a4afdc0b4411eaa3c10242ac15000a', 'order_time': 1574219958.316262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 400, 'real_price': 4, 'contact': '王超', 'discount_price': 396, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220558.316262, 'unit_original_price': 100, 'amount': 4, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220558.316262, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574219958.318849, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574220558.446085, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '546456', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'b1d3636e0b4311ea9d820242ac15000a', 'order_time': 1574219596.234091, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 100, 'real_price': 1, 'contact': '都是非法', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220196.234091, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220196.234091, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574219596.237362, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1574220196.420581, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'f96c72000b4411eaaae90242ac15000a', 'order_time': 1574220145.852262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 200, 'real_price': 2, 'contact': '王超', 'discount_price': 198, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220745.852262, 'unit_original_price': 100, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220745.852262, 'delivery_company': None, 'postage': None, 'pay_time': 1574220154.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574220145.855333, 'trade_no': '4200000453201911204903381810', 'ht_code': '10001553', 'updated_time': 1574220155.961172, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:50.428" starttime="20191121 17:30:50.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.428" starttime="20191121 17:30:50.422"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.431" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.431" starttime="20191121 17:30:50.430"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.432" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.433" starttime="20191121 17:30:50.431"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.434" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.434" starttime="20191121 17:30:50.433"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.437" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.437" starttime="20191121 17:30:50.435"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.440" level="INFO">https://mall-server-d.parkone.cn/admin/orders?commodity_name=%E8%B5%B0%E8%BF%87%E8%B7%AF%E8%BF%87%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87%EF%BC%8C%E8%B5%B0%E8%BF%87%E8%B7%AF%E8%BF%87%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87-%E5%86%8D%E8%A7%81</msg>
<status status="PASS" endtime="20191121 17:30:50.440" starttime="20191121 17:30:50.439"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.442" starttime="20191121 17:30:50.440"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.443" starttime="20191121 17:30:50.442"></status>
</kw>
<msg timestamp="20191121 17:30:50.444" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.444" starttime="20191121 17:30:50.438"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.446" starttime="20191121 17:30:50.446"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.458" starttime="20191121 17:30:50.448"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.459" starttime="20191121 17:30:50.447"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.459" starttime="20191121 17:30:50.459"></status>
</kw>
<msg timestamp="20191121 17:30:50.460" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.460" starttime="20191121 17:30:50.444"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.461" starttime="20191121 17:30:50.461"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.461" starttime="20191121 17:30:50.460"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.462" level="INFO">132.738</msg>
<status status="PASS" endtime="20191121 17:30:50.462" starttime="20191121 17:30:50.462"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.463" level="INFO">${elapsed} = 132</msg>
<status status="PASS" endtime="20191121 17:30:50.463" starttime="20191121 17:30:50.462"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.464" level="INFO">${elapsed} = 132</msg>
<status status="PASS" endtime="20191121 17:30:50.464" starttime="20191121 17:30:50.463"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:50.465" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:50.465" starttime="20191121 17:30:50.465"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.465" starttime="20191121 17:30:50.464"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.466" starttime="20191121 17:30:50.463"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.466" starttime="20191121 17:30:50.429"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:50.471" level="INFO">${order_id} = 1fa56b560b4611eaa3c10242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:50.471" starttime="20191121 17:30:50.466"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.471" level="INFO">${order_id} = 1fa56b560b4611eaa3c10242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:50.471" starttime="20191121 17:30:50.471"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.471" starttime="20191121 17:30:50.285"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.471" starttime="20191121 17:30:50.284"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.471" starttime="20191121 17:30:50.284"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_time': '0,155555'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.591" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.591" starttime="20191121 17:30:50.472"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.594" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:50.594" starttime="20191121 17:30:50.592"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.594" starttime="20191121 17:30:50.592"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.598" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.598" starttime="20191121 17:30:50.596"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.599" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.600" starttime="20191121 17:30:50.598"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.601" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.601" starttime="20191121 17:30:50.600"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.603" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.603" starttime="20191121 17:30:50.602"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.606" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_time=0%2C155555</msg>
<status status="PASS" endtime="20191121 17:30:50.606" starttime="20191121 17:30:50.605"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.608" starttime="20191121 17:30:50.606"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.609" starttime="20191121 17:30:50.608"></status>
</kw>
<msg timestamp="20191121 17:30:50.610" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.610" starttime="20191121 17:30:50.604"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.612" starttime="20191121 17:30:50.611"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.622" starttime="20191121 17:30:50.614"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.622" starttime="20191121 17:30:50.613"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.623" starttime="20191121 17:30:50.622"></status>
</kw>
<msg timestamp="20191121 17:30:50.623" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.623" starttime="20191121 17:30:50.610"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.625" starttime="20191121 17:30:50.625"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.626" starttime="20191121 17:30:50.624"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.626" level="INFO">116.563</msg>
<status status="PASS" endtime="20191121 17:30:50.627" starttime="20191121 17:30:50.626"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.628" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:50.628" starttime="20191121 17:30:50.627"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.629" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:50.629" starttime="20191121 17:30:50.628"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:50.631" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:50.631" starttime="20191121 17:30:50.630"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.631" starttime="20191121 17:30:50.629"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.631" starttime="20191121 17:30:50.628"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.631" starttime="20191121 17:30:50.595"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:50.632" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.632" starttime="20191121 17:30:50.631"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.633" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.633" starttime="20191121 17:30:50.632"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.633" starttime="20191121 17:30:50.472"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.633" starttime="20191121 17:30:50.472"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.633" starttime="20191121 17:30:50.472"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'pay_time': '0,155555'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.755" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.755" starttime="20191121 17:30:50.634"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.759" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:50.759" starttime="20191121 17:30:50.757"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.759" starttime="20191121 17:30:50.756"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.762" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.762" starttime="20191121 17:30:50.761"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.763" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.764" starttime="20191121 17:30:50.762"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.765" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.765" starttime="20191121 17:30:50.764"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.767" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.767" starttime="20191121 17:30:50.766"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.770" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_time=0%2C155555</msg>
<status status="PASS" endtime="20191121 17:30:50.770" starttime="20191121 17:30:50.769"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.772" starttime="20191121 17:30:50.770"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.773" starttime="20191121 17:30:50.772"></status>
</kw>
<msg timestamp="20191121 17:30:50.774" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.774" starttime="20191121 17:30:50.768"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.776" starttime="20191121 17:30:50.776"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.786" starttime="20191121 17:30:50.778"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.786" starttime="20191121 17:30:50.777"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.787" starttime="20191121 17:30:50.787"></status>
</kw>
<msg timestamp="20191121 17:30:50.788" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.788" starttime="20191121 17:30:50.774"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.790" starttime="20191121 17:30:50.789"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.790" starttime="20191121 17:30:50.788"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.791" level="INFO">118.403</msg>
<status status="PASS" endtime="20191121 17:30:50.791" starttime="20191121 17:30:50.790"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.792" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:50.792" starttime="20191121 17:30:50.791"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.793" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:50.794" starttime="20191121 17:30:50.793"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:50.795" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:50.795" starttime="20191121 17:30:50.795"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.795" starttime="20191121 17:30:50.794"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.796" starttime="20191121 17:30:50.792"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.796" starttime="20191121 17:30:50.760"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:50.797" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.797" starttime="20191121 17:30:50.796"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.797" level="INFO">${order_id} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.798" starttime="20191121 17:30:50.797"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.798" starttime="20191121 17:30:50.634"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.798" starttime="20191121 17:30:50.633"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.798" starttime="20191121 17:30:50.633"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_size': '20'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:50.956" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.957" starttime="20191121 17:30:50.799"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.962" level="INFO">[{'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015801', 'mobile': '13000000000', 'confirm_type': 1, 'order_id': '55a264a60c4111eabd520242ac15000a', 'order_time': 1574328533.732245, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5801', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot李兰英', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329133.732245, 'delivery_status': 3, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329133.732245, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': 3, 'created_time': 1574328533.734963, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328536.063745, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2019068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '39eb5c540c4111eab3e80242ac15000a', 'order_time': 1574328487.234244, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区9068', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot吴楠', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329087.234244, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329087.234244, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328487.237078, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328489.142459, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011863', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '1c03c0a00c4111ea9cf50242ac15000a', 'order_time': 1574328437.062136, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1863', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot蔡洁', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329037.062136, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329037.062136, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328437.065802, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328439.29727, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '91040b7a0c0111ea84de0242ac15000a', 'order_time': 1574301145.566972, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '你', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574301745.566972, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328373.884103, 'delivery_order': '123', 'pay_expire_time': 1574301745.566972, 'delivery_company': '123', 'postage': 12300, 'pay_time': 1574301153.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574301145.569828, 'trade_no': '4200000454201911210545919504', 'ht_code': '10001442', 'updated_time': 1574328373.980065, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011050', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'e62176c60c4011eab3e80242ac15000a', 'order_time': 1574328346.660318, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1050', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot庞明', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328946.660318, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328946.660318, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328346.663002, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328348.692777, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6a998d3c0c3f11eab3e80242ac15000a', 'order_time': 1574327709.912523, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328309.912523, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328309.912523, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327709.91705, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574328310.077677, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2012937', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'abfdac760c4011eabd520242ac15000a', 'order_time': 1574328249.116927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区2937', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot平佳', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328849.116927, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328849.116927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328249.122139, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328251.074068, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '683ccb960c3811eab3e80242ac15000a', 'order_time': 1574324699.472194, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574325299.472194, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328132.24229, 'delivery_order': '11111', 'pay_expire_time': 1574325299.472194, 'delivery_company': '几乎完全排位', 'postage': 1100, 'pay_time': 1574324705.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574324699.476313, 'trade_no': '4200000469201911218745089108', 'ht_code': '10001075', 'updated_time': 1574328132.345003, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015914', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'ccef58320c3e11ea9cf50242ac15000a', 'order_time': 1574327445.395599, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5914', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot赵旭', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328045.395599, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328045.395599, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327445.397588, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574327447.410447, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '啦啦啦啦', 'mobile': '13674137781', 'confirm_type': 2, 'order_id': 'ce7881480c2e11ea94490242ac15000a', 'order_time': 1574320576.02399, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '蔡畅', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574321176.02399, 'delivery_status': 3, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574327438.6578, 'delivery_order': '123', 'pay_expire_time': 1574321176.02399, 'delivery_company': '123', 'postage': 2, 'pay_time': 1574320584.0, 'confirm_time': 1574327441.761475, 'delivery_status': 3, 'created_time': 1574320576.029396, 'trade_no': '4200000454201911213757700164', 'ht_code': '10001540', 'updated_time': 1574327441.853075, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '509577860c3811eabd520242ac15000a', 'order_time': 1574324659.787184, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325259.787184, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325259.787184, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574324659.79245, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574325259.80665, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7ec7e7240c3811eabc550242ac15000a', 'order_time': 1574324737.294362, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325337.294362, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325337.294362, 'delivery_company': None, 'postage': None, 'pay_time': 1574324743.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324737.296745, 'trade_no': '4200000464201911212385312402', 'ht_code': '10001075', 'updated_time': 1574324745.28375, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '4fa32cc40c3811ea9cf50242ac15000a', 'order_time': 1574324658.199959, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325258.199959, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325258.199959, 'delivery_company': None, 'postage': None, 'pay_time': 1574324664.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324658.203517, 'trade_no': '4200000454201911216224166540', 'ht_code': '10001075', 'updated_time': 1574324665.900112, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '大地好的好的好', 'mobile': '13388888888', 'confirm_type': None, 'order_id': 'bea01e6e0c3511ea83a00242ac15000a', 'order_time': 1574323555.917227, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '张永兴', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574324155.917227, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574324155.917227, 'delivery_company': None, 'postage': None, 'pay_time': 1574323657.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574323555.920192, 'trade_no': '4200000468201911219747584294', 'ht_code': '10001483', 'updated_time': 1574323659.033387, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '不是就是结课我看靠谱', 'mobile': '13882828288', 'confirm_type': None, 'order_id': '5a6bdcb00c3211eaa09a0242ac15000a', 'order_time': 1574322099.312703, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '张永兴', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574322699.312703, 'delivery_status': None, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574322699.312703, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574322099.315232, 'trade_no': None, 'ht_code': '10001483', 'updated_time': 1574322699.486622, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:50.964" starttime="20191121 17:30:50.958"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.964" starttime="20191121 17:30:50.957"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:50.967" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.967" starttime="20191121 17:30:50.966"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.968" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.969" starttime="20191121 17:30:50.967"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:50.970" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:50.970" starttime="20191121 17:30:50.969"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.972" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:50.972" starttime="20191121 17:30:50.971"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.975" level="INFO">https://mall-server-d.parkone.cn/admin/orders?page_size=20</msg>
<status status="PASS" endtime="20191121 17:30:50.975" starttime="20191121 17:30:50.974"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:50.977" starttime="20191121 17:30:50.975"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.978" starttime="20191121 17:30:50.977"></status>
</kw>
<msg timestamp="20191121 17:30:50.979" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.979" starttime="20191121 17:30:50.973"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.981" starttime="20191121 17:30:50.980"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.994" starttime="20191121 17:30:50.983"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.994" starttime="20191121 17:30:50.982"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.995" starttime="20191121 17:30:50.995"></status>
</kw>
<msg timestamp="20191121 17:30:50.995" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:50.995" starttime="20191121 17:30:50.979"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:50.997" starttime="20191121 17:30:50.996"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:50.997" starttime="20191121 17:30:50.996"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:50.998" level="INFO">154.041</msg>
<status status="PASS" endtime="20191121 17:30:50.998" starttime="20191121 17:30:50.997"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.998" level="INFO">${elapsed} = 154</msg>
<status status="PASS" endtime="20191121 17:30:50.998" starttime="20191121 17:30:50.998"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:50.999" level="INFO">${elapsed} = 154</msg>
<status status="PASS" endtime="20191121 17:30:50.999" starttime="20191121 17:30:50.999"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:51.002" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:51.002" starttime="20191121 17:30:51.000"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.002" starttime="20191121 17:30:51.000"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.002" starttime="20191121 17:30:50.999"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.002" starttime="20191121 17:30:50.965"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:51.008" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.008" starttime="20191121 17:30:51.003"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.009" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.009" starttime="20191121 17:30:51.008"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.009" starttime="20191121 17:30:50.798"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.009" starttime="20191121 17:30:50.798"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.009" starttime="20191121 17:30:50.798"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_num': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.150" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.150" starttime="20191121 17:30:51.010"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.155" level="INFO">[{'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015801', 'mobile': '13000000000', 'confirm_type': 1, 'order_id': '55a264a60c4111eabd520242ac15000a', 'order_time': 1574328533.732245, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5801', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot李兰英', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329133.732245, 'delivery_status': 3, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329133.732245, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': 3, 'created_time': 1574328533.734963, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328536.063745, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2019068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '39eb5c540c4111eab3e80242ac15000a', 'order_time': 1574328487.234244, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区9068', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot吴楠', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329087.234244, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329087.234244, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328487.237078, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328489.142459, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011863', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '1c03c0a00c4111ea9cf50242ac15000a', 'order_time': 1574328437.062136, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1863', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot蔡洁', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329037.062136, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329037.062136, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328437.065802, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328439.29727, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '91040b7a0c0111ea84de0242ac15000a', 'order_time': 1574301145.566972, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '你', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574301745.566972, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328373.884103, 'delivery_order': '123', 'pay_expire_time': 1574301745.566972, 'delivery_company': '123', 'postage': 12300, 'pay_time': 1574301153.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574301145.569828, 'trade_no': '4200000454201911210545919504', 'ht_code': '10001442', 'updated_time': 1574328373.980065, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011050', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'e62176c60c4011eab3e80242ac15000a', 'order_time': 1574328346.660318, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1050', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot庞明', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328946.660318, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328946.660318, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328346.663002, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328348.692777, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6a998d3c0c3f11eab3e80242ac15000a', 'order_time': 1574327709.912523, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328309.912523, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328309.912523, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327709.91705, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574328310.077677, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2012937', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'abfdac760c4011eabd520242ac15000a', 'order_time': 1574328249.116927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区2937', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot平佳', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328849.116927, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328849.116927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328249.122139, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328251.074068, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '683ccb960c3811eab3e80242ac15000a', 'order_time': 1574324699.472194, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574325299.472194, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328132.24229, 'delivery_order': '11111', 'pay_expire_time': 1574325299.472194, 'delivery_company': '几乎完全排位', 'postage': 1100, 'pay_time': 1574324705.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574324699.476313, 'trade_no': '4200000469201911218745089108', 'ht_code': '10001075', 'updated_time': 1574328132.345003, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015914', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'ccef58320c3e11ea9cf50242ac15000a', 'order_time': 1574327445.395599, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5914', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot赵旭', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328045.395599, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328045.395599, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327445.397588, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574327447.410447, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '啦啦啦啦', 'mobile': '13674137781', 'confirm_type': 2, 'order_id': 'ce7881480c2e11ea94490242ac15000a', 'order_time': 1574320576.02399, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '蔡畅', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574321176.02399, 'delivery_status': 3, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574327438.6578, 'delivery_order': '123', 'pay_expire_time': 1574321176.02399, 'delivery_company': '123', 'postage': 2, 'pay_time': 1574320584.0, 'confirm_time': 1574327441.761475, 'delivery_status': 3, 'created_time': 1574320576.029396, 'trade_no': '4200000454201911213757700164', 'ht_code': '10001540', 'updated_time': 1574327441.853075, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:51.156" starttime="20191121 17:30:51.151"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.156" starttime="20191121 17:30:51.150"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.159" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.159" starttime="20191121 17:30:51.158"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.161" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.161" starttime="20191121 17:30:51.160"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.162" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.163" starttime="20191121 17:30:51.161"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.164" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.164" starttime="20191121 17:30:51.163"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.167" level="INFO">https://mall-server-d.parkone.cn/admin/orders?page_num=1</msg>
<status status="PASS" endtime="20191121 17:30:51.167" starttime="20191121 17:30:51.166"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.169" starttime="20191121 17:30:51.167"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.170" starttime="20191121 17:30:51.169"></status>
</kw>
<msg timestamp="20191121 17:30:51.171" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.171" starttime="20191121 17:30:51.165"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.174" starttime="20191121 17:30:51.173"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.188" starttime="20191121 17:30:51.175"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.188" starttime="20191121 17:30:51.174"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.189" starttime="20191121 17:30:51.188"></status>
</kw>
<msg timestamp="20191121 17:30:51.189" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.189" starttime="20191121 17:30:51.171"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.190" starttime="20191121 17:30:51.190"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.191" starttime="20191121 17:30:51.189"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.191" level="INFO">137.536</msg>
<status status="PASS" endtime="20191121 17:30:51.191" starttime="20191121 17:30:51.191"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.192" level="INFO">${elapsed} = 137</msg>
<status status="PASS" endtime="20191121 17:30:51.192" starttime="20191121 17:30:51.192"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.193" level="INFO">${elapsed} = 137</msg>
<status status="PASS" endtime="20191121 17:30:51.193" starttime="20191121 17:30:51.193"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:51.195" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:51.195" starttime="20191121 17:30:51.194"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.195" starttime="20191121 17:30:51.193"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.195" starttime="20191121 17:30:51.192"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.195" starttime="20191121 17:30:51.157"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:51.200" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.200" starttime="20191121 17:30:51.195"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.200" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.200" starttime="20191121 17:30:51.200"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.201" starttime="20191121 17:30:51.009"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.201" starttime="20191121 17:30:51.009"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.201" starttime="20191121 17:30:51.009"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.201" starttime="20191121 17:30:49.323"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.201" starttime="20191121 17:30:49.319"></status>
</kw>
<kw name="Get Admin Orders Success">
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.364" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.364" starttime="20191121 17:30:51.201"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.369" level="INFO">[{'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015801', 'mobile': '13000000000', 'confirm_type': 1, 'order_id': '55a264a60c4111eabd520242ac15000a', 'order_time': 1574328533.732245, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5801', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot李兰英', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329133.732245, 'delivery_status': 3, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329133.732245, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': 3, 'created_time': 1574328533.734963, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328536.063745, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2019068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '39eb5c540c4111eab3e80242ac15000a', 'order_time': 1574328487.234244, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区9068', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot吴楠', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329087.234244, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329087.234244, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328487.237078, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328489.142459, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011863', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '1c03c0a00c4111ea9cf50242ac15000a', 'order_time': 1574328437.062136, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1863', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot蔡洁', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329037.062136, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329037.062136, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328437.065802, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328439.29727, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '91040b7a0c0111ea84de0242ac15000a', 'order_time': 1574301145.566972, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '你', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574301745.566972, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328373.884103, 'delivery_order': '123', 'pay_expire_time': 1574301745.566972, 'delivery_company': '123', 'postage': 12300, 'pay_time': 1574301153.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574301145.569828, 'trade_no': '4200000454201911210545919504', 'ht_code': '10001442', 'updated_time': 1574328373.980065, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011050', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'e62176c60c4011eab3e80242ac15000a', 'order_time': 1574328346.660318, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1050', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot庞明', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328946.660318, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328946.660318, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328346.663002, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328348.692777, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6a998d3c0c3f11eab3e80242ac15000a', 'order_time': 1574327709.912523, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328309.912523, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328309.912523, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327709.91705, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574328310.077677, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2012937', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'abfdac760c4011eabd520242ac15000a', 'order_time': 1574328249.116927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区2937', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot平佳', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328849.116927, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328849.116927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328249.122139, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328251.074068, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '683ccb960c3811eab3e80242ac15000a', 'order_time': 1574324699.472194, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574325299.472194, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328132.24229, 'delivery_order': '11111', 'pay_expire_time': 1574325299.472194, 'delivery_company': '几乎完全排位', 'postage': 1100, 'pay_time': 1574324705.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574324699.476313, 'trade_no': '4200000469201911218745089108', 'ht_code': '10001075', 'updated_time': 1574328132.345003, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015914', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'ccef58320c3e11ea9cf50242ac15000a', 'order_time': 1574327445.395599, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5914', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot赵旭', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328045.395599, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328045.395599, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327445.397588, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574327447.410447, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '啦啦啦啦', 'mobile': '13674137781', 'confirm_type': 2, 'order_id': 'ce7881480c2e11ea94490242ac15000a', 'order_time': 1574320576.02399, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '蔡畅', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574321176.02399, 'delivery_status': 3, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574327438.6578, 'delivery_order': '123', 'pay_expire_time': 1574321176.02399, 'delivery_company': '123', 'postage': 2, 'pay_time': 1574320584.0, 'confirm_time': 1574327441.761475, 'delivery_status': 3, 'created_time': 1574320576.029396, 'trade_no': '4200000454201911213757700164', 'ht_code': '10001540', 'updated_time': 1574327441.853075, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:51.370" starttime="20191121 17:30:51.365"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.370" starttime="20191121 17:30:51.364"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.373" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.373" starttime="20191121 17:30:51.372"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.375" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.375" starttime="20191121 17:30:51.374"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.376" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.376" starttime="20191121 17:30:51.375"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.378" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.378" starttime="20191121 17:30:51.377"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.381" level="INFO">https://mall-server-d.parkone.cn/admin/orders</msg>
<status status="PASS" endtime="20191121 17:30:51.381" starttime="20191121 17:30:51.380"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.383" starttime="20191121 17:30:51.381"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.384" starttime="20191121 17:30:51.383"></status>
</kw>
<msg timestamp="20191121 17:30:51.385" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.385" starttime="20191121 17:30:51.379"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.387" starttime="20191121 17:30:51.387"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.402" starttime="20191121 17:30:51.389"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.402" starttime="20191121 17:30:51.388"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.403" starttime="20191121 17:30:51.402"></status>
</kw>
<msg timestamp="20191121 17:30:51.403" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.403" starttime="20191121 17:30:51.385"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.404" starttime="20191121 17:30:51.404"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.405" starttime="20191121 17:30:51.403"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.405" level="INFO">159.91</msg>
<status status="PASS" endtime="20191121 17:30:51.405" starttime="20191121 17:30:51.405"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.406" level="INFO">${elapsed} = 159</msg>
<status status="PASS" endtime="20191121 17:30:51.406" starttime="20191121 17:30:51.406"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.407" level="INFO">${elapsed} = 159</msg>
<status status="PASS" endtime="20191121 17:30:51.407" starttime="20191121 17:30:51.407"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:51.409" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:51.409" starttime="20191121 17:30:51.408"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.409" starttime="20191121 17:30:51.408"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.409" starttime="20191121 17:30:51.406"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.409" starttime="20191121 17:30:51.371"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${resp.json()}!=[]</arg>
<arg>${resp.json()[0]["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:30:51.414" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.414" starttime="20191121 17:30:51.409"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.415" level="INFO">${order_id} = 55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:51.415" starttime="20191121 17:30:51.414"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.415" starttime="20191121 17:30:51.201"></status>
</kw>
<doc>接口名:订单列表

请求方式:Get

预期结果:输入正确参数,http响应码返回 200,返回的Json数据为 Order 列表。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms~200ms</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:51.415" starttime="20191121 17:30:49.312"></status>
</test>
<test id="s1-s2-s1-t2" name="Get Admin Orders Fail422">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:51.417" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:51.417" starttime="20191121 17:30:51.416"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_status=aaa</arg>
<arg>delivery_status=aaa</arg>
<arg>mobile=dsadsadasdas</arg>
<arg>contact=/</arg>
<arg>order_id=.</arg>
<arg>commodity_name=/</arg>
<arg>order_time=a</arg>
<arg>pay_time=a</arg>
<arg>page_size=aa</arg>
<arg>page_num=a</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:51.417" level="INFO">${unessential_params} = {'pay_status': 'aaa', 'delivery_status': 'aaa', 'mobile': 'dsadsadasdas', 'contact': '/', 'order_id': '.', 'commodity_name': '/', 'order_time': 'a', 'pay_time': 'a', 'page_size': 'aa', 'page_num': 'a'...</msg>
<status status="PASS" endtime="20191121 17:30:51.417" starttime="20191121 17:30:51.417"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Orders Fail422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>success=False</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:51.418" level="INFO">${results} = [{'pay_status': 'aaa'}, {'delivery_status': 'aaa'}, {'mobile': 'dsadsadasdas'}, {'contact': '/'}, {'order_id': '.'}, {'commodity_name': '/'}, {'order_time': 'a'}, {'pay_time': 'a'}, {'page_size': 'aa'...</msg>
<status status="PASS" endtime="20191121 17:30:51.418" starttime="20191121 17:30:51.418"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_status': 'aaa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.520" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.520" starttime="20191121 17:30:51.419"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.521" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.521" starttime="20191121 17:30:51.521"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.522" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.522" starttime="20191121 17:30:51.521"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.522" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.522" starttime="20191121 17:30:51.522"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.522" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.522" starttime="20191121 17:30:51.522"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.523" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_status=aaa</msg>
<status status="PASS" endtime="20191121 17:30:51.523" starttime="20191121 17:30:51.523"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.524" starttime="20191121 17:30:51.524"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.524" starttime="20191121 17:30:51.524"></status>
</kw>
<msg timestamp="20191121 17:30:51.524" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.524" starttime="20191121 17:30:51.523"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.525" starttime="20191121 17:30:51.525"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.527" starttime="20191121 17:30:51.525"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.527" starttime="20191121 17:30:51.525"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.527" starttime="20191121 17:30:51.527"></status>
</kw>
<msg timestamp="20191121 17:30:51.527" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.527" starttime="20191121 17:30:51.525"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.528" starttime="20191121 17:30:51.528"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.528" starttime="20191121 17:30:51.527"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.529" level="INFO">99.415</msg>
<status status="PASS" endtime="20191121 17:30:51.529" starttime="20191121 17:30:51.528"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.529" level="INFO">${elapsed} = 99</msg>
<status status="PASS" endtime="20191121 17:30:51.529" starttime="20191121 17:30:51.529"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.530" level="INFO">${elapsed} = 99</msg>
<status status="PASS" endtime="20191121 17:30:51.530" starttime="20191121 17:30:51.529"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:51.531" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.530"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.530"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.529"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.521"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.419"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.419"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.531" starttime="20191121 17:30:51.419"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_status': 'aaa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.632" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.632" starttime="20191121 17:30:51.532"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.635" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.636" starttime="20191121 17:30:51.634"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.637" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.637" starttime="20191121 17:30:51.636"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.639" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:51.639" starttime="20191121 17:30:51.638"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.640" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:51.641" starttime="20191121 17:30:51.639"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.644" level="INFO">https://mall-server-d.parkone.cn/admin/orders?delivery_status=aaa</msg>
<status status="PASS" endtime="20191121 17:30:51.644" starttime="20191121 17:30:51.643"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.646" starttime="20191121 17:30:51.645"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.648" starttime="20191121 17:30:51.647"></status>
</kw>
<msg timestamp="20191121 17:30:51.648" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.648" starttime="20191121 17:30:51.641"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.651" starttime="20191121 17:30:51.650"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.657" starttime="20191121 17:30:51.652"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.657" starttime="20191121 17:30:51.651"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.659" starttime="20191121 17:30:51.658"></status>
</kw>
<msg timestamp="20191121 17:30:51.659" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:51.659" starttime="20191121 17:30:51.649"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:51.662" starttime="20191121 17:30:51.661"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.662" starttime="20191121 17:30:51.660"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.663" level="INFO">98.339</msg>
<status status="PASS" endtime="20191121 17:30:51.663" starttime="20191121 17:30:51.663"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.665" level="INFO">${elapsed} = 98</msg>
<status status="PASS" endtime="20191121 17:30:51.665" starttime="20191121 17:30:51.664"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:51.666" level="INFO">${elapsed} = 98</msg>
<status status="PASS" endtime="20191121 17:30:51.666" starttime="20191121 17:30:51.666"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:51.668" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:51.668" starttime="20191121 17:30:51.668"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.668" starttime="20191121 17:30:51.667"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.668" starttime="20191121 17:30:51.665"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.669" starttime="20191121 17:30:51.633"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.669" starttime="20191121 17:30:51.531"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.669" starttime="20191121 17:30:51.531"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.669" starttime="20191121 17:30:51.531"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'mobile': 'dsadsadasdas'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.792" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.792" starttime="20191121 17:30:51.671"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.795" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:51.795" starttime="20191121 17:30:51.794"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.796" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:51.797" starttime="20191121 17:30:51.795"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.798" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:51.798" starttime="20191121 17:30:51.797"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.800" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:51.800" starttime="20191121 17:30:51.799"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.804" level="INFO">https://mall-server-d.parkone.cn/admin/orders?mobile=dsadsadasdas</msg>
<status status="PASS" endtime="20191121 17:30:51.804" starttime="20191121 17:30:51.803"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:51.806" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:51.806" starttime="20191121 17:30:51.804"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:51.809" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?mobile=dsadsadasdas 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:51.810" starttime="20191121 17:30:51.808"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.810" starttime="20191121 17:30:51.807"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.810" starttime="20191121 17:30:51.801"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.811" starttime="20191121 17:30:51.793"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.811" starttime="20191121 17:30:51.670"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.811" starttime="20191121 17:30:51.669"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.812" starttime="20191121 17:30:51.669"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'contact': '/'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:51.941" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:51.941" starttime="20191121 17:30:51.815"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:51.944" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:51.945" starttime="20191121 17:30:51.943"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.946" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:51.946" starttime="20191121 17:30:51.945"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:51.948" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:51.948" starttime="20191121 17:30:51.947"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.950" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:51.950" starttime="20191121 17:30:51.948"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.952" level="INFO">https://mall-server-d.parkone.cn/admin/orders?contact=%2F</msg>
<status status="PASS" endtime="20191121 17:30:51.953" starttime="20191121 17:30:51.952"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:51.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:51.955" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:51.955" starttime="20191121 17:30:51.953"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:51.958" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?contact=%2F 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:51.959" starttime="20191121 17:30:51.957"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:51.959" starttime="20191121 17:30:51.956"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.959" starttime="20191121 17:30:51.950"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.960" starttime="20191121 17:30:51.942"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.960" starttime="20191121 17:30:51.813"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.960" starttime="20191121 17:30:51.812"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:51.960" starttime="20191121 17:30:51.812"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_id': '.'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:52.084" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.084" starttime="20191121 17:30:51.964"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:52.087" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:52.087" starttime="20191121 17:30:52.086"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.088" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:52.089" starttime="20191121 17:30:52.087"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:52.090" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:52.090" starttime="20191121 17:30:52.089"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.092" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:52.092" starttime="20191121 17:30:52.091"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.095" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_id=.</msg>
<status status="PASS" endtime="20191121 17:30:52.095" starttime="20191121 17:30:52.094"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:52.097" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:52.097" starttime="20191121 17:30:52.095"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:52.100" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_id=. 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:52.101" starttime="20191121 17:30:52.099"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.101" starttime="20191121 17:30:52.098"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.102" starttime="20191121 17:30:52.092"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.102" starttime="20191121 17:30:52.084"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.102" starttime="20191121 17:30:51.962"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.103" starttime="20191121 17:30:51.961"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.103" starttime="20191121 17:30:51.961"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '/'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:52.238" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.238" starttime="20191121 17:30:52.106"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:52.241" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:52.241" starttime="20191121 17:30:52.240"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.243" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:52.243" starttime="20191121 17:30:52.242"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:52.245" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:52.245" starttime="20191121 17:30:52.243"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.247" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:52.247" starttime="20191121 17:30:52.246"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.250" level="INFO">https://mall-server-d.parkone.cn/admin/orders?commodity_name=%2F</msg>
<status status="PASS" endtime="20191121 17:30:52.250" starttime="20191121 17:30:52.249"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:52.252" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:52.252" starttime="20191121 17:30:52.250"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:52.256" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?commodity_name=%2F 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:52.256" starttime="20191121 17:30:52.254"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.256" starttime="20191121 17:30:52.253"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.257" starttime="20191121 17:30:52.248"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.257" starttime="20191121 17:30:52.239"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.257" starttime="20191121 17:30:52.104"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.258" starttime="20191121 17:30:52.104"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.258" starttime="20191121 17:30:52.103"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_time': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:52.482" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.482" starttime="20191121 17:30:52.261"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:52.485" level="INFO">${bug_level} = BugLevel:Blocker</msg>
<status status="PASS" endtime="20191121 17:30:52.485" starttime="20191121 17:30:52.484"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.487" level="INFO">Set tag 'BugLevel:Blocker'.</msg>
<status status="PASS" endtime="20191121 17:30:52.487" starttime="20191121 17:30:52.486"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:52.488" level="INFO">${status_tag} = ShouldBe:422But:500</msg>
<status status="PASS" endtime="20191121 17:30:52.489" starttime="20191121 17:30:52.487"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.490" level="INFO">Set tag 'ShouldBe:422But:500'.</msg>
<status status="PASS" endtime="20191121 17:30:52.490" starttime="20191121 17:30:52.489"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.493" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_time=a</msg>
<status status="PASS" endtime="20191121 17:30:52.493" starttime="20191121 17:30:52.492"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:52.495" level="FAIL">500 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:52.495" starttime="20191121 17:30:52.494"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:52.499" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_time=a 错误。test_case：Get Admin Orders Fail422:应返回422，但返回500。</msg>
<status status="PASS" endtime="20191121 17:30:52.500" starttime="20191121 17:30:52.498"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.500" starttime="20191121 17:30:52.496"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.500" starttime="20191121 17:30:52.491"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.501" starttime="20191121 17:30:52.482"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.501" starttime="20191121 17:30:52.259"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.502" starttime="20191121 17:30:52.258"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.502" starttime="20191121 17:30:52.258"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'pay_time': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:52.709" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.709" starttime="20191121 17:30:52.505"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:52.712" level="INFO">${bug_level} = BugLevel:Blocker</msg>
<status status="PASS" endtime="20191121 17:30:52.712" starttime="20191121 17:30:52.711"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.714" level="INFO">Set tag 'BugLevel:Blocker'.</msg>
<status status="PASS" endtime="20191121 17:30:52.714" starttime="20191121 17:30:52.713"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:52.716" level="INFO">${status_tag} = ShouldBe:422But:500</msg>
<status status="PASS" endtime="20191121 17:30:52.716" starttime="20191121 17:30:52.715"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.717" level="INFO">Set tag 'ShouldBe:422But:500'.</msg>
<status status="PASS" endtime="20191121 17:30:52.718" starttime="20191121 17:30:52.716"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.720" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_time=a</msg>
<status status="PASS" endtime="20191121 17:30:52.720" starttime="20191121 17:30:52.719"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:52.722" level="FAIL">500 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:52.723" starttime="20191121 17:30:52.721"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:52.726" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?pay_time=a 错误。test_case：Get Admin Orders Fail422:应返回422，但返回500。</msg>
<status status="PASS" endtime="20191121 17:30:52.727" starttime="20191121 17:30:52.725"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.727" starttime="20191121 17:30:52.723"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.727" starttime="20191121 17:30:52.718"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.728" starttime="20191121 17:30:52.710"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.728" starttime="20191121 17:30:52.503"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.728" starttime="20191121 17:30:52.502"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:52.728" starttime="20191121 17:30:52.502"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_size': 'aa'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:52.852" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.852" starttime="20191121 17:30:52.732"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:52.855" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:52.855" starttime="20191121 17:30:52.854"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.856" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:52.857" starttime="20191121 17:30:52.855"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:52.858" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:52.858" starttime="20191121 17:30:52.857"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.860" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:52.860" starttime="20191121 17:30:52.859"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.863" level="INFO">https://mall-server-d.parkone.cn/admin/orders?page_size=aa</msg>
<status status="PASS" endtime="20191121 17:30:52.863" starttime="20191121 17:30:52.862"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:52.865" starttime="20191121 17:30:52.863"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:52.866" starttime="20191121 17:30:52.865"></status>
</kw>
<msg timestamp="20191121 17:30:52.867" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:52.867" starttime="20191121 17:30:52.860"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:52.869" starttime="20191121 17:30:52.868"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:52.876" starttime="20191121 17:30:52.870"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.876" starttime="20191121 17:30:52.870"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:52.877" starttime="20191121 17:30:52.876"></status>
</kw>
<msg timestamp="20191121 17:30:52.878" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:52.878" starttime="20191121 17:30:52.867"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:52.881" starttime="20191121 17:30:52.880"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.882" starttime="20191121 17:30:52.879"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:52.883" level="INFO">114.158</msg>
<status status="PASS" endtime="20191121 17:30:52.883" starttime="20191121 17:30:52.882"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:52.884" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:52.884" starttime="20191121 17:30:52.883"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:52.886" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:52.886" starttime="20191121 17:30:52.885"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:52.888" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:52.888" starttime="20191121 17:30:52.887"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.888" starttime="20191121 17:30:52.886"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.889" starttime="20191121 17:30:52.884"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.889" starttime="20191121 17:30:52.852"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.889" starttime="20191121 17:30:52.730"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.889" starttime="20191121 17:30:52.729"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:52.889" starttime="20191121 17:30:52.729"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'page_num': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.000" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.000" starttime="20191121 17:30:52.891"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.003" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.003" starttime="20191121 17:30:53.002"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.004" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.005" starttime="20191121 17:30:53.003"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.006" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.006" starttime="20191121 17:30:53.005"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.008" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.008" starttime="20191121 17:30:53.007"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.011" level="INFO">https://mall-server-d.parkone.cn/admin/orders?page_num=a</msg>
<status status="PASS" endtime="20191121 17:30:53.011" starttime="20191121 17:30:53.010"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.013" starttime="20191121 17:30:53.011"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.014" starttime="20191121 17:30:53.013"></status>
</kw>
<msg timestamp="20191121 17:30:53.014" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.014" starttime="20191121 17:30:53.009"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.015" starttime="20191121 17:30:53.014"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.016" starttime="20191121 17:30:53.015"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.016" starttime="20191121 17:30:53.015"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.016" starttime="20191121 17:30:53.016"></status>
</kw>
<msg timestamp="20191121 17:30:53.016" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.016" starttime="20191121 17:30:53.014"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.017" starttime="20191121 17:30:53.017"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.017" starttime="20191121 17:30:53.017"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.017" level="INFO">106.365</msg>
<status status="PASS" endtime="20191121 17:30:53.017" starttime="20191121 17:30:53.017"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.018" level="INFO">${elapsed} = 106</msg>
<status status="PASS" endtime="20191121 17:30:53.018" starttime="20191121 17:30:53.018"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.018" level="INFO">${elapsed} = 106</msg>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:53.018"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.019" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:53.019"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:53.019"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:53.018"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:53.000"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.019" starttime="20191121 17:30:52.890"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.020" starttime="20191121 17:30:52.889"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.020" starttime="20191121 17:30:52.889"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:53.020" starttime="20191121 17:30:51.418"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:53.020" starttime="20191121 17:30:51.418"></status>
</kw>
<doc>接口名:订单列表

请求方式:Get

预期结果:输入错误参数,http响应码返回 422,返回的Json数据符合验证。</doc>
<tags>
<tag>BugLevel:Blocker</tag>
<tag>BugLevel:Critical</tag>
<tag>model:admin_order</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
<tag>RespTime:100ms~200ms</tag>
<tag>ShouldBe:422But:200</tag>
<tag>ShouldBe:422But:500</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:53.020" starttime="20191121 17:30:51.415">Several failures occurred:

1) 200 != 422

2) 200 != 422

3) 200 != 422

4) 200 != 422

5) 500 != 422

6) 500 != 422</status>
</test>
<test id="s1-s2-s1-t3" name="Get Admin Order Detail">
<kw name="Get Admin Order Detail Success">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Order Detail">
<doc>订单详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.154" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.154" starttime="20191121 17:30:53.021"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.157" level="INFO">{'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015801', 'mobile': '13000000000', 'confirm_type': 1, 'order_id': '55a264a60c4111eabd520242ac15000a', 'order_time': 1574328533.732245, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5801', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot李兰英', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329133.732245, 'delivery_status': 3, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329133.732245, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': 3, 'created_time': 1574328533.734963, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328536.063745, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}</msg>
<status status="PASS" endtime="20191121 17:30:53.157" starttime="20191121 17:30:53.156"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.157" starttime="20191121 17:30:53.155"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_detail_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.160" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.161" starttime="20191121 17:30:53.159"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.162" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.162" starttime="20191121 17:30:53.161"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.164" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.164" starttime="20191121 17:30:53.163"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.165" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.166" starttime="20191121 17:30:53.164"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.168" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:53.168" starttime="20191121 17:30:53.167"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.170" starttime="20191121 17:30:53.169"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.172" starttime="20191121 17:30:53.171"></status>
</kw>
<msg timestamp="20191121 17:30:53.172" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.172" starttime="20191121 17:30:53.166"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.175" starttime="20191121 17:30:53.174"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.188" starttime="20191121 17:30:53.176"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.189" starttime="20191121 17:30:53.175"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.190" starttime="20191121 17:30:53.189"></status>
</kw>
<msg timestamp="20191121 17:30:53.191" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.191" starttime="20191121 17:30:53.173"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.194" starttime="20191121 17:30:53.193"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.194" starttime="20191121 17:30:53.191"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.195" level="INFO">131.2</msg>
<status status="PASS" endtime="20191121 17:30:53.196" starttime="20191121 17:30:53.194"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.197" level="INFO">${elapsed} = 131</msg>
<status status="PASS" endtime="20191121 17:30:53.197" starttime="20191121 17:30:53.196"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.200" level="INFO">${elapsed} = 131</msg>
<status status="PASS" endtime="20191121 17:30:53.200" starttime="20191121 17:30:53.199"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.203" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.203" starttime="20191121 17:30:53.202"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.204" starttime="20191121 17:30:53.200"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.204" starttime="20191121 17:30:53.198"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.204" starttime="20191121 17:30:53.158"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.205" starttime="20191121 17:30:53.021"></status>
</kw>
<doc>接口名:订单详情

请求方式:Get

预期结果:输入正确参数,http响应码返回 200,返回的Json数据为 Order 对象。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:53.205" starttime="20191121 17:30:53.020"></status>
</test>
<test id="s1-s2-s1-t4" name="Get Admin Order Detail Fail404">
<kw name="Get Admin Order Detail Fail404">
<arguments>
<arg>order_id=sdsadadadewqe4313213</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Order Detail">
<doc>订单详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.328" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.328" starttime="20191121 17:30:53.209"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.331" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.331" starttime="20191121 17:30:53.330"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.332" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.333" starttime="20191121 17:30:53.331"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.334" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.334" starttime="20191121 17:30:53.333"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.336" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.336" starttime="20191121 17:30:53.335"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.338" level="INFO">https://mall-server-d.parkone.cn/admin/orders/sdsadadadewqe4313213</msg>
<status status="PASS" endtime="20191121 17:30:53.339" starttime="20191121 17:30:53.337"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.340" starttime="20191121 17:30:53.339"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.342" starttime="20191121 17:30:53.341"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.342" starttime="20191121 17:30:53.336"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.343" level="INFO">114.728</msg>
<status status="PASS" endtime="20191121 17:30:53.344" starttime="20191121 17:30:53.343"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.345" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:53.345" starttime="20191121 17:30:53.344"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.348" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:53.348" starttime="20191121 17:30:53.347"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.352" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.352" starttime="20191121 17:30:53.350"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.352" starttime="20191121 17:30:53.348"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.353" starttime="20191121 17:30:53.346"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.353" starttime="20191121 17:30:53.328"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.353" starttime="20191121 17:30:53.208"></status>
</kw>
<doc>接口名:订单详情

请求方式:Get

预期结果:输入错误order_id,http响应码返回 404。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:53.354" starttime="20191121 17:30:53.206"></status>
</test>
<test id="s1-s2-s1-t5" name="Put Admin Order">
<kw name="Put Admin Order Success">
<arguments>
<arg>order_id=${order_id}</arg>
<arg>delivery_company=123</arg>
<arg>delivery_order=123</arg>
<arg>postage=2</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Put Admin Order">
<doc>修改订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.595" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.595" starttime="20191121 17:30:53.359"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.598" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.598" starttime="20191121 17:30:53.597"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.598" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.598" starttime="20191121 17:30:53.598"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.599" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.599" starttime="20191121 17:30:53.599"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.599" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.599" starttime="20191121 17:30:53.599"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.600" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:53.600" starttime="20191121 17:30:53.599"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.600" starttime="20191121 17:30:53.600"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.600" starttime="20191121 17:30:53.600"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.601" starttime="20191121 17:30:53.599"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.601" level="INFO">232.858</msg>
<status status="PASS" endtime="20191121 17:30:53.601" starttime="20191121 17:30:53.601"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.601" level="INFO">${elapsed} = 232</msg>
<status status="PASS" endtime="20191121 17:30:53.601" starttime="20191121 17:30:53.601"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.602" level="INFO">${elapsed} = 232</msg>
<status status="PASS" endtime="20191121 17:30:53.602" starttime="20191121 17:30:53.602"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.602" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.602"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.602"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.601"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.596"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.357"></status>
</kw>
<doc>接口名:修改订单

请求方式:Put

预期结果:输入正确order_id,正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:204</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:53.603" starttime="20191121 17:30:53.355"></status>
</test>
<test id="s1-s2-s1-t6" name="Put Admin Order Fail404">
<kw name="Put Admin Order Fail404">
<arguments>
<arg>order_id=sdsadadadewqe4313213</arg>
<arg>delivery_company=123</arg>
<arg>delivery_order=123</arg>
<arg>postage=2</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Put Admin Order">
<doc>修改订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.728" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.728" starttime="20191121 17:30:53.604"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.731" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.732" starttime="20191121 17:30:53.730"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.733" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.733" starttime="20191121 17:30:53.732"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.735" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.735" starttime="20191121 17:30:53.734"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.736" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.737" starttime="20191121 17:30:53.735"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.739" level="INFO">https://mall-server-d.parkone.cn/admin/orders/sdsadadadewqe4313213</msg>
<status status="PASS" endtime="20191121 17:30:53.739" starttime="20191121 17:30:53.738"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.741" starttime="20191121 17:30:53.740"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.743" starttime="20191121 17:30:53.742"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.743" starttime="20191121 17:30:53.737"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.744" level="INFO">122.411</msg>
<status status="PASS" endtime="20191121 17:30:53.745" starttime="20191121 17:30:53.744"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.746" level="INFO">${elapsed} = 122</msg>
<status status="PASS" endtime="20191121 17:30:53.746" starttime="20191121 17:30:53.745"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.749" level="INFO">${elapsed} = 122</msg>
<status status="PASS" endtime="20191121 17:30:53.749" starttime="20191121 17:30:53.748"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.752" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.752" starttime="20191121 17:30:53.751"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.753" starttime="20191121 17:30:53.749"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.753" starttime="20191121 17:30:53.747"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.753" starttime="20191121 17:30:53.729"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.754" starttime="20191121 17:30:53.604"></status>
</kw>
<doc>接口名:修改订单

请求方式:Put

预期结果:输入错误order_id,正确参数,http响应码返回 404。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:53.754" starttime="20191121 17:30:53.603"></status>
</test>
<test id="s1-s2-s1-t7" name="Put Admin Order Fail422">
<kw name="Put Admin Order Fail422">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Put Admin Order">
<doc>修改订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:53.867" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.868" starttime="20191121 17:30:53.759"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:53.871" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.871" starttime="20191121 17:30:53.869"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.872" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.872" starttime="20191121 17:30:53.871"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:53.874" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:53.874" starttime="20191121 17:30:53.873"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.876" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:53.876" starttime="20191121 17:30:53.875"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.879" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:53.880" starttime="20191121 17:30:53.878"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:53.881" starttime="20191121 17:30:53.880"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.883" starttime="20191121 17:30:53.882"></status>
</kw>
<msg timestamp="20191121 17:30:53.883" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.883" starttime="20191121 17:30:53.876"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.886" starttime="20191121 17:30:53.885"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.893" starttime="20191121 17:30:53.887"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.893" starttime="20191121 17:30:53.886"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.894" starttime="20191121 17:30:53.893"></status>
</kw>
<msg timestamp="20191121 17:30:53.895" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:53.895" starttime="20191121 17:30:53.884"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:53.897" starttime="20191121 17:30:53.897"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.898" starttime="20191121 17:30:53.895"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:53.899" level="INFO">103.83</msg>
<status status="PASS" endtime="20191121 17:30:53.899" starttime="20191121 17:30:53.898"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.900" level="INFO">${elapsed} = 103</msg>
<status status="PASS" endtime="20191121 17:30:53.900" starttime="20191121 17:30:53.899"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:53.902" level="INFO">${elapsed} = 103</msg>
<status status="PASS" endtime="20191121 17:30:53.902" starttime="20191121 17:30:53.901"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:53.903" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.903"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.902"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.900"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.868"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.758"></status>
</kw>
<doc>接口名:修改订单

请求方式:Put

预期结果:输入正确order_id,错误参数,http响应码返回 422。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:53.904" starttime="20191121 17:30:53.755"></status>
</test>
<test id="s1-s2-s1-t8" name="Get Admin Orders Export">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:53.907" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:53.907" starttime="20191121 17:30:53.907"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_status=1</arg>
<arg>delivery_status=1</arg>
<arg>mobile=13188676566</arg>
<arg>contact=wy</arg>
<arg>order_id=7e60145c0b5511ea9dbb0242ac15000a</arg>
<arg>commodity_name=走过路过不要错过，走过路过不要错过-再见</arg>
<arg>order_time=0,155555</arg>
<arg>pay_time=0,155555</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:53.908" level="INFO">${unessential_params} = {'pay_status': '1', 'delivery_status': '1', 'mobile': '13188676566', 'contact': 'wy', 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'order_time': '0,155555'...</msg>
<status status="PASS" endtime="20191121 17:30:53.908" starttime="20191121 17:30:53.907"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Orders Export Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:53.909" level="INFO">[{'pay_status': '1'}, {'delivery_status': '1'}, {'mobile': '13188676566'}, {'contact': 'wy'}, {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}, {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}, {'order_time': '0,155555'}, {'pay_time': '0,155555'}]</msg>
<msg timestamp="20191121 17:30:53.909" level="INFO">${results} = [{'pay_status': '1'}, {'delivery_status': '1'}, {'mobile': '13188676566'}, {'contact': 'wy'}, {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}, {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}, {'order_time...</msg>
<status status="PASS" endtime="20191121 17:30:53.910" starttime="20191121 17:30:53.909"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_status': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.029" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.029" starttime="20191121 17:30:53.911"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.033" level="INFO">[{'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13388888888', 'confirm_type': None, 'order_id': '83171886049a11eab9c20242ac15000a', 'order_time': 1573487225.900814, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 500, 'real_price': 400, 'contact': '张永兴定时任务测试', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '蓝色款1', 'specification_id': '6c9d8f67046a11eab066309c23b28abb', 'unit_original_price': 100, 'amount': 5, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573487405.900814, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573487225.903692, 'trade_no': None, 'ht_code': '10001483', 'updated_time': 1573487225.903723, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13388888888', 'confirm_type': None, 'order_id': 'b7e4d392049911eaa4030242ac15000a', 'order_time': 1573486884.993511, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 500, 'real_price': 400, 'contact': '张永兴定时任务测试', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '蓝色款1', 'specification_id': '6c9d8f67046a11eab066309c23b28abb', 'unit_original_price': 100, 'amount': 5, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573487064.993511, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573486884.997106, 'trade_no': None, 'ht_code': '10001483', 'updated_time': 1573486884.997156, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '274d6dba047311ea90340242ac15000a', 'order_time': 1573470321.534084, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573470921.534084, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573470321.537911, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573470321.537943, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'dac50a4a047011eab066309c23b28abb', 'order_time': 1573469334.141216, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573469934.141216, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573469334.142021, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573469334.142035, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'b9756a14046c11eab066309c23b28abb', 'order_time': 1573467560.26758, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573468160.26758, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467560.268523, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467560.268545, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '74458a64046c11eab066309c23b28abb', 'order_time': 1573467444.190481, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573468044.190481, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467444.192792, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467444.19284, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'e90b19aa046b11eab066309c23b28abb', 'order_time': 1573467210.604137, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467810.604137, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573467210.606612, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573467210.606664, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '5988c3ae046b11eab066309c23b28abb', 'order_time': 1573466969.836533, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467569.836533, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573466969.837179, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573466969.837191, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': False, 'pay_status': 1, 'delivery_address': '45645', 'mobile': '13940278252', 'confirm_type': None, 'order_id': '4337ef44046b11eab066309c23b28abb', 'order_time': 1573466932.396306, 'platform_coupon_amount': 0, 'delivery_region': '456456', 'total_amount': 90, 'real_price': 80, 'contact': '智慧', 'discount_price': 0, 'detail': [{'subtitle': '玻璃水22221', 'specification_name': '红色款1', 'specification_id': '6c9d8f66046a11eab066309c23b28abb', 'unit_original_price': 90, 'amount': 1, 'unit_sell_price': 80, 'commodity_name': '可乐玻璃水', 'commodity_images': ['dsakdwq', 'wqeqweq'], 'commodity_id': '56bd588e046a11eab066309c23b28abb'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1573467532.396306, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1573466932.398485, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1573466932.398532, 'commodity_name': '可乐玻璃水', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:54.033" starttime="20191121 17:30:54.031"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.034" starttime="20191121 17:30:54.030"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.037" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.037" starttime="20191121 17:30:54.035"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.038" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.038" starttime="20191121 17:30:54.037"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.040" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.040" starttime="20191121 17:30:54.039"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.041" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.042" starttime="20191121 17:30:54.040"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.044" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_status=1</msg>
<status status="PASS" endtime="20191121 17:30:54.044" starttime="20191121 17:30:54.043"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.046" starttime="20191121 17:30:54.045"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.048" starttime="20191121 17:30:54.047"></status>
</kw>
<msg timestamp="20191121 17:30:54.048" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.048" starttime="20191121 17:30:54.042"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.051" starttime="20191121 17:30:54.050"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.062" starttime="20191121 17:30:54.052"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.062" starttime="20191121 17:30:54.052"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.063" starttime="20191121 17:30:54.062"></status>
</kw>
<msg timestamp="20191121 17:30:54.063" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.063" starttime="20191121 17:30:54.049"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.064" starttime="20191121 17:30:54.064"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.065" starttime="20191121 17:30:54.063"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.065" level="INFO">116.28</msg>
<status status="PASS" endtime="20191121 17:30:54.065" starttime="20191121 17:30:54.065"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.066" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:54.066" starttime="20191121 17:30:54.066"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.067" level="INFO">${elapsed} = 116</msg>
<status status="PASS" endtime="20191121 17:30:54.067" starttime="20191121 17:30:54.067"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.069" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.069" starttime="20191121 17:30:54.069"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.069" starttime="20191121 17:30:54.068"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.069" starttime="20191121 17:30:54.067"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.069" starttime="20191121 17:30:54.034"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.070" starttime="20191121 17:30:53.910"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.070" starttime="20191121 17:30:53.910"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.070" starttime="20191121 17:30:53.910"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_status': '1'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.192" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.192" starttime="20191121 17:30:54.071"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.198" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7ec7e7240c3811eabc550242ac15000a', 'order_time': 1574324737.294362, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325337.294362, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325337.294362, 'delivery_company': None, 'postage': None, 'pay_time': 1574324743.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324737.296745, 'trade_no': '4200000464201911212385312402', 'ht_code': '10001075', 'updated_time': 1574324745.28375, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '4fa32cc40c3811ea9cf50242ac15000a', 'order_time': 1574324658.199959, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574325258.199959, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574325258.199959, 'delivery_company': None, 'postage': None, 'pay_time': 1574324664.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574324658.203517, 'trade_no': '4200000454201911216224166540', 'ht_code': '10001075', 'updated_time': 1574324665.900112, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '大地好的好的好', 'mobile': '13388888888', 'confirm_type': None, 'order_id': 'bea01e6e0c3511ea83a00242ac15000a', 'order_time': 1574323555.917227, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '张永兴', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574324155.917227, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574324155.917227, 'delivery_company': None, 'postage': None, 'pay_time': 1574323657.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574323555.920192, 'trade_no': '4200000468201911219747584294', 'ht_code': '10001483', 'updated_time': 1574323659.033387, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': 'cfe3b2020c3111eaa09a0242ac15000a', 'order_time': 1574321866.894716, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574322466.894716, 'delivery_status': None, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574322466.894716, 'delivery_company': None, 'postage': None, 'pay_time': 1574321873.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574321866.897209, 'trade_no': '4200000458201911212862464808', 'ht_code': '10001075', 'updated_time': 1574321874.726339, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '45eb6ce20c2d11ea88790242ac15000a', 'order_time': 1574319917.432834, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574320517.432834, 'delivery_status': None, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574320517.432834, 'delivery_company': None, 'postage': None, 'pay_time': 1574319924.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574319917.43546, 'trade_no': '4200000466201911211602519422', 'ht_code': '10001075', 'updated_time': 1574319926.024889, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '测试', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'bb023db40c0311ea9fdf0242ac15000a', 'order_time': 1574302075.012758, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1, 'real_price': 1, 'contact': '王超', 'discount_price': 0, 'detail': [{'subtitle': 'test商城test商城test商城te', 'specification_name': 'test', 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'pay_expire_time': 1574302675.012758, 'delivery_status': None, 'unit_original_price': 1, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574302675.012758, 'delivery_company': None, 'postage': None, 'pay_time': 1574302078.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574302075.016081, 'trade_no': '4200000471201911215259490128', 'ht_code': '10001554', 'updated_time': 1574302080.710067, 'commodity_name': 'test商城test商城test商城te', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'a36c46180c0311eaae930242ac15000a', 'order_time': 1574302035.442425, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574302635.442425, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574302635.442425, 'delivery_company': None, 'postage': None, 'pay_time': 1574302039.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574302035.445613, 'trade_no': '4200000456201911212174679069', 'ht_code': '10001554', 'updated_time': 1574302041.120972, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '50848d360c0111ea9fdf0242ac15000a', 'order_time': 1574301037.357081, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574301637.357081, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574301637.357081, 'delivery_company': None, 'postage': None, 'pay_time': 1574301048.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574301037.361352, 'trade_no': '4200000467201911216018096711', 'ht_code': '10001442', 'updated_time': 1574301050.3046, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7361e6100b6011ea9d820242ac15000a', 'order_time': 1574231946.87688, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 17600, 'real_price': 2, 'contact': '王超', 'discount_price': 17598, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574232546.87688, 'unit_original_price': 8800, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574232546.87688, 'delivery_company': None, 'postage': None, 'pay_time': 1574231952.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574231946.879968, 'trade_no': '4200000463201911201477999989', 'ht_code': '10001075', 'updated_time': 1574231953.856587, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'f96c72000b4411eaaae90242ac15000a', 'order_time': 1574220145.852262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 200, 'real_price': 2, 'contact': '王超', 'discount_price': 198, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220745.852262, 'unit_original_price': 100, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220745.852262, 'delivery_company': None, 'postage': None, 'pay_time': 1574220154.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574220145.855333, 'trade_no': '4200000453201911204903381810', 'ht_code': '10001553', 'updated_time': 1574220155.961172, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:54.199" starttime="20191121 17:30:54.194"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.199" starttime="20191121 17:30:54.193"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.202" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.202" starttime="20191121 17:30:54.201"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.203" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.204" starttime="20191121 17:30:54.202"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.205" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.205" starttime="20191121 17:30:54.204"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.207" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.207" starttime="20191121 17:30:54.206"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.210" level="INFO">https://mall-server-d.parkone.cn/admin/orders?delivery_status=1</msg>
<status status="PASS" endtime="20191121 17:30:54.210" starttime="20191121 17:30:54.209"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.212" starttime="20191121 17:30:54.210"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.213" starttime="20191121 17:30:54.212"></status>
</kw>
<msg timestamp="20191121 17:30:54.214" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.214" starttime="20191121 17:30:54.208"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.216" starttime="20191121 17:30:54.215"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.228" starttime="20191121 17:30:54.218"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.228" starttime="20191121 17:30:54.217"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.229" starttime="20191121 17:30:54.229"></status>
</kw>
<msg timestamp="20191121 17:30:54.230" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.230" starttime="20191121 17:30:54.214"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.231" starttime="20191121 17:30:54.231"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.231" starttime="20191121 17:30:54.230"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.232" level="INFO">118.201</msg>
<status status="PASS" endtime="20191121 17:30:54.232" starttime="20191121 17:30:54.231"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.233" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:54.233" starttime="20191121 17:30:54.232"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.234" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:54.234" starttime="20191121 17:30:54.233"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.236" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.235"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.234"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.233"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.199"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.070"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.070"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.236" starttime="20191121 17:30:54.070"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'mobile': '13188676566'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.354" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.354" starttime="20191121 17:30:54.237"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.356" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:54.357" starttime="20191121 17:30:54.355"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.357" starttime="20191121 17:30:54.354"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.360" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.360" starttime="20191121 17:30:54.358"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.361" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.361" starttime="20191121 17:30:54.360"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.363" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.363" starttime="20191121 17:30:54.362"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.364" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.365" starttime="20191121 17:30:54.363"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.367" level="INFO">https://mall-server-d.parkone.cn/admin/orders?mobile=13188676566</msg>
<status status="PASS" endtime="20191121 17:30:54.367" starttime="20191121 17:30:54.366"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.369" starttime="20191121 17:30:54.368"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.371" starttime="20191121 17:30:54.370"></status>
</kw>
<msg timestamp="20191121 17:30:54.371" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.371" starttime="20191121 17:30:54.365"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.374" starttime="20191121 17:30:54.373"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.384" starttime="20191121 17:30:54.375"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.384" starttime="20191121 17:30:54.374"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.386" starttime="20191121 17:30:54.385"></status>
</kw>
<msg timestamp="20191121 17:30:54.386" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.386" starttime="20191121 17:30:54.372"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.388" starttime="20191121 17:30:54.388"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.389" starttime="20191121 17:30:54.387"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.390" level="INFO">114.069</msg>
<status status="PASS" endtime="20191121 17:30:54.390" starttime="20191121 17:30:54.389"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.391" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:54.391" starttime="20191121 17:30:54.390"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.393" level="INFO">${elapsed} = 114</msg>
<status status="PASS" endtime="20191121 17:30:54.393" starttime="20191121 17:30:54.392"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.394" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.394" starttime="20191121 17:30:54.394"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.393"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.391"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.357"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.237"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.237"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.395" starttime="20191121 17:30:54.236"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'contact': 'wy'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.514" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.515" starttime="20191121 17:30:54.397"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.515" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:54.516" starttime="20191121 17:30:54.515"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.516" starttime="20191121 17:30:54.515"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.516" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.516" starttime="20191121 17:30:54.516"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.517" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.517" starttime="20191121 17:30:54.516"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.517" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.517" starttime="20191121 17:30:54.517"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.517" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.517" starttime="20191121 17:30:54.517"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.518" level="INFO">https://mall-server-d.parkone.cn/admin/orders?contact=wy</msg>
<status status="PASS" endtime="20191121 17:30:54.518" starttime="20191121 17:30:54.518"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.519" starttime="20191121 17:30:54.518"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.519" starttime="20191121 17:30:54.519"></status>
</kw>
<msg timestamp="20191121 17:30:54.519" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.519" starttime="20191121 17:30:54.517"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.520" starttime="20191121 17:30:54.519"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.522" starttime="20191121 17:30:54.520"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.522" starttime="20191121 17:30:54.520"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.522" starttime="20191121 17:30:54.522"></status>
</kw>
<msg timestamp="20191121 17:30:54.523" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.523" starttime="20191121 17:30:54.519"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.523" starttime="20191121 17:30:54.523"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.523" starttime="20191121 17:30:54.523"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.524" level="INFO">115.067</msg>
<status status="PASS" endtime="20191121 17:30:54.524" starttime="20191121 17:30:54.523"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.524" level="INFO">${elapsed} = 115</msg>
<status status="PASS" endtime="20191121 17:30:54.524" starttime="20191121 17:30:54.524"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.525" level="INFO">${elapsed} = 115</msg>
<status status="PASS" endtime="20191121 17:30:54.525" starttime="20191121 17:30:54.524"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.526" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.525"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.525"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.524"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.516"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.396"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.396"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.526" starttime="20191121 17:30:54.395"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_id': '7e60145c0b5511ea9dbb0242ac15000a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.647" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.647" starttime="20191121 17:30:54.527"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.650" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'order_time': 1574227240.856133, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227840.856133, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228684.513688, 'delivery_order': '0101010101010', 'pay_expire_time': 1574227840.856133, 'delivery_company': '顺丰速递', 'postage': 0, 'pay_time': 1574227247.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574227240.858832, 'trade_no': '4200000457201911207176559869', 'ht_code': '10001075', 'updated_time': 1574228684.514251, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:54.650" starttime="20191121 17:30:54.648"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.650" starttime="20191121 17:30:54.647"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.653" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.653" starttime="20191121 17:30:54.652"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.655" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.655" starttime="20191121 17:30:54.654"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.657" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.657" starttime="20191121 17:30:54.655"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.658" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.658" starttime="20191121 17:30:54.657"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.661" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_id=7e60145c0b5511ea9dbb0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:54.661" starttime="20191121 17:30:54.660"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.663" starttime="20191121 17:30:54.662"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.664" starttime="20191121 17:30:54.664"></status>
</kw>
<msg timestamp="20191121 17:30:54.665" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.665" starttime="20191121 17:30:54.659"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.668" starttime="20191121 17:30:54.667"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.678" starttime="20191121 17:30:54.669"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.678" starttime="20191121 17:30:54.668"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.679" starttime="20191121 17:30:54.678"></status>
</kw>
<msg timestamp="20191121 17:30:54.679" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.680" starttime="20191121 17:30:54.666"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.681" starttime="20191121 17:30:54.681"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.682" starttime="20191121 17:30:54.680"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.682" level="INFO">118.078</msg>
<status status="PASS" endtime="20191121 17:30:54.683" starttime="20191121 17:30:54.682"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.683" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:54.683" starttime="20191121 17:30:54.683"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.685" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:54.685" starttime="20191121 17:30:54.684"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.687" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.686"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.685"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.684"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.651"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.526"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.526"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.687" starttime="20191121 17:30:54.526"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '走过路过不要错过，走过路过不要错过-再见'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.825" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.826" starttime="20191121 17:30:54.689"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.831" level="INFO">[{'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': 2, 'order_id': '1fa56b560b4611eaa3c10242ac15000a', 'order_time': 1574220639.476032, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 100, 'real_price': 1, 'contact': '王超', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574221239.476032, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228983.920859, 'delivery_order': '010101010101010', 'pay_expire_time': 1574221239.476032, 'delivery_company': '测试物流', 'postage': 0, 'pay_time': 1574220650.0, 'confirm_time': 1574229005.741067, 'delivery_status': 3, 'created_time': 1574220639.478746, 'trade_no': '4200000452201911208221303763', 'ht_code': '10001553', 'updated_time': 1574229005.825145, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7e60145c0b5511ea9dbb0242ac15000a', 'order_time': 1574227240.856133, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227840.856133, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574228684.513688, 'delivery_order': '0101010101010', 'pay_expire_time': 1574227840.856133, 'delivery_company': '顺丰速递', 'postage': 0, 'pay_time': 1574227247.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574227240.858832, 'trade_no': '4200000457201911207176559869', 'ht_code': '10001075', 'updated_time': 1574228684.514251, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '542a75720b5711ea9d820242ac15000a', 'order_time': 1574228029.033906, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228629.033906, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228629.033906, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574228029.037176, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574228629.191849, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7ec740e00b5611ea9dbb0242ac15000a', 'order_time': 1574227671.02927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228271.02927, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228271.02927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227671.031749, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574228271.212699, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '75b618140b5611eaa3c10242ac15000a', 'order_time': 1574227655.816469, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228255.816469, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228255.816469, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227655.819742, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574228255.984453, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '17186eaa0b5711ea9d820242ac15000a', 'order_time': 1574227926.574662, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574228526.574662, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574228526.574662, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574227926.577366, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574227950.56497, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': 2, 'order_id': 'a0e1d6f60b5411eaaae90242ac15000a', 'order_time': 1574226869.252247, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '好物可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574227469.252247, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': 1574226920.760629, 'delivery_order': '123', 'pay_expire_time': 1574227469.252247, 'delivery_company': '123', 'postage': 100, 'pay_time': 1574226875.0, 'confirm_time': 1574226973.112821, 'delivery_status': 3, 'created_time': 1574226869.254946, 'trade_no': '4200000452201911208270120144', 'ht_code': '10001442', 'updated_time': 1574226973.199195, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6b66551e0b4611ea9d820242ac15000a', 'order_time': 1574220766.568921, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1200, 'contact': '王超', 'discount_price': 11100, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574221366.568921, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221366.568921, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220766.572196, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221366.76559, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2010910', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '326373c80b4611eaaae90242ac15000a', 'order_time': 1574220670.920505, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区0910', 'total_amount': 61500, 'real_price': 6000, 'contact': 'Robot杨秀兰', 'discount_price': 55500, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存0可测', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574221270.920505, 'unit_original_price': 12300, 'amount': 5, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221270.920505, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220670.922891, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574221276.099253, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '2bd58cc60b4611eaa3c10242ac15000a', 'order_time': 1574220659.924126, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 100, 'real_price': 1, 'contact': '王超', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574221259.924126, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221259.924126, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220659.926579, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221260.055325, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b6b492ca0b4511eaaae90242ac15000a', 'order_time': 1574220463.414588, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1200, 'contact': '王超', 'discount_price': 11100, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574221063.414588, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574221063.414588, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220463.417166, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574221063.547564, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2018068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '042e4b3c0b4511ea9dbb0242ac15000a', 'order_time': 1574220163.900235, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区8068', 'total_amount': 61500, 'real_price': 6000, 'contact': 'Robot胡淑珍', 'discount_price': 55500, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存1', 'specification_id': '28f8c6820b3011ea9d820242ac15000a', 'pay_expire_time': 1574220763.900235, 'unit_original_price': 12300, 'amount': 5, 'unit_sell_price': 1200, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220763.900235, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574220163.902744, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574220764.054628, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '89a4afdc0b4411eaa3c10242ac15000a', 'order_time': 1574219958.316262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 400, 'real_price': 4, 'contact': '王超', 'discount_price': 396, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220558.316262, 'unit_original_price': 100, 'amount': 4, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220558.316262, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574219958.318849, 'trade_no': None, 'ht_code': '10001553', 'updated_time': 1574220558.446085, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '546456', 'mobile': '13940278252', 'confirm_type': None, 'order_id': 'b1d3636e0b4311ea9d820242ac15000a', 'order_time': 1574219596.234091, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 100, 'real_price': 1, 'contact': '都是非法', 'discount_price': 99, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220196.234091, 'unit_original_price': 100, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220196.234091, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574219596.237362, 'trade_no': None, 'ht_code': '10001407', 'updated_time': 1574220196.420581, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'f96c72000b4411eaaae90242ac15000a', 'order_time': 1574220145.852262, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 200, 'real_price': 2, 'contact': '王超', 'discount_price': 198, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '库存10', 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'pay_expire_time': 1574220745.852262, 'unit_original_price': 100, 'amount': 2, 'unit_sell_price': 1, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574220745.852262, 'delivery_company': None, 'postage': None, 'pay_time': 1574220154.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574220145.855333, 'trade_no': '4200000453201911204903381810', 'ht_code': '10001553', 'updated_time': 1574220155.961172, 'commodity_name': '走过路过不要错过，走过路过不要错过-再见', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:54.832" starttime="20191121 17:30:54.827"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.832" starttime="20191121 17:30:54.826"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.835" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.835" starttime="20191121 17:30:54.834"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.837" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.837" starttime="20191121 17:30:54.836"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.838" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.839" starttime="20191121 17:30:54.837"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.840" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.840" starttime="20191121 17:30:54.839"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.843" level="INFO">https://mall-server-d.parkone.cn/admin/orders?commodity_name=%E8%B5%B0%E8%BF%87%E8%B7%AF%E8%BF%87%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87%EF%BC%8C%E8%B5%B0%E8%BF%87%E8%B7%AF%E8%BF%87%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87-%E5%86%8D%E8%A7%81</msg>
<status status="PASS" endtime="20191121 17:30:54.843" starttime="20191121 17:30:54.842"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.845" starttime="20191121 17:30:54.843"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.846" starttime="20191121 17:30:54.845"></status>
</kw>
<msg timestamp="20191121 17:30:54.847" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.847" starttime="20191121 17:30:54.841"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.850" starttime="20191121 17:30:54.849"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.863" starttime="20191121 17:30:54.851"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.863" starttime="20191121 17:30:54.850"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.864" starttime="20191121 17:30:54.863"></status>
</kw>
<msg timestamp="20191121 17:30:54.864" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:54.864" starttime="20191121 17:30:54.847"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:54.866" starttime="20191121 17:30:54.865"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.866" starttime="20191121 17:30:54.865"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.867" level="INFO">133.843</msg>
<status status="PASS" endtime="20191121 17:30:54.867" starttime="20191121 17:30:54.866"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.867" level="INFO">${elapsed} = 133</msg>
<status status="PASS" endtime="20191121 17:30:54.867" starttime="20191121 17:30:54.867"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:54.868" level="INFO">${elapsed} = 133</msg>
<status status="PASS" endtime="20191121 17:30:54.868" starttime="20191121 17:30:54.868"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:54.870" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:54.870" starttime="20191121 17:30:54.869"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.870" starttime="20191121 17:30:54.869"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.870" starttime="20191121 17:30:54.868"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.870" starttime="20191121 17:30:54.833"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.870" starttime="20191121 17:30:54.688"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.871" starttime="20191121 17:30:54.688"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.871" starttime="20191121 17:30:54.687"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_time': '0,155555'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:54.989" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:54.989" starttime="20191121 17:30:54.872"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.992" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:54.992" starttime="20191121 17:30:54.991"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:54.992" starttime="20191121 17:30:54.990"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:54.995" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.995" starttime="20191121 17:30:54.994"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:54.996" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:54.997" starttime="20191121 17:30:54.995"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:54.998" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:54.998" starttime="20191121 17:30:54.997"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.000" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.000" starttime="20191121 17:30:54.999"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.003" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_time=0%2C155555</msg>
<status status="PASS" endtime="20191121 17:30:55.003" starttime="20191121 17:30:55.002"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.005" starttime="20191121 17:30:55.003"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.006" starttime="20191121 17:30:55.005"></status>
</kw>
<msg timestamp="20191121 17:30:55.007" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.007" starttime="20191121 17:30:55.001"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.009" starttime="20191121 17:30:55.009"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.016" starttime="20191121 17:30:55.011"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.016" starttime="20191121 17:30:55.010"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.016" starttime="20191121 17:30:55.016"></status>
</kw>
<msg timestamp="20191121 17:30:55.016" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.016" starttime="20191121 17:30:55.007"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.017" starttime="20191121 17:30:55.017"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.017" starttime="20191121 17:30:55.017"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.017" level="INFO">115.031</msg>
<status status="PASS" endtime="20191121 17:30:55.017" starttime="20191121 17:30:55.017"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.018" level="INFO">${elapsed} = 115</msg>
<status status="PASS" endtime="20191121 17:30:55.018" starttime="20191121 17:30:55.018"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.018" level="INFO">${elapsed} = 115</msg>
<status status="PASS" endtime="20191121 17:30:55.018" starttime="20191121 17:30:55.018"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:55.019" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:55.019"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:55.018"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:55.018"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:54.993"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:54.871"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:54.871"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.019" starttime="20191121 17:30:54.871"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'pay_time': '0,155555'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.150" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.150" starttime="20191121 17:30:55.020"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.153" level="INFO">[]</msg>
<status status="PASS" endtime="20191121 17:30:55.153" starttime="20191121 17:30:55.152"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.153" starttime="20191121 17:30:55.151"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.156" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.156" starttime="20191121 17:30:55.155"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.158" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.158" starttime="20191121 17:30:55.157"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.160" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.160" starttime="20191121 17:30:55.159"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.161" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.161" starttime="20191121 17:30:55.160"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.164" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_time=0%2C155555</msg>
<status status="PASS" endtime="20191121 17:30:55.164" starttime="20191121 17:30:55.163"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.166" starttime="20191121 17:30:55.165"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.168" starttime="20191121 17:30:55.167"></status>
</kw>
<msg timestamp="20191121 17:30:55.168" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.168" starttime="20191121 17:30:55.162"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.171" starttime="20191121 17:30:55.170"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.183" starttime="20191121 17:30:55.172"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.183" starttime="20191121 17:30:55.171"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.184" starttime="20191121 17:30:55.183"></status>
</kw>
<msg timestamp="20191121 17:30:55.184" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.184" starttime="20191121 17:30:55.169"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.186" starttime="20191121 17:30:55.186"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.187" starttime="20191121 17:30:55.185"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.187" level="INFO">128.358</msg>
<status status="PASS" endtime="20191121 17:30:55.187" starttime="20191121 17:30:55.187"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.188" level="INFO">${elapsed} = 128</msg>
<status status="PASS" endtime="20191121 17:30:55.188" starttime="20191121 17:30:55.188"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.190" level="INFO">${elapsed} = 128</msg>
<status status="PASS" endtime="20191121 17:30:55.190" starttime="20191121 17:30:55.189"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:55.191" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:55.191" starttime="20191121 17:30:55.191"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.190"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.188"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.154"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.020"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.020"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:55.019"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:53.910"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.192" starttime="20191121 17:30:53.908"></status>
</kw>
<kw name="Get Admin Orders Export Success">
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.351" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.351" starttime="20191121 17:30:55.193"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.356" level="INFO">[{'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015801', 'mobile': '13000000000', 'confirm_type': 1, 'order_id': '55a264a60c4111eabd520242ac15000a', 'order_time': 1574328533.732245, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5801', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot李兰英', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329133.732245, 'delivery_status': 1, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': 1574328653.489658, 'delivery_order': '123', 'pay_expire_time': 1574329133.732245, 'delivery_company': '123', 'postage': 2, 'pay_time': None, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574328533.734963, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328653.59031, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2019068', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '39eb5c540c4111eab3e80242ac15000a', 'order_time': 1574328487.234244, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区9068', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot吴楠', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329087.234244, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329087.234244, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328487.237078, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328489.142459, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011863', 'mobile': '13000000000', 'confirm_type': None, 'order_id': '1c03c0a00c4111ea9cf50242ac15000a', 'order_time': 1574328437.062136, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1863', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot蔡洁', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329037.062136, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329037.062136, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328437.065802, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328439.29727, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '91040b7a0c0111ea84de0242ac15000a', 'order_time': 1574301145.566972, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '你', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574301745.566972, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328373.884103, 'delivery_order': '123', 'pay_expire_time': 1574301745.566972, 'delivery_company': '123', 'postage': 12300, 'pay_time': 1574301153.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574301145.569828, 'trade_no': '4200000454201911210545919504', 'ht_code': '10001442', 'updated_time': 1574328373.980065, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2011050', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'e62176c60c4011eab3e80242ac15000a', 'order_time': 1574328346.660318, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区1050', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot庞明', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328946.660318, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328946.660318, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328346.663002, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328348.692777, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '6a998d3c0c3f11eab3e80242ac15000a', 'order_time': 1574327709.912523, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328309.912523, 'delivery_status': None, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328309.912523, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327709.91705, 'trade_no': None, 'ht_code': '10001442', 'updated_time': 1574328310.077677, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2012937', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'abfdac760c4011eabd520242ac15000a', 'order_time': 1574328249.116927, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区2937', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot平佳', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328849.116927, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328849.116927, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328249.122139, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328251.074068, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': 'b9aff05a0c3f11eab3e80242ac15000a', 'order_time': 1574327842.599283, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 12300, 'real_price': 1, 'contact': '王超', 'discount_price': 12299, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '88元套餐券', 'specification_id': '19471aa005e911eaaf590242ac15000a', 'pay_expire_time': 1574328442.599283, 'delivery_status': 1, 'unit_original_price': 12300, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328442.599283, 'delivery_company': None, 'postage': None, 'pay_time': 1574328240.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327842.604105, 'trade_no': '4200000461201911213825407294', 'ht_code': '10001553', 'updated_time': 1574328241.768393, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'it国际', 'mobile': '18201011104', 'confirm_type': None, 'order_id': '683ccb960c3811eab3e80242ac15000a', 'order_time': 1574324699.472194, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 1000, 'real_price': 1, 'contact': '刘媛媛', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574325299.472194, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574328132.24229, 'delivery_order': '11111', 'pay_expire_time': 1574325299.472194, 'delivery_company': '几乎完全排位', 'postage': 1100, 'pay_time': 1574324705.0, 'confirm_time': None, 'delivery_status': 2, 'created_time': 1574324699.476313, 'trade_no': '4200000469201911218745089108', 'ht_code': '10001075', 'updated_time': 1574328132.345003, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '看看', 'mobile': '18845644301', 'confirm_type': None, 'order_id': '92483c520c3f11eab3e80242ac15000a', 'order_time': 1574327776.489012, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '李', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574328376.489012, 'delivery_status': 1, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328376.489012, 'delivery_company': None, 'postage': None, 'pay_time': 1574327888.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327776.49168, 'trade_no': '4200000470201911216099494157', 'ht_code': '10001442', 'updated_time': 1574327889.299207, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '7717495a0c3f11ea9cf50242ac15000a', 'order_time': 1574327730.869533, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328330.869533, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328330.869533, 'delivery_company': None, 'postage': None, 'pay_time': 1574327738.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327730.872586, 'trade_no': '4200000463201911219069021951', 'ht_code': '10001540', 'updated_time': 1574327739.811574, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '45d32b020c3f11eabd520242ac15000a', 'order_time': 1574327648.214815, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328248.214815, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328248.214815, 'delivery_company': None, 'postage': None, 'pay_time': 1574327655.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327648.217699, 'trade_no': '4200000452201911219744220158', 'ht_code': '10001540', 'updated_time': 1574327656.53038, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': 'IT国际主楼201', 'mobile': '18518748005', 'confirm_type': None, 'order_id': '06ed5c5a0c3f11eabc550242ac15000a', 'order_time': 1574327542.68935, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区', 'total_amount': 8800, 'real_price': 1, 'contact': '王超', 'discount_price': 8799, 'detail': [{'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'specification_name': '1元购', 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'pay_expire_time': 1574328142.68935, 'delivery_status': 1, 'unit_original_price': 8800, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328142.68935, 'delivery_company': None, 'postage': None, 'pay_time': 1574327551.0, 'confirm_time': None, 'delivery_status': 1, 'created_time': 1574327542.693803, 'trade_no': '4200000463201911216684057701', 'ht_code': '10001540', 'updated_time': 1574327552.059211, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 3, 'delivery_address': '远航西路IT国际2015914', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'ccef58320c3e11ea9cf50242ac15000a', 'order_time': 1574327445.395599, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区5914', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot赵旭', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574328045.395599, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574328045.395599, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574327445.397588, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574327447.410447, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}, {'apollo_status': True, 'pay_status': 2, 'delivery_address': '啦啦啦啦', 'mobile': '13674137781', 'confirm_type': 2, 'order_id': 'ce7881480c2e11ea94490242ac15000a', 'order_time': 1574320576.02399, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市和平区', 'total_amount': 1000, 'real_price': 1, 'contact': '蔡畅', 'discount_price': 999, 'detail': [{'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'specification_name': '1L', 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'pay_expire_time': 1574321176.02399, 'delivery_status': 3, 'unit_original_price': 1000, 'amount': 1, 'unit_sell_price': 1, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a'}], 'delivery_time': 1574327438.6578, 'delivery_order': '123', 'pay_expire_time': 1574321176.02399, 'delivery_company': '123', 'postage': 2, 'pay_time': 1574320584.0, 'confirm_time': 1574327441.761475, 'delivery_status': 3, 'created_time': 1574320576.029396, 'trade_no': '4200000454201911213757700164', 'ht_code': '10001540', 'updated_time': 1574327441.853075, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:30:55.357" starttime="20191121 17:30:55.352"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.357" starttime="20191121 17:30:55.352"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>admin_order/get_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.360" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.360" starttime="20191121 17:30:55.359"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.362" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.362" starttime="20191121 17:30:55.361"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.364" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.364" starttime="20191121 17:30:55.363"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.365" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.365" starttime="20191121 17:30:55.364"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.368" level="INFO">https://mall-server-d.parkone.cn/admin/orders</msg>
<status status="PASS" endtime="20191121 17:30:55.368" starttime="20191121 17:30:55.367"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.370" starttime="20191121 17:30:55.369"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.371" starttime="20191121 17:30:55.371"></status>
</kw>
<msg timestamp="20191121 17:30:55.372" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.372" starttime="20191121 17:30:55.366"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.375" starttime="20191121 17:30:55.374"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.388" starttime="20191121 17:30:55.376"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.388" starttime="20191121 17:30:55.375"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.389" starttime="20191121 17:30:55.388"></status>
</kw>
<msg timestamp="20191121 17:30:55.389" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.389" starttime="20191121 17:30:55.373"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.391" starttime="20191121 17:30:55.390"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.391" starttime="20191121 17:30:55.389"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.391" level="INFO">155.14</msg>
<status status="PASS" endtime="20191121 17:30:55.392" starttime="20191121 17:30:55.391"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.392" level="INFO">${elapsed} = 155</msg>
<status status="PASS" endtime="20191121 17:30:55.392" starttime="20191121 17:30:55.392"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.393" level="INFO">${elapsed} = 155</msg>
<status status="PASS" endtime="20191121 17:30:55.393" starttime="20191121 17:30:55.393"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:55.395" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:55.395" starttime="20191121 17:30:55.394"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.395" starttime="20191121 17:30:55.394"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.395" starttime="20191121 17:30:55.392"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.395" starttime="20191121 17:30:55.358"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.395" starttime="20191121 17:30:55.192"></status>
</kw>
<doc>接口名:订单导出

请求方式:Get

预期结果:输入正确参数,http响应码返回 200,返回的Json数据为 Order 列表。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:55.396" starttime="20191121 17:30:53.905"></status>
</test>
<test id="s1-s2-s1-t9" name="Get Admin Orders Export Fail422">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:30:55.397" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:30:55.397" starttime="20191121 17:30:55.397"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_status=a</arg>
<arg>delivery_status=a</arg>
<arg>mobile=dsadsadasdas</arg>
<arg>contact=/</arg>
<arg>order_id=.</arg>
<arg>commodity_name=/</arg>
<arg>order_time=a</arg>
<arg>pay_time=a</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:30:55.398" level="INFO">${unessential_params} = {'pay_status': 'a', 'delivery_status': 'a', 'mobile': 'dsadsadasdas', 'contact': '/', 'order_id': '.', 'commodity_name': '/', 'order_time': 'a', 'pay_time': 'a'}</msg>
<status status="PASS" endtime="20191121 17:30:55.398" starttime="20191121 17:30:55.398"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Get Admin Orders Export Fail422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>success=False</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:30:55.399" level="INFO">${results} = [{'pay_status': 'a'}, {'delivery_status': 'a'}, {'mobile': 'dsadsadasdas'}, {'contact': '/'}, {'order_id': '.'}, {'commodity_name': '/'}, {'order_time': 'a'}, {'pay_time': 'a'}]</msg>
<status status="PASS" endtime="20191121 17:30:55.399" starttime="20191121 17:30:55.399"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_status': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.507" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.507" starttime="20191121 17:30:55.401"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.510" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.510" starttime="20191121 17:30:55.509"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.511" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.512" starttime="20191121 17:30:55.510"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.513" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.513" starttime="20191121 17:30:55.512"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.515" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.515" starttime="20191121 17:30:55.514"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.518" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_status=a</msg>
<status status="PASS" endtime="20191121 17:30:55.519" starttime="20191121 17:30:55.517"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.520" starttime="20191121 17:30:55.519"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.522" starttime="20191121 17:30:55.521"></status>
</kw>
<msg timestamp="20191121 17:30:55.522" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.523" starttime="20191121 17:30:55.515"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.525" starttime="20191121 17:30:55.524"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.531" starttime="20191121 17:30:55.526"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.532" starttime="20191121 17:30:55.526"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.533" starttime="20191121 17:30:55.532"></status>
</kw>
<msg timestamp="20191121 17:30:55.534" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.534" starttime="20191121 17:30:55.523"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.537" starttime="20191121 17:30:55.536"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.537" starttime="20191121 17:30:55.534"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.538" level="INFO">103.698</msg>
<status status="PASS" endtime="20191121 17:30:55.538" starttime="20191121 17:30:55.537"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.539" level="INFO">${elapsed} = 103</msg>
<status status="PASS" endtime="20191121 17:30:55.539" starttime="20191121 17:30:55.538"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.541" level="INFO">${elapsed} = 103</msg>
<status status="PASS" endtime="20191121 17:30:55.541" starttime="20191121 17:30:55.540"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:55.543" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:55.543" starttime="20191121 17:30:55.542"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.543" starttime="20191121 17:30:55.541"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.543" starttime="20191121 17:30:55.540"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.544" starttime="20191121 17:30:55.507"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.544" starttime="20191121 17:30:55.400"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.544" starttime="20191121 17:30:55.400"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.544" starttime="20191121 17:30:55.400"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_status': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.667" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.667" starttime="20191121 17:30:55.545"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.670" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.670" starttime="20191121 17:30:55.669"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.672" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.672" starttime="20191121 17:30:55.671"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.674" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:55.674" starttime="20191121 17:30:55.673"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.675" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:55.676" starttime="20191121 17:30:55.674"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.679" level="INFO">https://mall-server-d.parkone.cn/admin/orders?delivery_status=a</msg>
<status status="PASS" endtime="20191121 17:30:55.679" starttime="20191121 17:30:55.677"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.681" starttime="20191121 17:30:55.680"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.683" starttime="20191121 17:30:55.682"></status>
</kw>
<msg timestamp="20191121 17:30:55.683" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.683" starttime="20191121 17:30:55.676"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.686" starttime="20191121 17:30:55.685"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.692" starttime="20191121 17:30:55.687"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.692" starttime="20191121 17:30:55.686"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.694" starttime="20191121 17:30:55.693"></status>
</kw>
<msg timestamp="20191121 17:30:55.694" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:55.695" starttime="20191121 17:30:55.684"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:55.697" starttime="20191121 17:30:55.696"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.697" starttime="20191121 17:30:55.695"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.698" level="INFO">118.892</msg>
<status status="PASS" endtime="20191121 17:30:55.699" starttime="20191121 17:30:55.698"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.700" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:55.700" starttime="20191121 17:30:55.699"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:55.701" level="INFO">${elapsed} = 118</msg>
<status status="PASS" endtime="20191121 17:30:55.701" starttime="20191121 17:30:55.701"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:55.703" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:55.703" starttime="20191121 17:30:55.703"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.702"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.700"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.668"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.545"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.544"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.704" starttime="20191121 17:30:55.544"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'mobile': 'dsadsadasdas'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.820" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.821" starttime="20191121 17:30:55.706"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.823" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:55.824" starttime="20191121 17:30:55.822"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.825" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:55.825" starttime="20191121 17:30:55.824"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.827" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:55.827" starttime="20191121 17:30:55.826"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.828" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:55.829" starttime="20191121 17:30:55.827"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.832" level="INFO">https://mall-server-d.parkone.cn/admin/orders?mobile=dsadsadasdas</msg>
<status status="PASS" endtime="20191121 17:30:55.832" starttime="20191121 17:30:55.830"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:55.834" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:55.835" starttime="20191121 17:30:55.833"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:55.838" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?mobile=dsadsadasdas 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:55.838" starttime="20191121 17:30:55.836"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.839" starttime="20191121 17:30:55.835"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.839" starttime="20191121 17:30:55.829"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.839" starttime="20191121 17:30:55.821"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.840" starttime="20191121 17:30:55.705"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.840" starttime="20191121 17:30:55.704"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.840" starttime="20191121 17:30:55.704"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'contact': '/'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:55.958" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:55.958" starttime="20191121 17:30:55.843"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:55.961" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:55.961" starttime="20191121 17:30:55.960"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.963" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:55.963" starttime="20191121 17:30:55.961"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:55.964" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:55.964" starttime="20191121 17:30:55.963"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.966" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:55.966" starttime="20191121 17:30:55.965"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.969" level="INFO">https://mall-server-d.parkone.cn/admin/orders?contact=%2F</msg>
<status status="PASS" endtime="20191121 17:30:55.969" starttime="20191121 17:30:55.968"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:55.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:55.971" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:55.971" starttime="20191121 17:30:55.970"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:55.975" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?contact=%2F 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:55.975" starttime="20191121 17:30:55.973"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:55.975" starttime="20191121 17:30:55.972"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.976" starttime="20191121 17:30:55.967"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.976" starttime="20191121 17:30:55.959"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.977" starttime="20191121 17:30:55.842"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.977" starttime="20191121 17:30:55.841"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:55.977" starttime="20191121 17:30:55.840"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_id': '.'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:56.107" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:56.107" starttime="20191121 17:30:55.980"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:56.110" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:56.110" starttime="20191121 17:30:56.109"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.111" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:56.112" starttime="20191121 17:30:56.110"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:56.113" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:56.113" starttime="20191121 17:30:56.112"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.115" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:56.115" starttime="20191121 17:30:56.114"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.118" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_id=.</msg>
<status status="PASS" endtime="20191121 17:30:56.118" starttime="20191121 17:30:56.117"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:56.120" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:56.120" starttime="20191121 17:30:56.118"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:56.123" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_id=. 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:56.124" starttime="20191121 17:30:56.122"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:56.124" starttime="20191121 17:30:56.121"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.124" starttime="20191121 17:30:56.115"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.125" starttime="20191121 17:30:56.107"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.125" starttime="20191121 17:30:55.979"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.126" starttime="20191121 17:30:55.978"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.126" starttime="20191121 17:30:55.977"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'commodity_name': '/'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:56.258" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:56.259" starttime="20191121 17:30:56.129"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:56.262" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:56.262" starttime="20191121 17:30:56.260"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.263" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:56.263" starttime="20191121 17:30:56.262"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:56.265" level="INFO">${status_tag} = ShouldBe:422But:200</msg>
<status status="PASS" endtime="20191121 17:30:56.265" starttime="20191121 17:30:56.264"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.267" level="INFO">Set tag 'ShouldBe:422But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:56.268" starttime="20191121 17:30:56.265"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.270" level="INFO">https://mall-server-d.parkone.cn/admin/orders?commodity_name=%2F</msg>
<status status="PASS" endtime="20191121 17:30:56.271" starttime="20191121 17:30:56.269"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:56.272" level="FAIL">200 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:56.273" starttime="20191121 17:30:56.271"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:56.276" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?commodity_name=%2F 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:56.277" starttime="20191121 17:30:56.275"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:56.277" starttime="20191121 17:30:56.273"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.277" starttime="20191121 17:30:56.268"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.277" starttime="20191121 17:30:56.259"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.278" starttime="20191121 17:30:56.127"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.278" starttime="20191121 17:30:56.126"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.278" starttime="20191121 17:30:56.126"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'order_time': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:56.522" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:56.522" starttime="20191121 17:30:56.281"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:56.523" level="INFO">${bug_level} = BugLevel:Blocker</msg>
<status status="PASS" endtime="20191121 17:30:56.523" starttime="20191121 17:30:56.523"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.524" level="INFO">Set tag 'BugLevel:Blocker'.</msg>
<status status="PASS" endtime="20191121 17:30:56.524" starttime="20191121 17:30:56.523"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:56.524" level="INFO">${status_tag} = ShouldBe:422But:500</msg>
<status status="PASS" endtime="20191121 17:30:56.524" starttime="20191121 17:30:56.524"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.524" level="INFO">Set tag 'ShouldBe:422But:500'.</msg>
<status status="PASS" endtime="20191121 17:30:56.525" starttime="20191121 17:30:56.524"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.525" level="INFO">https://mall-server-d.parkone.cn/admin/orders?order_time=a</msg>
<status status="PASS" endtime="20191121 17:30:56.525" starttime="20191121 17:30:56.525"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:56.526" level="FAIL">500 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:56.526" starttime="20191121 17:30:56.525"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:56.527" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_time=a 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回500。</msg>
<status status="PASS" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.526"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.526"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.525"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.523"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.280"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.279"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.527" starttime="20191121 17:30:56.279"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'pay_time': 'a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Get Admin Orders Export Fail422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:56.779" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:56.779" starttime="20191121 17:30:56.528"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:56.782" level="INFO">${bug_level} = BugLevel:Blocker</msg>
<status status="PASS" endtime="20191121 17:30:56.782" starttime="20191121 17:30:56.781"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.784" level="INFO">Set tag 'BugLevel:Blocker'.</msg>
<status status="PASS" endtime="20191121 17:30:56.784" starttime="20191121 17:30:56.783"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:56.784" level="INFO">${status_tag} = ShouldBe:422But:500</msg>
<status status="PASS" endtime="20191121 17:30:56.784" starttime="20191121 17:30:56.784"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.785" level="INFO">Set tag 'ShouldBe:422But:500'.</msg>
<status status="PASS" endtime="20191121 17:30:56.785" starttime="20191121 17:30:56.784"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.785" level="INFO">https://mall-server-d.parkone.cn/admin/orders?pay_time=a</msg>
<status status="PASS" endtime="20191121 17:30:56.785" starttime="20191121 17:30:56.785"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:56.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:56.786" level="FAIL">500 != 422</msg>
<status status="FAIL" endtime="20191121 17:30:56.786" starttime="20191121 17:30:56.785"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:56.786" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?pay_time=a 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回500。</msg>
<status status="PASS" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.786"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.786"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.785"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.780"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.528"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.528"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:56.527"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:55.399"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:55.398"></status>
</kw>
<doc>接口名:订单导出

请求方式:Get

预期结果:输入错误参数,http响应码返回 422。</doc>
<tags>
<tag>BugLevel:Blocker</tag>
<tag>BugLevel:Critical</tag>
<tag>model:admin_order</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms~200ms</tag>
<tag>ShouldBe:422But:200</tag>
<tag>ShouldBe:422But:500</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:56.787" starttime="20191121 17:30:55.396">Several failures occurred:

1) 200 != 422

2) 200 != 422

3) 200 != 422

4) 200 != 422

5) 500 != 422

6) 500 != 422</status>
</test>
<test id="s1-s2-s1-t10" name="Patch Admin Order Delivery">
<kw name="Patch Admin Order Delivery Success">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Patch Admin Order Delivery">
<doc>确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.095" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.095" starttime="20191121 17:30:56.788"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.098" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.098" starttime="20191121 17:30:57.097"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.100" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.100" starttime="20191121 17:30:57.099"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.102" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.102" starttime="20191121 17:30:57.100"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.103" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.103" starttime="20191121 17:30:57.102"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.106" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a/delivery</msg>
<status status="PASS" endtime="20191121 17:30:57.106" starttime="20191121 17:30:57.105"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.108" starttime="20191121 17:30:57.106"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.109" starttime="20191121 17:30:57.108"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.110" starttime="20191121 17:30:57.104"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.111" level="INFO">304.922</msg>
<status status="PASS" endtime="20191121 17:30:57.111" starttime="20191121 17:30:57.110"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.113" level="INFO">${elapsed} = 304</msg>
<status status="PASS" endtime="20191121 17:30:57.113" starttime="20191121 17:30:57.112"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.115" level="INFO">${elapsed} = 304</msg>
<status status="PASS" endtime="20191121 17:30:57.116" starttime="20191121 17:30:57.114"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.119" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.119" starttime="20191121 17:30:57.118"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.119" starttime="20191121 17:30:57.116"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.120" starttime="20191121 17:30:57.113"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.120" starttime="20191121 17:30:57.096"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.121" starttime="20191121 17:30:56.788"></status>
</kw>
<doc>接口名:确认收货

请求方式:Patch

预期结果:输入正确参数,http响应码返回 204。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:204</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.121" starttime="20191121 17:30:56.787"></status>
</test>
<test id="s1-s2-s1-t11" name="Patch Admin Order Delivery Fail404">
<kw name="Patch Admin Order Delivery Fail404">
<arguments>
<arg>order_id=sdsadadadewqe4313213</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Patch Admin Order Delivery">
<doc>确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.264" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.264" starttime="20191121 17:30:57.126"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.267" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.267" starttime="20191121 17:30:57.266"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.267" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.267" starttime="20191121 17:30:57.267"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.268" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.268" starttime="20191121 17:30:57.267"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.268" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.268" starttime="20191121 17:30:57.268"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.269" level="INFO">https://mall-server-d.parkone.cn/admin/orders/sdsadadadewqe4313213/delivery</msg>
<status status="PASS" endtime="20191121 17:30:57.269" starttime="20191121 17:30:57.269"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.269" starttime="20191121 17:30:57.269"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.269" starttime="20191121 17:30:57.269"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.269" starttime="20191121 17:30:57.268"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.270" level="INFO">133.562</msg>
<status status="PASS" endtime="20191121 17:30:57.270" starttime="20191121 17:30:57.270"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.270" level="INFO">${elapsed} = 133</msg>
<status status="PASS" endtime="20191121 17:30:57.270" starttime="20191121 17:30:57.270"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.271" level="INFO">${elapsed} = 133</msg>
<status status="PASS" endtime="20191121 17:30:57.271" starttime="20191121 17:30:57.270"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.271" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.271" starttime="20191121 17:30:57.271"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.271" starttime="20191121 17:30:57.271"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.272" starttime="20191121 17:30:57.270"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.272" starttime="20191121 17:30:57.264"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.272" starttime="20191121 17:30:57.125"></status>
</kw>
<doc>接口名:确认收货

请求方式:Patch

预期结果:输入错误order_id,http响应码返回 404。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.272" starttime="20191121 17:30:57.122"></status>
</test>
<kw type="teardown" library="robot_mall_service_library.order.OrderLibrary" name="Logout">
<status status="PASS" endtime="20191121 17:30:57.316" starttime="20191121 17:30:57.273"></status>
</kw>
<doc>admin_order</doc>
<status status="FAIL" endtime="20191121 17:30:57.316" starttime="20191121 17:30:49.044"></status>
</suite>
<suite id="s1-s2-s2" source="/home/wangyimo/6666666/robot-mall-server/tests/admin_order/order.unauthorized.robot" name="Order.Unauthorized">
<test id="s1-s2-s2-t1" name="Get Admin Orders Without Login">
<kw name="Get Admin Orders Fail403">
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Orders">
<doc>订单列表</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.554" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.555" starttime="20191121 17:30:57.337"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.558" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.558" starttime="20191121 17:30:57.556"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.559" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.559" starttime="20191121 17:30:57.558"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.561" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.561" starttime="20191121 17:30:57.560"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.563" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.563" starttime="20191121 17:30:57.561"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.565" level="INFO">https://mall-server-d.parkone.cn/admin/orders</msg>
<status status="PASS" endtime="20191121 17:30:57.566" starttime="20191121 17:30:57.564"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.567" starttime="20191121 17:30:57.566"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.569" starttime="20191121 17:30:57.568"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.569" starttime="20191121 17:30:57.563"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.571" level="INFO">212.564</msg>
<status status="PASS" endtime="20191121 17:30:57.571" starttime="20191121 17:30:57.570"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.572" level="INFO">${elapsed} = 212</msg>
<status status="PASS" endtime="20191121 17:30:57.572" starttime="20191121 17:30:57.571"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.575" level="INFO">${elapsed} = 212</msg>
<status status="PASS" endtime="20191121 17:30:57.575" starttime="20191121 17:30:57.574"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.579" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.579" starttime="20191121 17:30:57.578"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.579" starttime="20191121 17:30:57.575"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.579" starttime="20191121 17:30:57.573"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.580" starttime="20191121 17:30:57.555"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.580" starttime="20191121 17:30:57.336"></status>
</kw>
<doc>接口名:订单列表

请求方式:Get

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.580" starttime="20191121 17:30:57.334"></status>
</test>
<test id="s1-s2-s2-t2" name="Get Admin Order Detail Without Login">
<kw name="Get Admin Order Detail Fail403">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Admin Order Detail">
<doc>订单详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.662" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.662" starttime="20191121 17:30:57.586"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.665" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.665" starttime="20191121 17:30:57.664"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.667" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.667" starttime="20191121 17:30:57.666"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.669" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.669" starttime="20191121 17:30:57.668"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.670" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.671" starttime="20191121 17:30:57.669"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.673" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:57.673" starttime="20191121 17:30:57.672"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.675" starttime="20191121 17:30:57.674"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.677" starttime="20191121 17:30:57.676"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.677" starttime="20191121 17:30:57.671"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.678" level="INFO">71.828</msg>
<status status="PASS" endtime="20191121 17:30:57.679" starttime="20191121 17:30:57.677"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.680" level="INFO">${elapsed} = 71</msg>
<status status="PASS" endtime="20191121 17:30:57.680" starttime="20191121 17:30:57.679"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.683" level="INFO">${elapsed} = 71</msg>
<status status="PASS" endtime="20191121 17:30:57.683" starttime="20191121 17:30:57.682"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.686" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.686" starttime="20191121 17:30:57.685"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.686" starttime="20191121 17:30:57.683"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.687" starttime="20191121 17:30:57.681"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.687" starttime="20191121 17:30:57.663"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.687" starttime="20191121 17:30:57.584"></status>
</kw>
<doc>接口名:订单详情

请求方式:Get

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.688" starttime="20191121 17:30:57.581"></status>
</test>
<test id="s1-s2-s2-t3" name="Put Admin Order Without Login">
<kw name="Put Admin Order Fail403">
<arguments>
<arg>order_id=${order_id}</arg>
<arg>delivery_company=123</arg>
<arg>delivery_order=123</arg>
<arg>postage=2</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Put Admin Order">
<doc>修改订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.774" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.774" starttime="20191121 17:30:57.693"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.777" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.777" starttime="20191121 17:30:57.776"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.778" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.779" starttime="20191121 17:30:57.777"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.780" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.780" starttime="20191121 17:30:57.779"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.786" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.787" starttime="20191121 17:30:57.781"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.789" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:57.790" starttime="20191121 17:30:57.788"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.791" starttime="20191121 17:30:57.790"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.793" starttime="20191121 17:30:57.792"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.793" starttime="20191121 17:30:57.787"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.794" level="INFO">77.562</msg>
<status status="PASS" endtime="20191121 17:30:57.795" starttime="20191121 17:30:57.794"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.796" level="INFO">${elapsed} = 77</msg>
<status status="PASS" endtime="20191121 17:30:57.796" starttime="20191121 17:30:57.795"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.799" level="INFO">${elapsed} = 77</msg>
<status status="PASS" endtime="20191121 17:30:57.799" starttime="20191121 17:30:57.798"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.802" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.802" starttime="20191121 17:30:57.801"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.802" starttime="20191121 17:30:57.799"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.802" starttime="20191121 17:30:57.797"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.803" starttime="20191121 17:30:57.774"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.803" starttime="20191121 17:30:57.691"></status>
</kw>
<doc>接口名:修改订单

请求方式:Put

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.803" starttime="20191121 17:30:57.689"></status>
</test>
<test id="s1-s2-s2-t4" name="Get Admin Orders Export Without Login">
<kw name="Get Admin Orders Export Fail403">
<kw library="robot_mall_service_library.order.OrderLibrary" name="Get Orders Export">
<doc>订单导出</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.876" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.876" starttime="20191121 17:30:57.807"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.877" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.877" starttime="20191121 17:30:57.877"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.877" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.877" starttime="20191121 17:30:57.877"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.878" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.878" starttime="20191121 17:30:57.877"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.878" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.878" starttime="20191121 17:30:57.878"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.878" level="INFO">https://mall-server-d.parkone.cn/admin/orders</msg>
<status status="PASS" endtime="20191121 17:30:57.879" starttime="20191121 17:30:57.878"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.879" starttime="20191121 17:30:57.879"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.879" starttime="20191121 17:30:57.879"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.879" starttime="20191121 17:30:57.878"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.880" level="INFO">67.261</msg>
<status status="PASS" endtime="20191121 17:30:57.880" starttime="20191121 17:30:57.879"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.880" level="INFO">${elapsed} = 67</msg>
<status status="PASS" endtime="20191121 17:30:57.880" starttime="20191121 17:30:57.880"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.881" level="INFO">${elapsed} = 67</msg>
<status status="PASS" endtime="20191121 17:30:57.881" starttime="20191121 17:30:57.880"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.881" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.881" starttime="20191121 17:30:57.881"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.881" starttime="20191121 17:30:57.881"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.882" starttime="20191121 17:30:57.880"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.882" starttime="20191121 17:30:57.876"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.882" starttime="20191121 17:30:57.806"></status>
</kw>
<doc>接口名:订单导出

请求方式:Get

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.882" starttime="20191121 17:30:57.804"></status>
</test>
<test id="s1-s2-s2-t5" name="Patch Admin Order Delivery Without Login">
<kw name="Patch Admin Order Delivery Fail403">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_service_library.order.OrderLibrary" name="Patch Admin Order Delivery">
<doc>确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:57.963" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.963" starttime="20191121 17:30:57.883"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:57.966" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.966" starttime="20191121 17:30:57.965"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.968" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.968" starttime="20191121 17:30:57.967"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:57.970" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:57.970" starttime="20191121 17:30:57.968"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.971" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:57.971" starttime="20191121 17:30:57.970"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.974" level="INFO">https://mall-server-d.parkone.cn/admin/orders/55a264a60c4111eabd520242ac15000a/delivery</msg>
<status status="PASS" endtime="20191121 17:30:57.974" starttime="20191121 17:30:57.973"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:57.976" starttime="20191121 17:30:57.974"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:57.977" starttime="20191121 17:30:57.976"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.978" starttime="20191121 17:30:57.972"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:57.979" level="INFO">78.624</msg>
<status status="PASS" endtime="20191121 17:30:57.979" starttime="20191121 17:30:57.978"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.981" level="INFO">${elapsed} = 78</msg>
<status status="PASS" endtime="20191121 17:30:57.981" starttime="20191121 17:30:57.980"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:57.984" level="INFO">${elapsed} = 78</msg>
<status status="PASS" endtime="20191121 17:30:57.984" starttime="20191121 17:30:57.983"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:57.987" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:57.987" starttime="20191121 17:30:57.986"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.987" starttime="20191121 17:30:57.984"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.987" starttime="20191121 17:30:57.982"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.988" starttime="20191121 17:30:57.964"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:57.988" starttime="20191121 17:30:57.883"></status>
</kw>
<doc>接口名:确认收货

请求方式:Patch

预期结果:未登录,输入正确参数,http响应码返回 403。</doc>
<tags>
<tag>model:admin_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:57.988" starttime="20191121 17:30:57.882"></status>
</test>
<doc>admin_order</doc>
<status status="PASS" endtime="20191121 17:30:57.990" starttime="20191121 17:30:57.321"></status>
</suite>
<status status="FAIL" endtime="20191121 17:30:57.994" starttime="20191121 17:30:49.042"></status>
</suite>
<suite id="s1-s3" source="/home/wangyimo/6666666/robot-mall-server/tests/commodity" name="Commodity">
<suite id="s1-s3-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/commodity/commodity.robot" name="Commodity">
<kw type="setup" library="commodity" name="Login By Openid">
<arguments>
<arg>${openid}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.760" level="INFO">oaGjU5DBUe1U2suItQ8QPXG2PoSU
200
5675e77ecd337a813edde0afeeb207a9
{'expires_in': 86400, 'access_token': 'bed04a93055a764e9088c54bcb8cf932', 'userid': 10001075, 'refresh_token': '09a691b0ac4558086df27f526251eae6'}
200
bed04a93055a764e9088c54bcb8cf932</msg>
<status status="PASS" endtime="20191121 17:30:58.760" starttime="20191121 17:30:58.013"></status>
</kw>
<test id="s1-s3-s1-t1" name="Get User Commodity By commodity_id">
<kw name="Get User Commodity By commodity_id Success">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="commodity" name="Get User Commodity By Commodity Id">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:58.931" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:58.931" starttime="20191121 17:30:58.766"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.933" level="FAIL">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</msg>
<status status="FAIL" endtime="20191121 17:30:58.933" starttime="20191121 17:30:58.932"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:58.934" starttime="20191121 17:30:58.931"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>commodity/get_commodity_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:58.936" level="INFO">${bug_level} = BugLevel:Critical</msg>
<status status="PASS" endtime="20191121 17:30:58.937" starttime="20191121 17:30:58.935"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.938" level="INFO">Set tag 'BugLevel:Critical'.</msg>
<status status="PASS" endtime="20191121 17:30:58.938" starttime="20191121 17:30:58.937"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:58.940" level="INFO">${status_tag} = ShouldBe:200But:404</msg>
<status status="PASS" endtime="20191121 17:30:58.940" starttime="20191121 17:30:58.939"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.941" level="INFO">Set tag 'ShouldBe:200But:404'.</msg>
<status status="PASS" endtime="20191121 17:30:58.942" starttime="20191121 17:30:58.940"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.944" level="INFO">https://mall-server-d.parkone.cn/users/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:58.944" starttime="20191121 17:30:58.943"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:58.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:58.947" level="FAIL">404 != 200</msg>
<status status="FAIL" endtime="20191121 17:30:58.947" starttime="20191121 17:30:58.945"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:58.950" level="WARN">Tests.Commodity.Commodity模块中的接口：rs/commodities/97e789540c4111eabc550242ac15000a 错误。test_case：Get User Commodity By commodity_id:应返回200，但返回404。</msg>
<status status="PASS" endtime="20191121 17:30:58.951" starttime="20191121 17:30:58.949"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:58.951" starttime="20191121 17:30:58.947"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:58.951" starttime="20191121 17:30:58.942"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:58.952" starttime="20191121 17:30:58.934"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:58.952" starttime="20191121 17:30:58.764"></status>
</kw>
<doc>接口名:获取商品详情

请求方式:Get

预期结果:输入正确参数,http响应码返回 200

url:GET /users/commodities/:commodity_id</doc>
<tags>
<tag>BugLevel:Critical</tag>
<tag>model:wxmp_commodity</tag>
<tag>Respcode:200</tag>
<tag>ShouldBe:200But:404</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:58.953" starttime="20191121 17:30:58.761">Several failures occurred:

1) Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)

2) 404 != 200</status>
</test>
<test id="s1-s3-s1-t2" name="Get User Commodity By commodity_id Fail 404">
<kw name="Get User Commodity By commodity_id Fail 404">
<arguments>
<arg>commodity_id=1234567489</arg>
</arguments>
<kw library="commodity" name="Get User Commodity By Commodity Id">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:58.999" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:58.999" starttime="20191121 17:30:58.958"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.000" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.000" starttime="20191121 17:30:59.000"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.001" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.001" starttime="20191121 17:30:59.000"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.001" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.001" starttime="20191121 17:30:59.001"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.002" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.002" starttime="20191121 17:30:59.001"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.002" level="INFO">https://mall-server-d.parkone.cn/users/commodities/1234567489</msg>
<status status="PASS" endtime="20191121 17:30:59.002" starttime="20191121 17:30:59.002"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.003" starttime="20191121 17:30:59.002"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.003" starttime="20191121 17:30:59.003"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.003" starttime="20191121 17:30:59.002"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.004" level="INFO">36.694</msg>
<status status="PASS" endtime="20191121 17:30:59.004" starttime="20191121 17:30:59.003"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.004" level="INFO">${elapsed} = 36</msg>
<status status="PASS" endtime="20191121 17:30:59.004" starttime="20191121 17:30:59.004"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.005" level="INFO">${elapsed} = 36</msg>
<status status="PASS" endtime="20191121 17:30:59.005" starttime="20191121 17:30:59.005"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:59.006" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:59.005"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:59.005"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:59.004"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:58.999"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:58.957"></status>
</kw>
<doc>接口名:获取商品详情404

请求方式:Get

预期结果:输入错误url，http响应吗返回404

url:GET /users/commodities/:commodity_id</doc>
<tags>
<tag>model:wxmp_commodity</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:59.006" starttime="20191121 17:30:58.954"></status>
</test>
<test id="s1-s3-s1-t3" name="Get User Commodity By commodity_id Fail 422">
<kw name="Get User Commodity By commodity_id Fail 422">
<arguments>
<arg>commodity_id=e728104c05c011eaacef0242ac15000a</arg>
</arguments>
<kw library="commodity" name="Get User Commodity By Commodity Id">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.054" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.054" starttime="20191121 17:30:59.008"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.057" level="INFO">{'errors': [{'code': 'unshelve', 'resource': 'commodity'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:30:59.057" starttime="20191121 17:30:59.056"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.057" starttime="20191121 17:30:59.055"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.060" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.060" starttime="20191121 17:30:59.059"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.061" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.062" starttime="20191121 17:30:59.060"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.063" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.063" starttime="20191121 17:30:59.062"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.065" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.065" starttime="20191121 17:30:59.064"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.067" level="INFO">https://mall-server-d.parkone.cn/users/commodities/e728104c05c011eaacef0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:59.068" starttime="20191121 17:30:59.067"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.070" starttime="20191121 17:30:59.068"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.072" starttime="20191121 17:30:59.071"></status>
</kw>
<msg timestamp="20191121 17:30:59.072" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.072" starttime="20191121 17:30:59.065"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.075" starttime="20191121 17:30:59.074"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.082" starttime="20191121 17:30:59.076"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.082" starttime="20191121 17:30:59.076"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.084" starttime="20191121 17:30:59.083"></status>
</kw>
<msg timestamp="20191121 17:30:59.084" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.084" starttime="20191121 17:30:59.073"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.086" starttime="20191121 17:30:59.085"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.086" starttime="20191121 17:30:59.084"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.087" level="INFO">44.953</msg>
<status status="PASS" endtime="20191121 17:30:59.087" starttime="20191121 17:30:59.087"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.088" level="INFO">${elapsed} = 44</msg>
<status status="PASS" endtime="20191121 17:30:59.088" starttime="20191121 17:30:59.088"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.089" level="INFO">${elapsed} = 44</msg>
<status status="PASS" endtime="20191121 17:30:59.090" starttime="20191121 17:30:59.089"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:59.091" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:59.091" starttime="20191121 17:30:59.091"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.091" starttime="20191121 17:30:59.090"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.091" starttime="20191121 17:30:59.088"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.092" starttime="20191121 17:30:59.057"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.092" starttime="20191121 17:30:59.007"></status>
</kw>
<doc>接口名:获取商品详情

请求方式:Get

预期结果:输入错误参数,http响应码返回 422 

url:GET /users/commodities/:commodity_id</doc>
<tags>
<tag>model:wxmp_commodity</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:59.092" starttime="20191121 17:30:59.006"></status>
</test>
<doc>wxmp_commodity</doc>
<status status="FAIL" endtime="20191121 17:30:59.093" starttime="20191121 17:30:58.002"></status>
</suite>
<suite id="s1-s3-s2" source="/home/wangyimo/6666666/robot-mall-server/tests/commodity/commodity.unthorized.robot" name="Commodity.Unthorized">
<test id="s1-s3-s2-t1" name="Get User Commodity By commodity_id Fail 403">
<kw name="Get User Commodity By commodity_id Success Fail 403">
<arguments>
<arg>commodity_id=${commodity_id}</arg>
</arguments>
<kw library="commodity" name="Get User Commodity By Commodity Id">
<doc>获取商品详情</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.267" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.267" starttime="20191121 17:30:59.102"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.269" level="FAIL">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</msg>
<status status="FAIL" endtime="20191121 17:30:59.270" starttime="20191121 17:30:59.268"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.270" starttime="20191121 17:30:59.268"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.273" level="INFO">${bug_level} = BugLevel:Minor</msg>
<status status="PASS" endtime="20191121 17:30:59.273" starttime="20191121 17:30:59.271"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.274" level="INFO">Set tag 'BugLevel:Minor'.</msg>
<status status="PASS" endtime="20191121 17:30:59.274" starttime="20191121 17:30:59.273"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.276" level="INFO">${status_tag} = ShouldBe:403But:404</msg>
<status status="PASS" endtime="20191121 17:30:59.276" starttime="20191121 17:30:59.275"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.277" level="INFO">Set tag 'ShouldBe:403But:404'.</msg>
<status status="PASS" endtime="20191121 17:30:59.278" starttime="20191121 17:30:59.276"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.280" level="INFO">https://mall-server-d.parkone.cn/users/commodities/97e789540c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:30:59.280" starttime="20191121 17:30:59.279"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:59.283" level="FAIL">404 != 403</msg>
<status status="FAIL" endtime="20191121 17:30:59.283" starttime="20191121 17:30:59.281"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:59.287" level="WARN">Tests.Commodity.Commodity.Unthorized模块中的接口：rs/commodities/97e789540c4111eabc550242ac15000a 错误。test_case：Get User Commodity By commodity_id Fail 403:应返回403，但返回404。</msg>
<status status="PASS" endtime="20191121 17:30:59.288" starttime="20191121 17:30:59.286"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.288" starttime="20191121 17:30:59.284"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.288" starttime="20191121 17:30:59.278"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.288" starttime="20191121 17:30:59.270"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.289" starttime="20191121 17:30:59.101"></status>
</kw>
<doc>接口名:获取商品详情403

请求方式:Get

预期结果:输入正确参数,http响应码返回 403(授权无效或已过期)

url:GET /users/commodities/:commodity_id</doc>
<tags>
<tag>BugLevel:Minor</tag>
<tag>model:wxmp_commodity</tag>
<tag>Respcode:403</tag>
<tag>ShouldBe:403But:404</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:59.290" starttime="20191121 17:30:59.100">Several failures occurred:

1) Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)

2) 404 != 403</status>
</test>
<doc>wxmp_commodity</doc>
<status status="FAIL" endtime="20191121 17:30:59.291" starttime="20191121 17:30:59.094"></status>
</suite>
<status status="FAIL" endtime="20191121 17:30:59.293" starttime="20191121 17:30:57.999"></status>
</suite>
<suite id="s1-s4" source="/home/wangyimo/6666666/robot-mall-server/tests/login" name="Login">
<suite id="s1-s4-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/login/login.robot" name="Login">
<test id="s1-s4-s1-t1" name="Login Test">
<kw name="Login Success">
<arguments>
<arg>admin</arg>
<arg>admin123</arg>
</arguments>
<kw library="robot_mall_service_library.login.LoginLibrary" name="Login">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.568" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.568" starttime="20191121 17:30:59.313"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.571" level="INFO">${bug_level} = BugLevel:Major</msg>
<status status="PASS" endtime="20191121 17:30:59.572" starttime="20191121 17:30:59.570"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.573" level="INFO">Set tag 'BugLevel:Major'.</msg>
<status status="PASS" endtime="20191121 17:30:59.573" starttime="20191121 17:30:59.572"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.575" level="INFO">${status_tag} = ShouldBe:204But:200</msg>
<status status="PASS" endtime="20191121 17:30:59.575" starttime="20191121 17:30:59.574"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.576" level="INFO">Set tag 'ShouldBe:204But:200'.</msg>
<status status="PASS" endtime="20191121 17:30:59.576" starttime="20191121 17:30:59.575"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.579" level="INFO">https://operation-server-d.parkone.cn/login</msg>
<status status="PASS" endtime="20191121 17:30:59.579" starttime="20191121 17:30:59.578"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191121 17:30:59.581" level="FAIL">200 != 204</msg>
<status status="FAIL" endtime="20191121 17:30:59.581" starttime="20191121 17:30:59.580"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<msg timestamp="20191121 17:30:59.585" level="WARN">Tests.Login.Login模块中的接口：n/login 错误。test_case：Login Test:应返回204，但返回200。</msg>
<status status="PASS" endtime="20191121 17:30:59.586" starttime="20191121 17:30:59.583"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.586" starttime="20191121 17:30:59.582"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.586" starttime="20191121 17:30:59.577"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.587" starttime="20191121 17:30:59.569"></status>
</kw>
<status status="FAIL" endtime="20191121 17:30:59.587" starttime="20191121 17:30:59.313"></status>
</kw>
<doc>接口名：帐号登录
请求方式:Post
预期结果：登录成功。</doc>
<tags>
<tag>BugLevel:Major</tag>
<tag>login</tag>
<tag>RespCode:204</tag>
<tag>ShouldBe:204But:200</tag>
</tags>
<status critical="yes" status="FAIL" endtime="20191121 17:30:59.588" starttime="20191121 17:30:59.312">200 != 204</status>
</test>
<test id="s1-s4-s1-t2" name="Login Failures">
<kw name="Login Failure">
<arguments>
<arg>admin</arg>
<arg>admin</arg>
</arguments>
<kw library="robot_mall_service_library.login.LoginLibrary" name="Login">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.631" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.631" starttime="20191121 17:30:59.593"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.631" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.632" starttime="20191121 17:30:59.631"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.632" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.632" starttime="20191121 17:30:59.632"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.632" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.632" starttime="20191121 17:30:59.632"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.633" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.633" starttime="20191121 17:30:59.632"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.633" level="INFO">https://operation-server-d.parkone.cn/login</msg>
<status status="PASS" endtime="20191121 17:30:59.634" starttime="20191121 17:30:59.633"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.634" starttime="20191121 17:30:59.634"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.634" starttime="20191121 17:30:59.634"></status>
</kw>
<msg timestamp="20191121 17:30:59.635" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.635" starttime="20191121 17:30:59.633"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.635" starttime="20191121 17:30:59.635"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.637" starttime="20191121 17:30:59.636"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.637" starttime="20191121 17:30:59.635"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.638" starttime="20191121 17:30:59.637"></status>
</kw>
<msg timestamp="20191121 17:30:59.638" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.638" starttime="20191121 17:30:59.635"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.639" starttime="20191121 17:30:59.638"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.639" starttime="20191121 17:30:59.638"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.639" level="INFO">33.185</msg>
<status status="PASS" endtime="20191121 17:30:59.639" starttime="20191121 17:30:59.639"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.640" level="INFO">${elapsed} = 33</msg>
<status status="PASS" endtime="20191121 17:30:59.640" starttime="20191121 17:30:59.639"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.640" level="INFO">${elapsed} = 33</msg>
<status status="PASS" endtime="20191121 17:30:59.640" starttime="20191121 17:30:59.640"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:59.641" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:59.641" starttime="20191121 17:30:59.641"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.641" starttime="20191121 17:30:59.640"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.641" starttime="20191121 17:30:59.640"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.641" starttime="20191121 17:30:59.631"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.641" starttime="20191121 17:30:59.592"></status>
</kw>
<kw name="Login Failure">
<arguments>
<arg>ad</arg>
<arg>admin123</arg>
</arguments>
<kw library="robot_mall_service_library.login.LoginLibrary" name="Login">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.675" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.675" starttime="20191121 17:30:59.642"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:30:59.677" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.677" starttime="20191121 17:30:59.676"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.677" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.677" starttime="20191121 17:30:59.677"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:30:59.678" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:30:59.678" starttime="20191121 17:30:59.677"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.679" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:30:59.679" starttime="20191121 17:30:59.678"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.680" level="INFO">https://operation-server-d.parkone.cn/login</msg>
<status status="PASS" endtime="20191121 17:30:59.680" starttime="20191121 17:30:59.679"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.681" starttime="20191121 17:30:59.680"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.681" starttime="20191121 17:30:59.681"></status>
</kw>
<msg timestamp="20191121 17:30:59.682" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.682" starttime="20191121 17:30:59.679"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.683" starttime="20191121 17:30:59.682"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.686" starttime="20191121 17:30:59.683"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.686" starttime="20191121 17:30:59.683"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.686" starttime="20191121 17:30:59.686"></status>
</kw>
<msg timestamp="20191121 17:30:59.687" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:30:59.687" starttime="20191121 17:30:59.682"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.688" starttime="20191121 17:30:59.687"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.688" starttime="20191121 17:30:59.687"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.689" level="INFO">31.973</msg>
<status status="PASS" endtime="20191121 17:30:59.689" starttime="20191121 17:30:59.688"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.690" level="INFO">${elapsed} = 31</msg>
<status status="PASS" endtime="20191121 17:30:59.690" starttime="20191121 17:30:59.689"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:30:59.691" level="INFO">${elapsed} = 31</msg>
<status status="PASS" endtime="20191121 17:30:59.691" starttime="20191121 17:30:59.690"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:30:59.692" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:30:59.692" starttime="20191121 17:30:59.692"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.692" starttime="20191121 17:30:59.691"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.692" starttime="20191121 17:30:59.690"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.692" starttime="20191121 17:30:59.676"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.693" starttime="20191121 17:30:59.642"></status>
</kw>
<doc>接口名：帐号登录
请求方式:Post
预期结果：登录失败。</doc>
<tags>
<tag>login</tag>
<tag>RespCode:422</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:59.693" starttime="20191121 17:30:59.589"></status>
</test>
<test id="s1-s4-s1-t3" name="Logout Test">
<kw library="robot_mall_service_library.login.LoginLibrary" name="Logout">
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:30:59.736" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.736" starttime="20191121 17:30:59.694"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.739" level="INFO">https://operation-server-d.parkone.cn/logout</msg>
<status status="PASS" endtime="20191121 17:30:59.739" starttime="20191121 17:30:59.738"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:30:59.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:30:59.741" starttime="20191121 17:30:59.740"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:30:59.743" starttime="20191121 17:30:59.742"></status>
</kw>
<status status="PASS" endtime="20191121 17:30:59.743" starttime="20191121 17:30:59.737"></status>
</kw>
<doc>接口名：帐号注销
请求方式:Post
预期结果：注销成功。</doc>
<tags>
<tag>login</tag>
<tag>RespCode:204</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:30:59.744" starttime="20191121 17:30:59.693"></status>
</test>
<doc>用户登录</doc>
<status status="FAIL" endtime="20191121 17:30:59.745" starttime="20191121 17:30:59.301"></status>
</suite>
<status status="FAIL" endtime="20191121 17:30:59.748" starttime="20191121 17:30:59.297"></status>
</suite>
<suite id="s1-s5" source="/home/wangyimo/6666666/robot-mall-server/tests/user_order" name="User Order">
<suite id="s1-s5-s1" source="/home/wangyimo/6666666/robot-mall-server/tests/user_order/order.robot" name="Order">
<kw type="setup" library="commodity" name="Login By Openid">
<arguments>
<arg>${open_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:00.368" level="INFO">oaGjU5DBUe1U2suItQ8QPXG2PoSU
200
798ef46966275e69103891c7de02c644
{'expires_in': 86400, 'access_token': 'c1c609a6004e1c0abff4978ca77ac557', 'userid': 10001075, 'refresh_token': '3283d43c48767ede3023123cf1d27063'}
200
c1c609a6004e1c0abff4978ca77ac557</msg>
<status status="PASS" endtime="20191121 17:31:00.369" starttime="20191121 17:30:59.781"></status>
</kw>
<test id="s1-s5-s1-t1" name="Post User Order">
<kw library="utils_library.BaseUtilsLibrary" name="Generate Num">
<doc>生成随机手机号
:param length: 长度
:type length: int
:param prefix: 前缀
:type prefix: str
:param suffix: 后缀
:type  suffix: str
:return: 随机手机号
:rtype: str</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20191121 17:31:00.374" level="INFO">${number} = 8628</msg>
<status status="PASS" endtime="20191121 17:31:00.374" starttime="20191121 17:31:00.373"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Faker Name">
<doc>生成虚假测试名字
:return: 虚假测试名字</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20191121 17:31:00.409" level="INFO">${name} = 陈芳</msg>
<status status="PASS" endtime="20191121 17:31:00.409" starttime="20191121 17:31:00.375"></status>
</kw>
<kw library="server" name="Login">
<arguments>
<arg>admin</arg>
<arg>admin123</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:00.655" starttime="20191121 17:31:00.409"></status>
</kw>
<kw library="server" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<assign>
<var>${arr1}</var>
</assign>
<msg timestamp="20191121 17:31:00.932" level="INFO">${arr1} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:00.932" starttime="20191121 17:31:00.655"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${arr1.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:00.935" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328533.739175, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}]</msg>
<status status="PASS" endtime="20191121 17:31:00.937" starttime="20191121 17:31:00.932"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]["commodity_id"]}</arg>
</arguments>
<assign>
<var>${commodity_id}</var>
</assign>
<msg timestamp="20191121 17:31:00.948" level="INFO">${commodity_id} = 696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:00.948" starttime="20191121 17:31:00.937"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${commodity_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:00.949" level="INFO">696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:00.949" starttime="20191121 17:31:00.948"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]['specifications'][0]["specification_id"]}</arg>
</arguments>
<assign>
<var>${specification_id}</var>
</assign>
<msg timestamp="20191121 17:31:00.953" level="INFO">${specification_id} = 6abf50280c0b11eaae930242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:00.953" starttime="20191121 17:31:00.950"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>amount=5</arg>
<arg>specification_id=${specification_id}</arg>
<arg>contact=Robot${name}</arg>
<arg>mobile=13000000000</arg>
<arg>delivery_region=沈阳市浑南区${number}</arg>
<arg>delivery_address=远航西路IT国际201${number}</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:00.954" level="INFO">${essential_params} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'amount': '5', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'contact': 'Robot陈芳', 'mobile': '13000000000', 'delivery_region': '沈阳市浑南区862...</msg>
<status status="PASS" endtime="20191121 17:31:00.954" starttime="20191121 17:31:00.953"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:00.954" level="INFO">${unessential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:31:00.954" starttime="20191121 17:31:00.954"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:00.955" level="INFO">${results} = [{'contact': 'Robot陈芳', 'delivery_region': '沈阳市浑南区8628', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'mobile': '13000000000', 'amount': '5', 'delivery_address': '远航西路IT国际2018628', 'commodi...</msg>
<status status="PASS" endtime="20191121 17:31:00.955" starttime="20191121 17:31:00.954"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'amount': '5', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'contact': 'Robot陈芳', 'mobile': '13000000000', 'delivery_region': '沈阳市浑南区862...">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.239" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.240" starttime="20191121 17:31:00.956"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.242" level="INFO">{'total_amount': 5, 'real_price': 5, 'pay_expire_time': 1574329261.083898, 'created_time': 1574328661.085694, 'discount_price': 0, 'order_id': 'a18aa18a0c4111eabc550242ac15000a'}</msg>
<status status="PASS" endtime="20191121 17:31:01.242" starttime="20191121 17:31:01.241"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.242" starttime="20191121 17:31:01.240"></status>
</kw>
<kw library="resources" name="Expect Status is 201">
<doc>检测响应状态是否为201 Created，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>user_order/post_user_order_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.243" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.243" starttime="20191121 17:31:01.243"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.243" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.243" starttime="20191121 17:31:01.243"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.243" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.243" starttime="20191121 17:31:01.243"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.244" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.244" starttime="20191121 17:31:01.244"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.244" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.244" starttime="20191121 17:31:01.244"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.245" starttime="20191121 17:31:01.245"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.245" starttime="20191121 17:31:01.245"></status>
</kw>
<msg timestamp="20191121 17:31:01.245" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.245" starttime="20191121 17:31:01.244"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.246" starttime="20191121 17:31:01.246"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.247" starttime="20191121 17:31:01.246"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.247" starttime="20191121 17:31:01.246"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.247" starttime="20191121 17:31:01.247"></status>
</kw>
<msg timestamp="20191121 17:31:01.247" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.247" starttime="20191121 17:31:01.245"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.248" starttime="20191121 17:31:01.248"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.248" starttime="20191121 17:31:01.247"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.248" level="INFO">281.688</msg>
<status status="PASS" endtime="20191121 17:31:01.248" starttime="20191121 17:31:01.248"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.248" level="INFO">${elapsed} = 281</msg>
<status status="PASS" endtime="20191121 17:31:01.249" starttime="20191121 17:31:01.248"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.249" level="INFO">${elapsed} = 281</msg>
<status status="PASS" endtime="20191121 17:31:01.249" starttime="20191121 17:31:01.249"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.250" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.250" starttime="20191121 17:31:01.250"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.250" starttime="20191121 17:31:01.249"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.250" starttime="20191121 17:31:01.249"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.250" starttime="20191121 17:31:01.242"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()["order_id"]}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<msg timestamp="20191121 17:31:01.250" level="INFO">${order_id} = a18aa18a0c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:01.250" starttime="20191121 17:31:01.250"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.251" level="INFO">${order_id} = a18aa18a0c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:01.250"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.955"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.955"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.955"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.955"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.954"></status>
</kw>
<doc>接口名:用户创建订单

请求方式:Post

预期结果:输入正确参数,订单创建成功,http响应码返回 201

url:POST /user/orders</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:201</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:01.251" starttime="20191121 17:31:00.370"></status>
</test>
<test id="s1-s5-s1-t2" name="Post User Order Fail 422">
<kw library="utils_library.BaseUtilsLibrary" name="Generate Num">
<doc>生成随机手机号
:param length: 长度
:type length: int
:param prefix: 前缀
:type prefix: str
:param suffix: 后缀
:type  suffix: str
:return: 随机手机号
:rtype: str</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20191121 17:31:01.252" level="INFO">${number} = 1746</msg>
<status status="PASS" endtime="20191121 17:31:01.252" starttime="20191121 17:31:01.252"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Faker Name">
<doc>生成虚假测试名字
:return: 虚假测试名字</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20191121 17:31:01.262" level="INFO">${name} = 李秀荣</msg>
<status status="PASS" endtime="20191121 17:31:01.262" starttime="20191121 17:31:01.252"></status>
</kw>
<kw library="server" name="Login">
<arguments>
<arg>admin</arg>
<arg>admin123</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.355" starttime="20191121 17:31:01.262"></status>
</kw>
<kw library="server" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<assign>
<var>${arr1}</var>
</assign>
<msg timestamp="20191121 17:31:01.513" level="INFO">${arr1} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.513" starttime="20191121 17:31:01.356"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${arr1.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.517" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328661.090192, 'stock': 995, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}]</msg>
<status status="PASS" endtime="20191121 17:31:01.518" starttime="20191121 17:31:01.514"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]["commodity_id"]}</arg>
</arguments>
<assign>
<var>${commodity_id}</var>
</assign>
<msg timestamp="20191121 17:31:01.529" level="INFO">${commodity_id} = 696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:01.529" starttime="20191121 17:31:01.519"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${commodity_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.530" level="INFO">696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:01.531" starttime="20191121 17:31:01.530"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]['specifications'][0]["specification_id"]}</arg>
</arguments>
<assign>
<var>${specification_id}</var>
</assign>
<msg timestamp="20191121 17:31:01.542" level="INFO">${specification_id} = 6abf50280c0b11eaae930242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:01.542" starttime="20191121 17:31:01.531"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:01.543" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:31:01.543" starttime="20191121 17:31:01.542"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>amount=5</arg>
<arg>specification_id=${specification_id}</arg>
<arg>contact=Robot${name}</arg>
<arg>mobile=13000000000</arg>
<arg>delivery_region=沈阳市浑南区${number}</arg>
<arg>delivery_address=远航西路IT国际201${number}</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:01.545" level="INFO">${unessential_params} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'amount': '5', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'contact': 'Robot李秀荣', 'mobile': '13000000000', 'delivery_region': '沈阳市浑南区17...</msg>
<status status="PASS" endtime="20191121 17:31:01.545" starttime="20191121 17:31:01.544"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Fail 422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:01.547" level="INFO">[{'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}, {'amount': '5'}, {'specification_id': '6abf50280c0b11eaae930242ac15000a'}, {'contact': 'Robot李秀荣'}, {'mobile': '13000000000'}, {'delivery_region': '沈阳市浑南区1746'}, {'delivery_address': '远航西路IT国际2011746'}]</msg>
<msg timestamp="20191121 17:31:01.548" level="INFO">${results} = [{'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}, {'amount': '5'}, {'specification_id': '6abf50280c0b11eaae930242ac15000a'}, {'contact': 'Robot李秀荣'}, {'mobile': '13000000000'}, {'delivery_region'...</msg>
<status status="PASS" endtime="20191121 17:31:01.548" starttime="20191121 17:31:01.547"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.578" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.578" starttime="20191121 17:31:01.550"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.579" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'mobile'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.579" starttime="20191121 17:31:01.579"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.579" starttime="20191121 17:31:01.578"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.581" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.581" starttime="20191121 17:31:01.580"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.581" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.581" starttime="20191121 17:31:01.581"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.582" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.582" starttime="20191121 17:31:01.581"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.582" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.583" starttime="20191121 17:31:01.582"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.583" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.583" starttime="20191121 17:31:01.583"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.584" starttime="20191121 17:31:01.584"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.585" starttime="20191121 17:31:01.584"></status>
</kw>
<msg timestamp="20191121 17:31:01.585" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.585" starttime="20191121 17:31:01.583"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.586" starttime="20191121 17:31:01.585"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.588" starttime="20191121 17:31:01.586"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.588" starttime="20191121 17:31:01.586"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.589" starttime="20191121 17:31:01.588"></status>
</kw>
<msg timestamp="20191121 17:31:01.589" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.589" starttime="20191121 17:31:01.585"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.590" starttime="20191121 17:31:01.589"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.590" starttime="20191121 17:31:01.589"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.590" level="INFO">25.852</msg>
<status status="PASS" endtime="20191121 17:31:01.590" starttime="20191121 17:31:01.590"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.591" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:01.591" starttime="20191121 17:31:01.591"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.592" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:01.592" starttime="20191121 17:31:01.592"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.593" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.593" starttime="20191121 17:31:01.593"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.593" starttime="20191121 17:31:01.592"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.593" starttime="20191121 17:31:01.591"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.593" starttime="20191121 17:31:01.580"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.593" starttime="20191121 17:31:01.549"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.594" starttime="20191121 17:31:01.548"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.594" starttime="20191121 17:31:01.548"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'amount': '5'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.623" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.623" starttime="20191121 17:31:01.595"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.626" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'mobile'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.626" starttime="20191121 17:31:01.625"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.626" starttime="20191121 17:31:01.624"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.630" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.630" starttime="20191121 17:31:01.628"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.632" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.632" starttime="20191121 17:31:01.631"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.633" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.634" starttime="20191121 17:31:01.632"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.635" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.635" starttime="20191121 17:31:01.634"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.638" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.638" starttime="20191121 17:31:01.637"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.640" starttime="20191121 17:31:01.639"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.641" starttime="20191121 17:31:01.640"></status>
</kw>
<msg timestamp="20191121 17:31:01.642" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.642" starttime="20191121 17:31:01.636"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.644" starttime="20191121 17:31:01.643"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.648" starttime="20191121 17:31:01.645"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.648" starttime="20191121 17:31:01.644"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.649" starttime="20191121 17:31:01.648"></status>
</kw>
<msg timestamp="20191121 17:31:01.649" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.649" starttime="20191121 17:31:01.642"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.651" starttime="20191121 17:31:01.650"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.651" starttime="20191121 17:31:01.649"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.652" level="INFO">25.649</msg>
<status status="PASS" endtime="20191121 17:31:01.652" starttime="20191121 17:31:01.651"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.652" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:01.652" starttime="20191121 17:31:01.652"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.654" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:01.654" starttime="20191121 17:31:01.653"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.655" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.655" starttime="20191121 17:31:01.654"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.655" starttime="20191121 17:31:01.654"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.655" starttime="20191121 17:31:01.653"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.655" starttime="20191121 17:31:01.627"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.655" starttime="20191121 17:31:01.594"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.656" starttime="20191121 17:31:01.594"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.656" starttime="20191121 17:31:01.594"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'specification_id': '6abf50280c0b11eaae930242ac15000a'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.683" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.683" starttime="20191121 17:31:01.657"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.684" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'mobile'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.684" starttime="20191121 17:31:01.684"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.684" starttime="20191121 17:31:01.683"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.685" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.685" starttime="20191121 17:31:01.685"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.686" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.686" starttime="20191121 17:31:01.685"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.686" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.686" starttime="20191121 17:31:01.686"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.687" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.687" starttime="20191121 17:31:01.686"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.687" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.688" starttime="20191121 17:31:01.687"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.688" starttime="20191121 17:31:01.688"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.689" starttime="20191121 17:31:01.688"></status>
</kw>
<msg timestamp="20191121 17:31:01.689" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.689" starttime="20191121 17:31:01.687"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.689" starttime="20191121 17:31:01.689"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.691" starttime="20191121 17:31:01.690"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.691" starttime="20191121 17:31:01.690"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.692" starttime="20191121 17:31:01.692"></status>
</kw>
<msg timestamp="20191121 17:31:01.692" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.692" starttime="20191121 17:31:01.689"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.693" starttime="20191121 17:31:01.693"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.693" starttime="20191121 17:31:01.692"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.693" level="INFO">24.623</msg>
<status status="PASS" endtime="20191121 17:31:01.693" starttime="20191121 17:31:01.693"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.694" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:01.694" starttime="20191121 17:31:01.694"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.695" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:01.695" starttime="20191121 17:31:01.694"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.696" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.695"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.695"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.694"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.684"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.656"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.656"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.696" starttime="20191121 17:31:01.656"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'contact': 'Robot李秀荣'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.727" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.727" starttime="20191121 17:31:01.697"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.728" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'mobile'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.728" starttime="20191121 17:31:01.727"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.728" starttime="20191121 17:31:01.727"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.729" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.729" starttime="20191121 17:31:01.728"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.730" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.730" starttime="20191121 17:31:01.729"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.730" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.730" starttime="20191121 17:31:01.730"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.731" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.731" starttime="20191121 17:31:01.731"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.732" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.732" starttime="20191121 17:31:01.732"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.733" starttime="20191121 17:31:01.732"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.733" starttime="20191121 17:31:01.733"></status>
</kw>
<msg timestamp="20191121 17:31:01.734" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.734" starttime="20191121 17:31:01.731"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.735" starttime="20191121 17:31:01.734"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.737" starttime="20191121 17:31:01.735"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.737" starttime="20191121 17:31:01.735"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.738" starttime="20191121 17:31:01.737"></status>
</kw>
<msg timestamp="20191121 17:31:01.738" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.738" starttime="20191121 17:31:01.734"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.739" starttime="20191121 17:31:01.739"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.739" starttime="20191121 17:31:01.738"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.739" level="INFO">28.26</msg>
<status status="PASS" endtime="20191121 17:31:01.740" starttime="20191121 17:31:01.739"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.740" level="INFO">${elapsed} = 28</msg>
<status status="PASS" endtime="20191121 17:31:01.740" starttime="20191121 17:31:01.740"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.741" level="INFO">${elapsed} = 28</msg>
<status status="PASS" endtime="20191121 17:31:01.741" starttime="20191121 17:31:01.741"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.742" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.742" starttime="20191121 17:31:01.742"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.742" starttime="20191121 17:31:01.741"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.743" starttime="20191121 17:31:01.740"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.743" starttime="20191121 17:31:01.728"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.743" starttime="20191121 17:31:01.696"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.743" starttime="20191121 17:31:01.696"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.743" starttime="20191121 17:31:01.696"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'mobile': '13000000000'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.842" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.842" starttime="20191121 17:31:01.744"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.845" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.845" starttime="20191121 17:31:01.844"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.845" starttime="20191121 17:31:01.843"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.849" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.849" starttime="20191121 17:31:01.847"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.851" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.851" starttime="20191121 17:31:01.849"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.852" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.852" starttime="20191121 17:31:01.851"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.854" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.854" starttime="20191121 17:31:01.853"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.857" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.857" starttime="20191121 17:31:01.856"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.859" starttime="20191121 17:31:01.857"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.860" starttime="20191121 17:31:01.859"></status>
</kw>
<msg timestamp="20191121 17:31:01.861" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.861" starttime="20191121 17:31:01.855"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.863" starttime="20191121 17:31:01.863"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.870" starttime="20191121 17:31:01.865"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.870" starttime="20191121 17:31:01.864"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.871" starttime="20191121 17:31:01.871"></status>
</kw>
<msg timestamp="20191121 17:31:01.872" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.872" starttime="20191121 17:31:01.861"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.874" starttime="20191121 17:31:01.873"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.874" starttime="20191121 17:31:01.872"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.875" level="INFO">95.562</msg>
<status status="PASS" endtime="20191121 17:31:01.875" starttime="20191121 17:31:01.875"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.877" level="INFO">${elapsed} = 95</msg>
<status status="PASS" endtime="20191121 17:31:01.877" starttime="20191121 17:31:01.876"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.878" level="INFO">${elapsed} = 95</msg>
<status status="PASS" endtime="20191121 17:31:01.878" starttime="20191121 17:31:01.878"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.880" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.880" starttime="20191121 17:31:01.879"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.880" starttime="20191121 17:31:01.878"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.880" starttime="20191121 17:31:01.877"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.880" starttime="20191121 17:31:01.846"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.880" starttime="20191121 17:31:01.744"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.881" starttime="20191121 17:31:01.743"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.881" starttime="20191121 17:31:01.743"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_region': '沈阳市浑南区1746'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:01.910" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.911" starttime="20191121 17:31:01.882"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.911" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_address'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'mobile'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:01.911" starttime="20191121 17:31:01.911"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.912" starttime="20191121 17:31:01.911"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:01.913" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.913" starttime="20191121 17:31:01.912"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.913" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.913" starttime="20191121 17:31:01.913"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:01.914" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:01.914" starttime="20191121 17:31:01.914"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.914" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:01.915" starttime="20191121 17:31:01.914"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.915" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:01.916" starttime="20191121 17:31:01.915"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:01.916" starttime="20191121 17:31:01.916"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.917" starttime="20191121 17:31:01.916"></status>
</kw>
<msg timestamp="20191121 17:31:01.917" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.917" starttime="20191121 17:31:01.915"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.918" starttime="20191121 17:31:01.917"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.920" starttime="20191121 17:31:01.918"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.920" starttime="20191121 17:31:01.918"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.921" starttime="20191121 17:31:01.920"></status>
</kw>
<msg timestamp="20191121 17:31:01.921" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:01.921" starttime="20191121 17:31:01.917"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:01.922" starttime="20191121 17:31:01.921"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.922" starttime="20191121 17:31:01.921"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:01.922" level="INFO">26.23</msg>
<status status="PASS" endtime="20191121 17:31:01.922" starttime="20191121 17:31:01.922"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.923" level="INFO">${elapsed} = 26</msg>
<status status="PASS" endtime="20191121 17:31:01.923" starttime="20191121 17:31:01.923"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:01.924" level="INFO">${elapsed} = 26</msg>
<status status="PASS" endtime="20191121 17:31:01.924" starttime="20191121 17:31:01.923"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:01.925" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.925"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.924"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.923"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.912"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.881"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.881"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:01.925" starttime="20191121 17:31:01.881"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'delivery_address': '远航西路IT国际2011746'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.019" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.019" starttime="20191121 17:31:01.926"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.019" level="INFO">{'errors': [{'code': 'missing_field', 'field': 'commodity_id'}, {'code': 'missing_field', 'field': 'specification_id'}, {'code': 'missing_field', 'field': 'delivery_region'}, {'code': 'missing_field', 'field': 'contact'}, {'code': 'missing_field', 'field': 'mobile'}, {'code': 'missing_field', 'field': 'amount'}], 'message': 'Validation Failed'}</msg>
<status status="PASS" endtime="20191121 17:31:02.020" starttime="20191121 17:31:02.019"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.020" starttime="20191121 17:31:02.019"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.020" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.020" starttime="20191121 17:31:02.020"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.021" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.021" starttime="20191121 17:31:02.021"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.021" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.021" starttime="20191121 17:31:02.021"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.022" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.022" starttime="20191121 17:31:02.021"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.022" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:02.022" starttime="20191121 17:31:02.022"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.023" starttime="20191121 17:31:02.022"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.023" starttime="20191121 17:31:02.023"></status>
</kw>
<msg timestamp="20191121 17:31:02.023" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.023" starttime="20191121 17:31:02.022"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.024" starttime="20191121 17:31:02.023"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.025" starttime="20191121 17:31:02.024"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.025" starttime="20191121 17:31:02.024"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.025" starttime="20191121 17:31:02.025"></status>
</kw>
<msg timestamp="20191121 17:31:02.026" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.026" starttime="20191121 17:31:02.023"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.026" starttime="20191121 17:31:02.026"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.026" starttime="20191121 17:31:02.026"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.027" level="INFO">90.627</msg>
<status status="PASS" endtime="20191121 17:31:02.027" starttime="20191121 17:31:02.026"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.027" level="INFO">${elapsed} = 90</msg>
<status status="PASS" endtime="20191121 17:31:02.027" starttime="20191121 17:31:02.027"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.028" level="INFO">${elapsed} = 90</msg>
<status status="PASS" endtime="20191121 17:31:02.028" starttime="20191121 17:31:02.027"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.028" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:02.028"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:02.028"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:02.027"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:02.020"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.926"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.926"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.925"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.548"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.546"></status>
</kw>
<doc>接口名:用户创建订单422

请求方式:Post

预期结果:输入错误参数,订单创建失败,http响应码返回 422

url:POST /user/orders</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.029" starttime="20191121 17:31:01.251"></status>
</test>
<test id="s1-s5-s1-t3" name="Post User Order Pay">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${open_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.030" level="INFO">oaGjU5DBUe1U2suItQ8QPXG2PoSU</msg>
<status status="PASS" endtime="20191121 17:31:02.030" starttime="20191121 17:31:02.030"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_type=WX_XCX_SL</arg>
<arg>open_id=${open_id}</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.031" level="INFO">${essential_params} = {'pay_type': 'WX_XCX_SL', 'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}</msg>
<status status="PASS" endtime="20191121 17:31:02.031" starttime="20191121 17:31:02.031"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.031" level="INFO">${unessential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:31:02.031" starttime="20191121 17:31:02.031"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Pay Success</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:02.032" level="INFO">${results} = [{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:31:02.032" starttime="20191121 17:31:02.032"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_type': 'WX_XCX_SL', 'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Pay Success">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order Pay">
<doc>订单支付</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.531" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.531" starttime="20191121 17:31:02.033"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.532" level="INFO">{'timeStamp': '1574328662', 'paySign': '34142F66A7C1409BB78652E2AB8D417E', 'signType': 'MD5', 'appId': 'wx5041d139e198b0af', 'package': 'prepay_id=wx21173102451965e58028ab7d1236805500', 'nonceStr': 'a26760de0c4111eab3e80242ac15000a'}</msg>
<status status="PASS" endtime="20191121 17:31:02.532" starttime="20191121 17:31:02.531"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.532" starttime="20191121 17:31:02.531"></status>
</kw>
<kw library="resources" name="Expect Status is 201">
<doc>检测响应状态是否为201 Created，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>user_order/post_user_order_pay_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.532" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.533" starttime="20191121 17:31:02.532"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.533" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.533" starttime="20191121 17:31:02.533"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.533" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.533" starttime="20191121 17:31:02.533"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.534" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.534" starttime="20191121 17:31:02.534"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>201</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.535" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a/pay</msg>
<status status="PASS" endtime="20191121 17:31:02.535" starttime="20191121 17:31:02.534"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.535" starttime="20191121 17:31:02.535"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.535" starttime="20191121 17:31:02.535"></status>
</kw>
<msg timestamp="20191121 17:31:02.536" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.536" starttime="20191121 17:31:02.534"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.536" starttime="20191121 17:31:02.536"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.537" starttime="20191121 17:31:02.537"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.537" starttime="20191121 17:31:02.536"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.538" starttime="20191121 17:31:02.537"></status>
</kw>
<msg timestamp="20191121 17:31:02.538" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.538" starttime="20191121 17:31:02.536"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.538" starttime="20191121 17:31:02.538"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.538" starttime="20191121 17:31:02.538"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.539" level="INFO">496.134</msg>
<status status="PASS" endtime="20191121 17:31:02.539" starttime="20191121 17:31:02.538"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.539" level="INFO">${elapsed} = 496</msg>
<status status="PASS" endtime="20191121 17:31:02.539" starttime="20191121 17:31:02.539"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.540" level="INFO">${elapsed} = 496</msg>
<status status="PASS" endtime="20191121 17:31:02.540" starttime="20191121 17:31:02.539"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:200ms~500ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.541" level="INFO">Set tag 'RespTime:200ms~500ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.541" starttime="20191121 17:31:02.540"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.541" starttime="20191121 17:31:02.540"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.541" starttime="20191121 17:31:02.539"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.532"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.033"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.032"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.032"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.032"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.031"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.542" level="INFO">a18aa18a0c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.542"></status>
</kw>
<doc>接口名:订单支付

请求方式:Post

预期结果:输入正确参数,订单支付成功,http响应码返回 200

url:POST /user/orders/:order_id/pay</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:201</tag>
<tag>RespTime:200ms~500ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.542" starttime="20191121 17:31:02.029"></status>
</test>
<test id="s1-s5-s1-t4" name="Post User Order Pay Fail 404">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_type=WX_XCX_SL</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.544" level="INFO">${essential_params} = {'pay_type': 'WX_XCX_SL'}</msg>
<status status="PASS" endtime="20191121 17:31:02.544" starttime="20191121 17:31:02.544"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>open_id=${open_id}</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.544" level="INFO">${unessential_params} = {'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}</msg>
<status status="PASS" endtime="20191121 17:31:02.545" starttime="20191121 17:31:02.544"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Pay Fail 404</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>order_id=aaa</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:02.545" level="INFO">[{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}]</msg>
<msg timestamp="20191121 17:31:02.545" level="INFO">${results} = [{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:31:02.545" starttime="20191121 17:31:02.545"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_type': 'WX_XCX_SL', 'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Pay Fail 404">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order Pay">
<doc>订单支付</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.693" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.693" starttime="20191121 17:31:02.546"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.696" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.696" starttime="20191121 17:31:02.695"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.698" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.698" starttime="20191121 17:31:02.696"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.699" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.699" starttime="20191121 17:31:02.698"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.701" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.701" starttime="20191121 17:31:02.700"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.704" level="INFO">https://mall-server-d.parkone.cn/user/orders/aaa/pay</msg>
<status status="PASS" endtime="20191121 17:31:02.704" starttime="20191121 17:31:02.703"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.706" starttime="20191121 17:31:02.704"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.707" starttime="20191121 17:31:02.706"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.708" starttime="20191121 17:31:02.702"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.709" level="INFO">144.716</msg>
<status status="PASS" endtime="20191121 17:31:02.709" starttime="20191121 17:31:02.708"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.711" level="INFO">${elapsed} = 144</msg>
<status status="PASS" endtime="20191121 17:31:02.711" starttime="20191121 17:31:02.710"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.714" level="INFO">${elapsed} = 144</msg>
<status status="PASS" endtime="20191121 17:31:02.714" starttime="20191121 17:31:02.713"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.718" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.718" starttime="20191121 17:31:02.717"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.718" starttime="20191121 17:31:02.715"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.719" starttime="20191121 17:31:02.711"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.719" starttime="20191121 17:31:02.694"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.719" starttime="20191121 17:31:02.546"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.719" starttime="20191121 17:31:02.546"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.719" starttime="20191121 17:31:02.546"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.720" starttime="20191121 17:31:02.546"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.720" starttime="20191121 17:31:02.545"></status>
</kw>
<doc>接口名:订单支付404

请求方式:Post

预期结果:输入错误url,http响应码返回 404

url:POST /user/orders/:order_id/pay</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.720" starttime="20191121 17:31:02.543"></status>
</test>
<test id="s1-s5-s1-t5" name="Post User Order Pay Fail 422">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.724" level="INFO">${essential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:31:02.724" starttime="20191121 17:31:02.724"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>open_id=${open_id}</arg>
<arg>pay_type=WX_XCX_SL</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:02.726" level="INFO">${unessential_params} = {'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}</msg>
<status status="PASS" endtime="20191121 17:31:02.726" starttime="20191121 17:31:02.725"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Pay Fail 422</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:02.728" level="INFO">[{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}, {'pay_type': 'WX_XCX_SL'}]</msg>
<msg timestamp="20191121 17:31:02.728" level="INFO">${results} = [{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}, {'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:31:02.728" starttime="20191121 17:31:02.727"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Pay Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order Pay">
<doc>订单支付</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.758" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.758" starttime="20191121 17:31:02.730"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.758" level="INFO">{'message': 'Validation Failed', 'error': [{'code': 'missing_field', 'field': 'pay_type'}]}</msg>
<status status="PASS" endtime="20191121 17:31:02.759" starttime="20191121 17:31:02.758"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.759" starttime="20191121 17:31:02.758"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.760" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.760" starttime="20191121 17:31:02.759"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.760" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.760" starttime="20191121 17:31:02.760"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.761" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.761" starttime="20191121 17:31:02.760"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.761" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.761" starttime="20191121 17:31:02.761"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.762" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a/pay</msg>
<status status="PASS" endtime="20191121 17:31:02.762" starttime="20191121 17:31:02.762"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.763" starttime="20191121 17:31:02.763"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.764" starttime="20191121 17:31:02.763"></status>
</kw>
<msg timestamp="20191121 17:31:02.764" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.764" starttime="20191121 17:31:02.762"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.765" starttime="20191121 17:31:02.765"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.767" starttime="20191121 17:31:02.766"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.767" starttime="20191121 17:31:02.765"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.768" starttime="20191121 17:31:02.768"></status>
</kw>
<msg timestamp="20191121 17:31:02.768" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.768" starttime="20191121 17:31:02.764"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.769" starttime="20191121 17:31:02.769"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.769" starttime="20191121 17:31:02.768"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.770" level="INFO">24.928</msg>
<status status="PASS" endtime="20191121 17:31:02.770" starttime="20191121 17:31:02.769"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.770" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:02.770" starttime="20191121 17:31:02.770"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.771" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:02.771" starttime="20191121 17:31:02.771"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.772" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.772" starttime="20191121 17:31:02.772"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.772" starttime="20191121 17:31:02.771"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.772" starttime="20191121 17:31:02.770"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.773" starttime="20191121 17:31:02.759"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.773" starttime="20191121 17:31:02.729"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.773" starttime="20191121 17:31:02.729"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.773" starttime="20191121 17:31:02.728"></status>
</kw>
<kw type="foritem" name="${kwargs} = {'pay_type': 'WX_XCX_SL'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Pay Fail 422">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order Pay">
<doc>订单支付</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.801" level="INFO">${resp} = &lt;Response [422]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.801" starttime="20191121 17:31:02.774"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.802" level="INFO">{'message': 'Validation Failed', 'error': [{'code': 'missing_field', 'field': 'open_id'}]}</msg>
<status status="PASS" endtime="20191121 17:31:02.802" starttime="20191121 17:31:02.801"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.802" starttime="20191121 17:31:02.801"></status>
</kw>
<kw library="resources" name="Expect Status is 422">
<doc>检测响应状态是否为422 Unprocessable Entity，返回的json格式是否符合验证。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.803" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.803" starttime="20191121 17:31:02.802"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.803" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.803" starttime="20191121 17:31:02.803"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.804" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.804" starttime="20191121 17:31:02.803"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.804" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.804" starttime="20191121 17:31:02.804"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>422</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.805" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a/pay</msg>
<status status="PASS" endtime="20191121 17:31:02.805" starttime="20191121 17:31:02.805"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.806" starttime="20191121 17:31:02.806"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.807" starttime="20191121 17:31:02.806"></status>
</kw>
<msg timestamp="20191121 17:31:02.807" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.807" starttime="20191121 17:31:02.805"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>common/error_422.schema.json</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.808" starttime="20191121 17:31:02.808"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.810" starttime="20191121 17:31:02.808"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.810" starttime="20191121 17:31:02.808"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.810" starttime="20191121 17:31:02.810"></status>
</kw>
<msg timestamp="20191121 17:31:02.811" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.811" starttime="20191121 17:31:02.807"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.812" starttime="20191121 17:31:02.811"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.812" starttime="20191121 17:31:02.811"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.812" level="INFO">25.037</msg>
<status status="PASS" endtime="20191121 17:31:02.812" starttime="20191121 17:31:02.812"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.813" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:02.813" starttime="20191121 17:31:02.812"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.814" level="INFO">${elapsed} = 25</msg>
<status status="PASS" endtime="20191121 17:31:02.814" starttime="20191121 17:31:02.813"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.815" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.814"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.814"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.813"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.802"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.773"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.773"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.773"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.728"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.815" starttime="20191121 17:31:02.726"></status>
</kw>
<doc>接口名:订单支付422

请求方式:Post

预期结果:输入错误url,http响应码返回 404

url:POST /user/orders/:order_id/pay</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:422</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.816" starttime="20191121 17:31:02.722"></status>
</test>
<test id="s1-s5-s1-t6" name="Get User Order">
<kw name="Get User Order Success">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Get Order By Order Id">
<doc>查看订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.864" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.864" starttime="20191121 17:31:02.818"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>log</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.867" level="INFO">{'apollo_status': True, 'pay_status': 1, 'delivery_address': '远航西路IT国际2018628', 'mobile': '13000000000', 'confirm_type': None, 'order_id': 'a18aa18a0c4111eabc550242ac15000a', 'order_time': 1574328661.083898, 'platform_coupon_amount': 0, 'delivery_region': '沈阳市浑南区8628', 'total_amount': 5, 'real_price': 5, 'contact': 'Robot陈芳', 'discount_price': 0, 'detail': [{'subtitle': '而对方', 'specification_name': '发的', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'pay_expire_time': 1574329261.083898, 'delivery_status': None, 'unit_original_price': 1, 'amount': 5, 'unit_sell_price': 1, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a'}], 'delivery_time': None, 'delivery_order': None, 'pay_expire_time': 1574329261.083898, 'delivery_company': None, 'postage': None, 'pay_time': None, 'confirm_time': None, 'delivery_status': None, 'created_time': 1574328661.085694, 'trade_no': None, 'ht_code': '10001075', 'updated_time': 1574328661.235826, 'commodity_name': '我都无法', 'pay_type': 'WX_XCX_SL'}</msg>
<status status="PASS" endtime="20191121 17:31:02.867" starttime="20191121 17:31:02.865"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.867" starttime="20191121 17:31:02.865"></status>
</kw>
<kw library="resources" name="Expect Status is 200">
<doc>期待响应状态是否为200 OK，返回的json格式是否符合验证。
{resp}: 响应实体。
{schema}: 对应的jsonschema校验文件。</doc>
<arguments>
<arg>${resp}</arg>
<arg>user_order/get_user_order_200.schema.json</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.870" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.870" starttime="20191121 17:31:02.869"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.872" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.872" starttime="20191121 17:31:02.871"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.873" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.873" starttime="20191121 17:31:02.872"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.875" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.875" starttime="20191121 17:31:02.874"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${re}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.878" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:02.878" starttime="20191121 17:31:02.877"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.881" starttime="20191121 17:31:02.878"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.882" starttime="20191121 17:31:02.881"></status>
</kw>
<msg timestamp="20191121 17:31:02.883" level="INFO">${re} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.883" starttime="20191121 17:31:02.876"></status>
</kw>
<kw library="resources" name="To Validate Json">
<doc>检测响应状态是否符合预期值。
{schema}:JsonSchema验证。
{resp}:响应实体。</doc>
<arguments>
<arg>${schema}</arg>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${js}</var>
</assign>
<kw library="BuiltIn" name="Pass Execution If">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'${schema}'=='NoSchema'</arg>
<arg>Json:无需验证Json，通过。</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.886" starttime="20191121 17:31:02.885"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate json</arg>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw library="JSONSchemaLibrary" name="Validate Json">
<arguments>
<arg>${schema}</arg>
<arg>${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.894" starttime="20191121 17:31:02.887"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.894" starttime="20191121 17:31:02.886"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]}错误。test_case：${TEST_NAME}:Json验证错误。</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.895" starttime="20191121 17:31:02.894"></status>
</kw>
<msg timestamp="20191121 17:31:02.896" level="INFO">${js} = PASS</msg>
<status status="PASS" endtime="20191121 17:31:02.896" starttime="20191121 17:31:02.884"></status>
</kw>
<kw library="resources" name="Auto Creat JsonError Tag">
<doc>根据状态自动生成’Json返回错误‘类提示Tag。
{re}:状态码判断keyword状态。
{js}:json判断keyword状态。</doc>
<arguments>
<arg>${re}</arg>
<arg>${js}</arg>
</arguments>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${re}'=='PASS' and '${js}'=='FAIL'</arg>
<arg>set tags</arg>
<arg>BugLevel:Minor</arg>
<arg>JsonReturnError</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.898" starttime="20191121 17:31:02.897"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.898" starttime="20191121 17:31:02.896"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.899" level="INFO">43.882</msg>
<status status="PASS" endtime="20191121 17:31:02.899" starttime="20191121 17:31:02.898"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.899" level="INFO">${elapsed} = 43</msg>
<status status="PASS" endtime="20191121 17:31:02.900" starttime="20191121 17:31:02.899"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.901" level="INFO">${elapsed} = 43</msg>
<status status="PASS" endtime="20191121 17:31:02.901" starttime="20191121 17:31:02.900"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.902" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.902" starttime="20191121 17:31:02.902"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.903" starttime="20191121 17:31:02.901"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.903" starttime="20191121 17:31:02.900"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.903" starttime="20191121 17:31:02.868"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.903" starttime="20191121 17:31:02.817"></status>
</kw>
<doc>接口名:用户查看订单详情

请求方式:Get

预期结果:输入正确参数,看订单详情成功,http响应码返回 200

url:GET /user/orders/:order_id</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:200</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.903" starttime="20191121 17:31:02.816"></status>
</test>
<test id="s1-s5-s1-t7" name="Get User Order Fail 404">
<kw name="Get User Order Fail 404">
<arguments>
<arg>order_id=444444</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Get Order By Order Id">
<doc>查看订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:02.946" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.946" starttime="20191121 17:31:02.906"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:02.947" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.947" starttime="20191121 17:31:02.947"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.948" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.948" starttime="20191121 17:31:02.947"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:02.949" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:02.949" starttime="20191121 17:31:02.948"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.949" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:02.949" starttime="20191121 17:31:02.949"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.951" level="INFO">https://mall-server-d.parkone.cn/user/orders/444444</msg>
<status status="PASS" endtime="20191121 17:31:02.951" starttime="20191121 17:31:02.950"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:02.952" starttime="20191121 17:31:02.951"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:02.953" starttime="20191121 17:31:02.952"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.953" starttime="20191121 17:31:02.950"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:02.953" level="INFO">38.214</msg>
<status status="PASS" endtime="20191121 17:31:02.953" starttime="20191121 17:31:02.953"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.954" level="INFO">${elapsed} = 38</msg>
<status status="PASS" endtime="20191121 17:31:02.954" starttime="20191121 17:31:02.954"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:02.955" level="INFO">${elapsed} = 38</msg>
<status status="PASS" endtime="20191121 17:31:02.955" starttime="20191121 17:31:02.955"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:02.957" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.956"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.956"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.954"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.946"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.905"></status>
</kw>
<doc>接口名:用户查看订单详情404

请求方式:Get

预期结果:输入正确参数,看订单详情成功,http响应码返回 404 

url:GET /user/orders/:order_id</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:02.957" starttime="20191121 17:31:02.904"></status>
</test>
<test id="s1-s5-s1-t8" name="Put User Order Success">
<kw name="Put User Order Success">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Cancel Order">
<doc>取消订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:03.105" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.105" starttime="20191121 17:31:02.960"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:03.108" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.108" starttime="20191121 17:31:03.107"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.110" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.110" starttime="20191121 17:31:03.109"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:03.112" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.112" starttime="20191121 17:31:03.111"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.113" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.113" starttime="20191121 17:31:03.112"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.116" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a/cancel</msg>
<status status="PASS" endtime="20191121 17:31:03.116" starttime="20191121 17:31:03.115"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.118" starttime="20191121 17:31:03.117"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:03.120" starttime="20191121 17:31:03.119"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.120" starttime="20191121 17:31:03.114"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.121" level="INFO">142.452</msg>
<status status="PASS" endtime="20191121 17:31:03.122" starttime="20191121 17:31:03.120"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.123" level="INFO">${elapsed} = 142</msg>
<status status="PASS" endtime="20191121 17:31:03.123" starttime="20191121 17:31:03.122"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.126" level="INFO">${elapsed} = 142</msg>
<status status="PASS" endtime="20191121 17:31:03.126" starttime="20191121 17:31:03.125"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:31:03.130" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:31:03.131" starttime="20191121 17:31:03.128"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.131" starttime="20191121 17:31:03.126"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.131" starttime="20191121 17:31:03.124"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.131" starttime="20191121 17:31:03.106"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.132" starttime="20191121 17:31:02.959"></status>
</kw>
<doc>接口名:取消订单

请求方式:Get

预期结果:输入正确参数,看订单详情成功,http响应码返回 204

url:PUT /user/orders/:order_id/cancel</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:03.132" starttime="20191121 17:31:02.958"></status>
</test>
<test id="s1-s5-s1-t9" name="Put User Order Fail 404">
<kw name="Put User Order Fail 404">
<arguments>
<arg>order_id=444444</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Cancel Order">
<doc>取消订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:03.181" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.181" starttime="20191121 17:31:03.137"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:03.184" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.184" starttime="20191121 17:31:03.183"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.186" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.186" starttime="20191121 17:31:03.185"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:03.188" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.188" starttime="20191121 17:31:03.187"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.189" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.189" starttime="20191121 17:31:03.188"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.192" level="INFO">https://mall-server-d.parkone.cn/user/orders/444444/cancel</msg>
<status status="PASS" endtime="20191121 17:31:03.192" starttime="20191121 17:31:03.191"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.194" starttime="20191121 17:31:03.193"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:03.196" starttime="20191121 17:31:03.195"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.196" starttime="20191121 17:31:03.190"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.197" level="INFO">39.951</msg>
<status status="PASS" endtime="20191121 17:31:03.198" starttime="20191121 17:31:03.196"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.199" level="INFO">${elapsed} = 39</msg>
<status status="PASS" endtime="20191121 17:31:03.199" starttime="20191121 17:31:03.198"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.202" level="INFO">${elapsed} = 39</msg>
<status status="PASS" endtime="20191121 17:31:03.202" starttime="20191121 17:31:03.201"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:03.205" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:03.205" starttime="20191121 17:31:03.204"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.205" starttime="20191121 17:31:03.202"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.206" starttime="20191121 17:31:03.200"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.206" starttime="20191121 17:31:03.182"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.206" starttime="20191121 17:31:03.136"></status>
</kw>
<doc>接口名:取消订单404

请求方式:Get

预期结果:未登录,http响应码返回 404

url:PUT /user/orders/:order_id/cancel</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:03.207" starttime="20191121 17:31:03.133"></status>
</test>
<test id="s1-s5-s1-t10" name="Put Accept Order Success">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${order_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.210" level="INFO">a18aa18a0c4111eabc550242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:03.211" starttime="20191121 17:31:03.210"></status>
</kw>
<kw name="Put Accept Order Success">
<arguments>
<arg>order_id=${order_id}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Accept Order">
<doc>用户确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:03.346" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.346" starttime="20191121 17:31:03.212"></status>
</kw>
<kw library="resources" name="Expect Status is 204">
<doc>检测响应状态是否为204 No Content。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:03.349" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.349" starttime="20191121 17:31:03.348"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.351" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.351" starttime="20191121 17:31:03.350"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:03.353" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.353" starttime="20191121 17:31:03.352"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.354" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.354" starttime="20191121 17:31:03.353"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>204</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.357" level="INFO">https://mall-server-d.parkone.cn/user/orders/a18aa18a0c4111eabc550242ac15000a/delivery_status</msg>
<status status="PASS" endtime="20191121 17:31:03.357" starttime="20191121 17:31:03.356"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.359" starttime="20191121 17:31:03.358"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:03.361" starttime="20191121 17:31:03.360"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.361" starttime="20191121 17:31:03.355"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.362" level="INFO">130.577</msg>
<status status="PASS" endtime="20191121 17:31:03.363" starttime="20191121 17:31:03.361"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.364" level="INFO">${elapsed} = 130</msg>
<status status="PASS" endtime="20191121 17:31:03.364" starttime="20191121 17:31:03.363"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.367" level="INFO">${elapsed} = 130</msg>
<status status="PASS" endtime="20191121 17:31:03.367" starttime="20191121 17:31:03.366"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms~200ms</arg>
</arguments>
<msg timestamp="20191121 17:31:03.370" level="INFO">Set tag 'RespTime:100ms~200ms'.</msg>
<status status="PASS" endtime="20191121 17:31:03.370" starttime="20191121 17:31:03.369"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.371" starttime="20191121 17:31:03.367"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.371" starttime="20191121 17:31:03.365"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.371" starttime="20191121 17:31:03.347"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.372" starttime="20191121 17:31:03.211"></status>
</kw>
<doc>接口名:用户确认收货

请求方式:Get

预期结果:输入正确参数,看订单详情成功,http响应码返回 204

url:PUT /user/orders/:order_id/delivery_status</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:204</tag>
<tag>RespTime:100ms~200ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:03.372" starttime="20191121 17:31:03.208"></status>
</test>
<test id="s1-s5-s1-t11" name="Put Accept Order Fail 404">
<kw name="Put Accept Order Fail 404">
<arguments>
<arg>order_id=444444</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Accept Order">
<doc>用户确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:03.417" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.417" starttime="20191121 17:31:03.378"></status>
</kw>
<kw library="resources" name="Expect Status is 404">
<doc>检测响应状态是否为404 Not Found。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:03.418" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.418" starttime="20191121 17:31:03.418"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.418" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.419" starttime="20191121 17:31:03.418"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:03.419" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:03.419" starttime="20191121 17:31:03.419"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.419" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:03.419" starttime="20191121 17:31:03.419"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>404</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.420" level="INFO">https://mall-server-d.parkone.cn/user/orders/444444/delivery_status</msg>
<status status="PASS" endtime="20191121 17:31:03.420" starttime="20191121 17:31:03.420"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.421" starttime="20191121 17:31:03.420"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:03.421" starttime="20191121 17:31:03.421"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.421" starttime="20191121 17:31:03.419"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.422" level="INFO">36.112</msg>
<status status="PASS" endtime="20191121 17:31:03.422" starttime="20191121 17:31:03.421"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.422" level="INFO">${elapsed} = 36</msg>
<status status="PASS" endtime="20191121 17:31:03.422" starttime="20191121 17:31:03.422"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:03.423" level="INFO">${elapsed} = 36</msg>
<status status="PASS" endtime="20191121 17:31:03.423" starttime="20191121 17:31:03.422"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:03.423" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:03.423" starttime="20191121 17:31:03.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.424" starttime="20191121 17:31:03.423"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.424" starttime="20191121 17:31:03.422"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.424" starttime="20191121 17:31:03.417"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:03.424" starttime="20191121 17:31:03.377"></status>
</kw>
<doc>接口名:用户确认收货404

请求方式:Get

预期结果:输入错误的Url,http响应码返回 404

url:PUT /user/orders/:order_id/delivery_status</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:404</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:03.424" starttime="20191121 17:31:03.373"></status>
</test>
<doc>wxmp_order</doc>
<status status="PASS" endtime="20191121 17:31:03.425" starttime="20191121 17:30:59.755"></status>
</suite>
<suite id="s1-s5-s2" source="/home/wangyimo/6666666/robot-mall-server/tests/user_order/order.unthorized.robot" name="Order.Unthorized">
<test id="s1-s5-s2-t1" name="Post User Order Fail 403">
<kw library="utils_library.BaseUtilsLibrary" name="Generate Num">
<doc>生成随机手机号
:param length: 长度
:type length: int
:param prefix: 前缀
:type prefix: str
:param suffix: 后缀
:type  suffix: str
:return: 随机手机号
:rtype: str</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20191121 17:31:03.432" level="INFO">${number} = 8853</msg>
<status status="PASS" endtime="20191121 17:31:03.432" starttime="20191121 17:31:03.432"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Faker Name">
<doc>生成虚假测试名字
:return: 虚假测试名字</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20191121 17:31:03.443" level="INFO">${name} = 陈亮</msg>
<status status="PASS" endtime="20191121 17:31:03.443" starttime="20191121 17:31:03.432"></status>
</kw>
<kw library="server" name="Login">
<arguments>
<arg>admin</arg>
<arg>admin123</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:03.690" starttime="20191121 17:31:03.444"></status>
</kw>
<kw library="server" name="Get Admin Commodities">
<doc>获取商品列表</doc>
<assign>
<var>${arr1}</var>
</assign>
<msg timestamp="20191121 17:31:03.962" level="INFO">${arr1} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:03.962" starttime="20191121 17:31:03.691"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${arr1.json()}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.966" level="INFO">[{'subtitle': '而对方', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574305376.332568, 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'updated_time': 1574328661.090192, 'stock': 1000, 'unit_sell_price': 1, 'specification_name': '发的', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;vfw&lt;/p&gt;', 'created_time': 1574305374.138449, 'removal_time': None, 'updated_time': 1574305376.335441, 'commodity_name': '我都无法', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4ed708c13f6539238795bcb66fc03994.png'], 'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'shelf_time': 1574305376.335143}, {'subtitle': 'test商城test商城test商城te', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573634813.730427, 'specification_id': '244a56a205f211ea8edb0242ac15000a', 'updated_time': 1574304986.201116, 'stock': 3, 'unit_sell_price': 1, 'specification_name': 'lyy测试', 'is_deleted': False}, {'sold_amount': 5, 'unit_original_price': 1, 'created_time': 1573609343.450265, 'specification_id': 'd6d200ae05b611eaad830242ac15000a', 'updated_time': 1574304986.215386, 'stock': 2, 'unit_sell_price': 1, 'specification_name': 'test', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.437689, 'specification_id': 'bf98306c05c411ea94470242ac15000a', 'updated_time': 1574304986.229886, 'stock': 17, 'unit_sell_price': 1, 'specification_name': '去属第一和运费我v哈', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.441459, 'specification_id': 'bf98c2b605c411ea94470242ac15000a', 'updated_time': 1574305042.633724, 'stock': 10000, 'unit_sell_price': 1, 'specification_name': '大会的一HDWAP9', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1573615317.433575, 'specification_id': 'bf977f9605c411ea94470242ac15000a', 'updated_time': 1574305591.960304, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '1234567890', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;性能：&lt;/p&gt;\n\n&lt;p&gt;此款玻璃水性价比高，能在低温-40度下防冻。&lt;/p&gt;\n\n&lt;p&gt;价格：&lt;/p&gt;\n\n&lt;p&gt;价格比门市价低，现在下单立减10元。&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3613d7e02e7c2e1f0bf31f7f45959a07.jpg " style="width:100%" /&gt;&lt;/p&gt;\n\n&lt;p&gt;容量：&lt;/p&gt;\n\n&lt;p&gt;玻璃水有不同容量的，1屏2000ml的可以使用一年。&lt;/p&gt;\n\n&lt;p&gt;优惠：&lt;/p&gt;\n\n&lt;p&gt;下单赠送优惠券。转发更有优惠。&lt;/p&gt;\n\n&lt;p&gt;test&lt;/p&gt;', 'created_time': 1573609343.286351, 'removal_time': 1573636446.576894, 'updated_time': 1574304985.919921, 'commodity_name': 'test商城test商城test商城te', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/9c0028a935fa13ff706c3a0b486243fe.jpg', 'https://uustorage-t.uucin.com/media/park/75b320d2c482595c7314549ed5e9346d.jpg', 'https://uustorage-t.uucin.com/media/park/8cce016ce4c32a24b0eed5ae65c8d0cf.png', 'https://uustorage-t.uucin.com/media/park/64b45c6574b19a5582ccb393966ef1da.jpg', 'https://uustorage-t.uucin.com/media/park/652e634bbe1858c1bcfef7cd81cb0dc1.jpg', 'https://uustorage-t.uucin.com/media/park/4ea51169f2d6d145daeea080f26f6780.jpg'], 'commodity_id': 'd6b7439a05b611eaad830242ac15000a', 'shelf_time': 1573638025.723108}, {'subtitle': '产品副标题，产品副标题顶顶顶顶顶顶顶顶顶顶顶顶顶，打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶打开顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 10, 'unit_original_price': 8800, 'created_time': 1574221547.103281, 'specification_id': '3ca209c40b4811eaa3c10242ac15000a', 'updated_time': 1574328309.942008, 'stock': 8, 'unit_sell_price': 1, 'specification_name': '1元购', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 8800, 'created_time': 1573630927.289256, 'specification_id': '17ca814405e911eaa9f80242ac15000a', 'updated_time': 1574319876.617156, 'stock': 12, 'unit_sell_price': 6600, 'specification_name': '测试的商品1', 'is_deleted': False}, {'sold_amount': 3, 'unit_original_price': 12300, 'created_time': 1573630929.783765, 'specification_id': '19471aa005e911eaaf590242ac15000a', 'updated_time': 1574328241.59247, 'stock': 10, 'unit_sell_price': 1, 'specification_name': '88元套餐券', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/52c0d7ccbec9d6d0d4be070fbd630c9a.jpg " /&gt; &lt;img src=" https://uustorage-t.uucin.com/media/park/d52551a629ec7906c47493f3ac6c1361.jpg " style="width:100%" /&gt; 两中商品&lt;/p&gt;\n\n&lt;ol&gt;\n\t&lt;li&gt;sdggggf&lt;/li&gt;\n\t&lt;li&gt;未得到 &lt;img src=" https://uustorage-t.uucin.com/media/park/3ecf98e35044c3b93e62ffe951234075.png " style="width: 100%;" /&gt;\n\t&lt;table border="1" cellpadding="1" cellspacing="1" style="width:500px;"&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：10&lt;/td&gt;\n\t\t\t\t&lt;td&gt;产品1&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;td&gt;库存：2&lt;/td&gt;\n\t\t\t\t&lt;td&gt;商品2&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n\n\t&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;', 'created_time': 1573624373.178878, 'removal_time': 1574233759.619966, 'updated_time': 1574233854.452954, 'commodity_name': '【美行好·物】过路过不要错过，走过路过', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/66f805fbf47a8e1a35b1fff639191e0c.jpg', 'https://uustorage-t.uucin.com/media/park/ad7d2b0cc0e912df37e6f3cc6ae82548.jpg', 'https://uustorage-t.uucin.com/media/park/d26f3d012e6bbc908c8e0ab54b1eeadd.jpg'], 'commodity_id': 'd53b3c2405d911ea83730242ac15000a', 'shelf_time': 1574233854.45243}, {'subtitle': '【美行好·物】超浓融冰融雪镀膜', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 3000, 'created_time': 1573647241.705738, 'specification_id': '13f0e8da060f11ea9cc60242ac15000a', 'updated_time': 1574231732.376514, 'stock': 0, 'unit_sell_price': 2000, 'specification_name': '100ml', 'is_deleted': False}, {'sold_amount': 14, 'unit_original_price': 3000, 'created_time': 1573613358.465382, 'specification_id': '2ff4aeb205c011eab0900242ac15000a', 'updated_time': 1574231732.386665, 'stock': 0, 'unit_sell_price': 1, 'specification_name': '1L+2L', 'is_deleted': False}, {'sold_amount': 1, 'unit_original_price': 1300, 'created_time': 1573630748.026529, 'specification_id': 'acf11e0005e811ea80960242ac15000a', 'updated_time': 1574231732.396574, 'stock': 0, 'unit_sell_price': 1200, 'specification_name': '十个字了吗十个字了吗', 'is_deleted': False}, {'sold_amount': 0, 'unit_original_price': 10000, 'created_time': 1573647241.700717, 'specification_id': '13f01568060f11ea9cc60242ac15000a', 'updated_time': 1574231732.40612, 'stock': 0, 'unit_sell_price': 5000, 'specification_name': '5000', 'is_deleted': False}, {'sold_amount': 17, 'unit_original_price': 1000, 'created_time': 1573613358.451564, 'specification_id': '2ff25d2405c011eab0900242ac15000a', 'updated_time': 1574327889.183015, 'stock': 7, 'unit_sell_price': 1, 'specification_name': '1L', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水玻璃水&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3d65af2b6d546f8fcf443e756bdbf37f.jpg " style="width:100%" /&gt;&lt;/p&gt;', 'created_time': 1573613358.207821, 'removal_time': 1573660406.071264, 'updated_time': 1574231732.217785, 'commodity_name': '【美行好·物】超浓融冰融雪镀膜玻璃精华液', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/c8ab9b83ed2c70a58bc6630f14052d77.jpg', 'https://uustorage-t.uucin.com/media/park/4a5c36fb85bded32164a6beb4c5a9e91.jpg', 'https://uustorage-t.uucin.com/media/park/81a405254ca5e52bf1f22082bd281c6b.jpg', 'https://uustorage-t.uucin.com/media/park/56458b58cbca608f74c59fac56d53a9e.jpg', 'https://uustorage-t.uucin.com/media/park/97a4bb0029ba0559d6d0b9f0284f5099.jpg', 'https://uustorage-t.uucin.com/media/park/fb7663ac9a657b50d8739da4942b01bd.jpg'], 'commodity_id': '2fca72b405c011eaaf850242ac15000a', 'shelf_time': 1573662069.987069}, {'subtitle': 'gw4t', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 1, 'created_time': 1574231446.502244, 'specification_id': '49226bbe0b5f11eaa3c10242ac15000a', 'updated_time': 1574232065.836315, 'stock': 100, 'unit_sell_price': 1, 'specification_name': 'fe', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;gb&lt;/p&gt;', 'created_time': 1574231446.325848, 'removal_time': None, 'updated_time': 1574231446.505188, 'commodity_name': 'ert', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/26c226f1f2f2eea1afa6ea394d52ea47.jpg'], 'commodity_id': '490659b00b5f11ea9dbb0242ac15000a', 'shelf_time': 1574231446.504909}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1574216847.035356, 'specification_id': '4b2c84480b3d11ea9d820242ac15000a', 'updated_time': 1574216847.035629, 'stock': 0, 'unit_sell_price': 100, 'specification_name': '10', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;0库存&lt;/p&gt;', 'created_time': 1574216846.830808, 'removal_time': None, 'updated_time': 1574216847.038705, 'commodity_name': '宽宽款款款时刻【好~物】', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/57495ab26af9dc4facdcdc85077f9420.png'], 'commodity_id': '4b0bb8260b3d11eaa3c10242ac15000a', 'shelf_time': 1574216847.038285}, {'subtitle': '商品', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 2, 'specifications': [], 'is_deleted': False, 'commodity_description': 'test', 'created_time': 1574143489.925558, 'removal_time': None, 'updated_time': 1574143489.925673, 'commodity_name': '刘莉的商品', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '7eecb0d80a9211eaa4890242ac15000a', 'shelf_time': None}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 2, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573810263.808504, 'specification_id': 'a4ab2c9c078a11eaa4890242ac15000a', 'updated_time': 1573810263.808558, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '123', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;123&lt;/p&gt;', 'created_time': 1573810263.598355, 'removal_time': 1573813969.499961, 'updated_time': 1573813969.50032, 'commodity_name': '123', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/73e2ae8a442f17d61d4e1f60950809ea.jpg'], 'commodity_id': 'a4846a58078a11eaa4890242ac15000a', 'shelf_time': 1573813966.515934}, {'subtitle': '1', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632155.409471, 'specification_id': 'f3cec19405eb11ea85430242ac15000a', 'updated_time': 1573632155.409514, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632155.246474, 'removal_time': 1573643487.224043, 'updated_time': 1573644196.449431, 'commodity_name': '分页了', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/dfd125f1a4f6141b51d9245721f54672.png'], 'commodity_id': 'f3b4b4d405eb11ea85430242ac15000a', 'shelf_time': 1573644196.448855}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573615693.381487, 'specification_id': '9fac97c405c511ea9f610242ac15000a', 'updated_time': 1573636283.105791, 'stock': 1, 'unit_sell_price': 1, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p style="text-align: right;"&gt;14651&lt;/p&gt;', 'created_time': 1573615693.198903, 'removal_time': 1573616263.977464, 'updated_time': 1573636282.929871, 'commodity_name': '0', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1a2886ee676cc5206acc526a12fa8ec1.jpg'], 'commodity_id': '9f8f980e05c511ea81d40242ac15000a', 'shelf_time': 1573616322.098409}, {'subtitle': '改装车喷漆', 'commodity_videos': ['https://uustorage-t.uucin.com/media/video/mall/20191113_8963df239bf54e35b297fb8cccd9a450.mp4'], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 88888888, 'created_time': 1573615300.262365, 'specification_id': 'b55b712205c411ea90e20242ac15000a', 'updated_time': 1573632154.791335, 'stock': 9999, 'unit_sell_price': 11111111, 'specification_name': 'XPO-1956', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;&lt;img src=" https://uustorage-t.uucin.com/media/park/3a24d8bc1851d25c552f9f81cd2357f0.jpg " /&gt; 采用黄金样式，镶钻的材料，物有所值，&lt;/p&gt;', 'created_time': 1573615300.103438, 'removal_time': 1573631567.484694, 'updated_time': 1573632154.633425, 'commodity_name': '改装车喷漆', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/e007e3ef71805d5e656ff60ad4766fd6.jpeg'], 'commodity_id': 'b54204bc05c411ea90e20242ac15000a', 'shelf_time': 1573632135.858652}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632124.414221, 'specification_id': 'e155350205eb11eaa61a0242ac15000a', 'updated_time': 1573632124.414288, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '1', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632124.23512, 'removal_time': None, 'updated_time': 1573632124.416722, 'commodity_name': '15', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/bb2867e49371c540e9327a6b44c3a1e7.png'], 'commodity_id': 'e138d8ee05eb11ea80cf0242ac15000a', 'shelf_time': 1573632124.416462}, {'subtitle': '12', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 21100, 'created_time': 1573632097.902263, 'specification_id': 'd187d7d805eb11ea80cf0242ac15000a', 'updated_time': 1573632097.902312, 'stock': 1, 'unit_sell_price': 121100, 'specification_name': '11', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;1&lt;/p&gt;', 'created_time': 1573632097.719132, 'removal_time': None, 'updated_time': 1573632097.904967, 'commodity_name': '12', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/1c30c20bdf923bbe6b8d9b1e41132f2b.jpg'], 'commodity_id': 'd16aa21205eb11ea85430242ac15000a', 'shelf_time': 1573632097.90469}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632072.579934, 'specification_id': 'c26ff28005eb11ea80cf0242ac15000a', 'updated_time': 1573632072.580016, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页啊啊', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;111&lt;/p&gt;', 'created_time': 1573632072.418897, 'removal_time': None, 'updated_time': 1573632072.582644, 'commodity_name': '还没分页啊啊', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4958381c45b4b47771aa757ac3c07d61.jpg'], 'commodity_id': 'c2561ce805eb11eabd200242ac15000a', 'shelf_time': 1573632072.582372}, {'subtitle': '', 'commodity_videos': [], 'sales_status': 1, 'specifications': [{'sold_amount': 0, 'unit_original_price': 100, 'created_time': 1573632041.906935, 'specification_id': 'b02797ea05eb11eaa61a0242ac15000a', 'updated_time': 1573632041.907056, 'stock': 1, 'unit_sell_price': 100, 'specification_name': '还没分页', 'is_deleted': False}], 'is_deleted': False, 'commodity_description': '&lt;p&gt;还没分页&lt;/p&gt;', 'created_time': 1573632041.71726, 'removal_time': None, 'updated_time': 1573632041.909552, 'commodity_name': '还没分页', 'commodity_images': ['https://uustorage-t.uucin.com/media/park/4cce25b212ee0a81f755bdd0a8cdfecc.jpg'], 'commodity_id': 'b0098be205eb11eabd200242ac15000a', 'shelf_time': 1573632041.90927}]</msg>
<status status="PASS" endtime="20191121 17:31:03.967" starttime="20191121 17:31:03.963"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]["commodity_id"]}</arg>
</arguments>
<assign>
<var>${commodity_id}</var>
</assign>
<msg timestamp="20191121 17:31:03.978" level="INFO">${commodity_id} = 696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:03.978" starttime="20191121 17:31:03.968"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${commodity_id}</arg>
</arguments>
<msg timestamp="20191121 17:31:03.980" level="INFO">696f17760c0b11ea9fdf0242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:03.980" starttime="20191121 17:31:03.979"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${arr1.json()}!=[]</arg>
<arg>${arr1.json()[0]['specifications'][0]["specification_id"]}</arg>
</arguments>
<assign>
<var>${specification_id}</var>
</assign>
<msg timestamp="20191121 17:31:03.991" level="INFO">${specification_id} = 6abf50280c0b11eaae930242ac15000a</msg>
<status status="PASS" endtime="20191121 17:31:03.991" starttime="20191121 17:31:03.980"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>commodity_id=${commodity_id}</arg>
<arg>amount=5</arg>
<arg>specification_id=${specification_id}</arg>
<arg>contact=Robot${name}</arg>
<arg>mobile=13000000000</arg>
<arg>delivery_region=沈阳市浑南区${number}</arg>
<arg>delivery_address=远航西路IT国际201${number}</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:03.993" level="INFO">${essential_params} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'amount': '5', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'contact': 'Robot陈亮', 'mobile': '13000000000', 'delivery_region': '沈阳市浑南区885...</msg>
<status status="PASS" endtime="20191121 17:31:03.993" starttime="20191121 17:31:03.992"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:03.994" level="INFO">${unessential_params} = {}</msg>
<status status="PASS" endtime="20191121 17:31:03.994" starttime="20191121 17:31:03.994"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Fail 403</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:03.996" level="INFO">${results} = [{'contact': 'Robot陈亮', 'delivery_region': '沈阳市浑南区8853', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'mobile': '13000000000', 'amount': '5', 'delivery_address': '远航西路IT国际2018853', 'commodi...</msg>
<status status="PASS" endtime="20191121 17:31:03.996" starttime="20191121 17:31:03.995"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'commodity_id': '696f17760c0b11ea9fdf0242ac15000a', 'amount': '5', 'specification_id': '6abf50280c0b11eaae930242ac15000a', 'contact': 'Robot陈亮', 'mobile': '13000000000', 'delivery_region': '沈阳市浑南区885...">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Fail 403">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order">
<doc>用户创建订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:04.022" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.022" starttime="20191121 17:31:03.997"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:04.025" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.025" starttime="20191121 17:31:04.024"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.027" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.027" starttime="20191121 17:31:04.025"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:04.028" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.028" starttime="20191121 17:31:04.027"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.030" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.030" starttime="20191121 17:31:04.029"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.033" level="INFO">https://mall-server-d.parkone.cn/user/orders</msg>
<status status="PASS" endtime="20191121 17:31:04.033" starttime="20191121 17:31:04.032"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.035" starttime="20191121 17:31:04.033"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:04.037" starttime="20191121 17:31:04.035"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.037" starttime="20191121 17:31:04.031"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.038" level="INFO">23.104</msg>
<status status="PASS" endtime="20191121 17:31:04.039" starttime="20191121 17:31:04.037"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.040" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.040" starttime="20191121 17:31:04.039"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.043" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.043" starttime="20191121 17:31:04.042"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:04.045" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:04.045" starttime="20191121 17:31:04.044"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.045" starttime="20191121 17:31:04.043"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.045" starttime="20191121 17:31:04.041"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:04.022"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:03.996"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:03.996"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:03.996"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:03.996"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.046" starttime="20191121 17:31:03.995"></status>
</kw>
<doc>接口名:用户创建订单

请求方式:Post

预期结果:未登录,http响应码返回 403

url:POST /user/orders</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:04.047" starttime="20191121 17:31:03.431"></status>
</test>
<test id="s1-s5-s2-t2" name="Post User Order Pay Fail 403">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>pay_type=WX_XCX_SL</arg>
</arguments>
<assign>
<var>${essential_params}</var>
</assign>
<msg timestamp="20191121 17:31:04.049" level="INFO">${essential_params} = {'pay_type': 'WX_XCX_SL'}</msg>
<status status="PASS" endtime="20191121 17:31:04.049" starttime="20191121 17:31:04.049"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>open_id=${open_id}</arg>
</arguments>
<assign>
<var>${unessential_params}</var>
</assign>
<msg timestamp="20191121 17:31:04.050" level="INFO">${unessential_params} = {'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}</msg>
<status status="PASS" endtime="20191121 17:31:04.050" starttime="20191121 17:31:04.050"></status>
</kw>
<kw library="resources" name="Run Every Case By Params">
<doc>解析传入的参数并以规定方式运行各种情况。
{case_name}:测试用例名字。
{essential_params}:必传参数。
{unessential_params}:非必传参数。
{success}:默认为True，当需要运行422情况时填入success=False。
{url_parttern}:当需要向方法中传入url时填写</doc>
<arguments>
<arg>Post User Order Pay Fail 403</arg>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>order_id=aaa</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Params">
<doc>将必传参数与每个非必传参数依次组合并返回结果集
:param essential_params:必传参数
:type essential_params:dict
:param unessential_params:非必传参数
:type unessential_params:dict
:param success:是否多种情况
:type success:bool
:return:参数组合的结果集
:rtype:list</doc>
<arguments>
<arg>${essential_params}</arg>
<arg>${unessential_params}</arg>
<arg>${success}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg timestamp="20191121 17:31:04.052" level="INFO">[{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}]</msg>
<msg timestamp="20191121 17:31:04.052" level="INFO">${results} = [{'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU', 'pay_type': 'WX_XCX_SL'}]</msg>
<status status="PASS" endtime="20191121 17:31:04.052" starttime="20191121 17:31:04.052"></status>
</kw>
<kw type="for" name="${kwargs} IN [ @{results} ]">
<kw type="foritem" name="${kwargs} = {'pay_type': 'WX_XCX_SL', 'open_id': 'oaGjU5DBUe1U2suItQ8QPXG2PoSU'}">
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>${case_name}</arg>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Post User Order Pay Fail 403">
<arguments>
<arg>&amp;{url_parttern}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Post User Order Pay">
<doc>订单支付</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:04.079" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.079" starttime="20191121 17:31:04.054"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:04.080" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.080" starttime="20191121 17:31:04.080"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.081" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.081" starttime="20191121 17:31:04.080"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:04.081" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.081" starttime="20191121 17:31:04.081"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.082" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.082" starttime="20191121 17:31:04.082"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.083" level="INFO">https://mall-server-d.parkone.cn/user/orders/aaa/pay</msg>
<status status="PASS" endtime="20191121 17:31:04.083" starttime="20191121 17:31:04.082"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.083" starttime="20191121 17:31:04.083"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:04.084" starttime="20191121 17:31:04.083"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.084" starttime="20191121 17:31:04.082"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.084" level="INFO">22.784</msg>
<status status="PASS" endtime="20191121 17:31:04.084" starttime="20191121 17:31:04.084"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.085" level="INFO">${elapsed} = 22</msg>
<status status="PASS" endtime="20191121 17:31:04.085" starttime="20191121 17:31:04.084"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.085" level="INFO">${elapsed} = 22</msg>
<status status="PASS" endtime="20191121 17:31:04.086" starttime="20191121 17:31:04.085"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:04.087" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.086"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.086"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.085"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.080"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.054"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.053"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.053"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.052"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.051"></status>
</kw>
<doc>接口名:订单支付403

请求方式:Post

预期结果:未登录,http响应码返回 403

url:POST /user/orders/:order_id/pay</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:04.087" starttime="20191121 17:31:04.047"></status>
</test>
<test id="s1-s5-s2-t3" name="Get User Order Fail 403">
<kw name="Get User Order Fail 403">
<arguments>
<arg>order_id=aaa</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Get Order By Order Id">
<doc>查看订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:04.115" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.115" starttime="20191121 17:31:04.089"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:04.118" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.118" starttime="20191121 17:31:04.116"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.118" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.118" starttime="20191121 17:31:04.118"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:04.119" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.119" starttime="20191121 17:31:04.119"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.119" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.120" starttime="20191121 17:31:04.119"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.120" level="INFO">https://mall-server-d.parkone.cn/user/orders/aaa</msg>
<status status="PASS" endtime="20191121 17:31:04.120" starttime="20191121 17:31:04.120"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.121" starttime="20191121 17:31:04.121"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:04.121" starttime="20191121 17:31:04.121"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.122" starttime="20191121 17:31:04.120"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.122" level="INFO">24.599</msg>
<status status="PASS" endtime="20191121 17:31:04.122" starttime="20191121 17:31:04.122"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.123" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:04.123" starttime="20191121 17:31:04.122"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.123" level="INFO">${elapsed} = 24</msg>
<status status="PASS" endtime="20191121 17:31:04.124" starttime="20191121 17:31:04.123"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:04.124" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.124"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.124"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.123"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.116"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.089"></status>
</kw>
<doc>接口名:用户查看订单详情

请求方式:Get

预期结果:未登录,http响应码返回 403

url:GET /user/orders/:order_id</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:04.125" starttime="20191121 17:31:04.088"></status>
</test>
<test id="s1-s5-s2-t4" name="Put User Order Fail 403">
<kw name="Put User Order Fail 403">
<arguments>
<arg>order_id=444444</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Cancel Order">
<doc>取消订单</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:04.152" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.152" starttime="20191121 17:31:04.127"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:04.154" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.154" starttime="20191121 17:31:04.153"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.154" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.154" starttime="20191121 17:31:04.154"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:04.155" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.155" starttime="20191121 17:31:04.155"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.156" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.156" starttime="20191121 17:31:04.155"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.157" level="INFO">https://mall-server-d.parkone.cn/user/orders/444444/cancel</msg>
<status status="PASS" endtime="20191121 17:31:04.157" starttime="20191121 17:31:04.157"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.158" starttime="20191121 17:31:04.157"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:04.185" starttime="20191121 17:31:04.158"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.186" starttime="20191121 17:31:04.156"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.186" level="INFO">23.391</msg>
<status status="PASS" endtime="20191121 17:31:04.186" starttime="20191121 17:31:04.186"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.187" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.187" starttime="20191121 17:31:04.186"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.187" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.187" starttime="20191121 17:31:04.187"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:04.188" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:04.188" starttime="20191121 17:31:04.188"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.188" starttime="20191121 17:31:04.188"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.188" starttime="20191121 17:31:04.187"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.189" starttime="20191121 17:31:04.152"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.189" starttime="20191121 17:31:04.126"></status>
</kw>
<doc>接口名:取消订单403

请求方式:Get

预期结果:未登录,http响应码返回 403

url:PUT /user/orders/:order_id/cancel</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:04.189" starttime="20191121 17:31:04.125"></status>
</test>
<test id="s1-s5-s2-t5" name="Put Accept Order Fail 403">
<kw name="Put Accept Order Fail 403">
<arguments>
<arg>order_id=444444</arg>
</arguments>
<kw library="robot_mall_user_library.order.OrderLibrary" name="Put Accept Order">
<doc>用户确认收货</doc>
<arguments>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191121 17:31:04.215" level="INFO">${resp} = &lt;Response [403]&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.215" starttime="20191121 17:31:04.190"></status>
</kw>
<kw library="resources" name="Expect Status is 403">
<doc>检测响应状态是否为403 Forbidden。
{resp}: 响应实体。</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Bug Level Tag">
<doc>生成状态码错误等级标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${bug_level}</var>
</assign>
<msg timestamp="20191121 17:31:04.216" level="INFO">${bug_level} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.216" starttime="20191121 17:31:04.216"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${bug_level}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.216" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.216" starttime="20191121 17:31:04.216"></status>
</kw>
<kw library="utils_library.BaseUtilsLibrary" name="Auto Create Status Tag">
<doc>生成状态码动态标签
:param resp_code:实际返回的状态码
:type resp_code:int
:param status_code:预期的状态码
:type status_code:int
:return:标签内容
:rtype:str</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>403</arg>
</arguments>
<assign>
<var>${status_tag}</var>
</assign>
<msg timestamp="20191121 17:31:04.217" level="INFO">${status_tag} = None</msg>
<status status="PASS" endtime="20191121 17:31:04.217" starttime="20191121 17:31:04.216"></status>
</kw>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>${status_tag}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.217" level="INFO">Set tag 'None'.</msg>
<status status="PASS" endtime="20191121 17:31:04.217" starttime="20191121 17:31:04.217"></status>
</kw>
<kw library="resources" name="Status Should be">
<doc>检测响应状态是否符合预期值。
{resp}: 响应实体。
{status_code}: 预期的响应状态。</doc>
<arguments>
<arg>${resp}</arg>
<arg>403</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.218" level="INFO">https://mall-server-d.parkone.cn/user/orders/444444/delivery_status</msg>
<status status="PASS" endtime="20191121 17:31:04.218" starttime="20191121 17:31:04.217"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191121 17:31:04.218" starttime="20191121 17:31:04.218"></status>
</kw>
<kw type="teardown" library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}'=='FAIL'</arg>
<arg>log</arg>
<arg>${SUITE_NAME}模块中的接口：${resp.url[36:]} 错误。test_case：${TEST_NAME}:应返回${status_code}，但返回${resp.status_code}。</arg>
<arg>WARN</arg>
</arguments>
<status status="PASS" endtime="20191121 17:31:04.218" starttime="20191121 17:31:04.218"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.219" starttime="20191121 17:31:04.217"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<msg timestamp="20191121 17:31:04.219" level="INFO">23.418</msg>
<status status="PASS" endtime="20191121 17:31:04.219" starttime="20191121 17:31:04.219"></status>
</kw>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${resp.elapsed.microseconds/1000}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.219" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.219" starttime="20191121 17:31:04.219"></status>
</kw>
<kw library="resources" name="Auto Elapsed">
<arguments>
<arg>${elapsed}</arg>
</arguments>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${elapsed}</arg>
</arguments>
<assign>
<var>${elapsed}</var>
</assign>
<msg timestamp="20191121 17:31:04.220" level="INFO">${elapsed} = 23</msg>
<status status="PASS" endtime="20191121 17:31:04.220" starttime="20191121 17:31:04.220"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${elapsed} &lt;= 100</arg>
<arg>set tags</arg>
<arg>RespTime:100ms</arg>
<arg>ELSE IF</arg>
<arg>100 &lt; ${elapsed} &lt;= 200</arg>
<arg>set tags</arg>
<arg>RespTime:100ms~200ms</arg>
<arg>ELSE IF</arg>
<arg>200 &lt; ${elapsed} &lt;= 500</arg>
<arg>set tags</arg>
<arg>RespTime:200ms~500ms</arg>
<arg>ELSE IF</arg>
<arg>500 &lt; ${elapsed} &lt;= 2000</arg>
<arg>set tags</arg>
<arg>RespTime:500ms~2000ms</arg>
<arg>ELSE IF</arg>
<arg>${elapsed} &gt; 2000</arg>
<arg>set tags</arg>
<arg>RespTime:2000ms</arg>
</arguments>
<kw library="BuiltIn" name="Set Tags">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>RespTime:100ms</arg>
</arguments>
<msg timestamp="20191121 17:31:04.220" level="INFO">Set tag 'RespTime:100ms'.</msg>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.220"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.220"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.219"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.215"></status>
</kw>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.190"></status>
</kw>
<doc>接口名:用户确认收货403

请求方式:Get

预期结果:未登录,http响应码返回 403

url:PUT /user/orders/:order_id/delivery_status</doc>
<tags>
<tag>model:wxmp_order</tag>
<tag>Respcode:403</tag>
<tag>RespTime:100ms</tag>
</tags>
<status critical="yes" status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:04.189"></status>
</test>
<doc>wxmp_order</doc>
<status status="PASS" endtime="20191121 17:31:04.221" starttime="20191121 17:31:03.426"></status>
</suite>
<status status="PASS" endtime="20191121 17:31:04.223" starttime="20191121 17:30:59.750"></status>
</suite>
<status status="FAIL" endtime="20191121 17:31:04.226" starttime="20191121 17:30:41.757"></status>
</suite>
<statistics>
<total>
<stat pass="56" fail="7">Critical Tests</stat>
<stat pass="56" fail="7">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="3">BugLevel:Blocker</stat>
<stat pass="0" fail="5">BugLevel:Critical</stat>
<stat pass="0" fail="1">BugLevel:Major</stat>
<stat pass="0" fail="1">BugLevel:Minor</stat>
<stat pass="2" fail="1">login</stat>
<stat pass="22" fail="2">model:admin_commodity</stat>
<stat pass="14" fail="2">model:admin_order</stat>
<stat pass="2" fail="2">model:wxmp_commodity</stat>
<stat pass="16" fail="0">model:wxmp_order</stat>
<stat pass="6" fail="1">Respcode:200</stat>
<stat pass="3" fail="0">Respcode:201</stat>
<stat pass="10" fail="1">Respcode:204</stat>
<stat pass="17" fail="1">Respcode:403</stat>
<stat pass="13" fail="0">Respcode:404</stat>
<stat pass="7" fail="4">Respcode:422</stat>
<stat pass="26" fail="2">RespTime:100ms</stat>
<stat pass="25" fail="3">RespTime:100ms~200ms</stat>
<stat pass="7" fail="0">RespTime:200ms~500ms</stat>
<stat pass="0" fail="1">ShouldBe:200But:404</stat>
<stat pass="0" fail="1">ShouldBe:204But:200</stat>
<stat pass="0" fail="1">ShouldBe:403But:404</stat>
<stat pass="0" fail="3">ShouldBe:422But:200</stat>
<stat pass="0" fail="1">ShouldBe:422But:204</stat>
<stat pass="0" fail="3">ShouldBe:422But:500</stat>
</tag>
<suite>
<stat pass="56" id="s1" fail="7" name="Tests">Tests</stat>
<stat pass="22" id="s1-s1" fail="2" name="Admin Commodity">Tests.Admin Commodity</stat>
<stat pass="15" id="s1-s1-s1" fail="2" name="Commodity">Tests.Admin Commodity.Commodity</stat>
<stat pass="7" id="s1-s1-s2" fail="0" name="Commodity.Unauthorized">Tests.Admin Commodity.Commodity.Unauthorized</stat>
<stat pass="14" id="s1-s2" fail="2" name="Admin Order">Tests.Admin Order</stat>
<stat pass="9" id="s1-s2-s1" fail="2" name="Order">Tests.Admin Order.Order</stat>
<stat pass="5" id="s1-s2-s2" fail="0" name="Order.Unauthorized">Tests.Admin Order.Order.Unauthorized</stat>
<stat pass="2" id="s1-s3" fail="2" name="Commodity">Tests.Commodity</stat>
<stat pass="2" id="s1-s3-s1" fail="1" name="Commodity">Tests.Commodity.Commodity</stat>
<stat pass="0" id="s1-s3-s2" fail="1" name="Commodity.Unthorized">Tests.Commodity.Commodity.Unthorized</stat>
<stat pass="2" id="s1-s4" fail="1" name="Login">Tests.Login</stat>
<stat pass="2" id="s1-s4-s1" fail="1" name="Login">Tests.Login.Login</stat>
<stat pass="16" id="s1-s5" fail="0" name="User Order">Tests.User Order</stat>
<stat pass="11" id="s1-s5-s1" fail="0" name="Order">Tests.User Order.Order</stat>
<stat pass="5" id="s1-s5-s2" fail="0" name="Order.Unthorized">Tests.User Order.Order.Unthorized</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20191121 17:30:44.147" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities?shelf_time=a%2Cb 错误。test_case：Get Admin Commodities Fail:应返回422，但返回500。</msg>
<msg timestamp="20191121 17:30:44.295" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities?commodity_name=. 错误。test_case：Get Admin Commodities Fail:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:44.757" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：in/commodities 错误。test_case：Get Admin Commodities Fail:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:47.634" level="WARN">Tests.Admin Commodity.Commodity模块中的接口：min/commodities/97e789540c4111eabc550242ac15000a/specification 错误。test_case：Post Admin Commodity Specification Fail422:应返回422，但返回204。</msg>
<msg timestamp="20191121 17:30:51.809" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?mobile=dsadsadasdas 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:51.958" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?contact=%2F 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:52.100" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_id=. 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:52.256" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?commodity_name=%2F 错误。test_case：Get Admin Orders Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:52.499" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_time=a 错误。test_case：Get Admin Orders Fail422:应返回422，但返回500。</msg>
<msg timestamp="20191121 17:30:52.726" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?pay_time=a 错误。test_case：Get Admin Orders Fail422:应返回422，但返回500。</msg>
<msg timestamp="20191121 17:30:55.838" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?mobile=dsadsadasdas 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:55.975" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?contact=%2F 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:56.123" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_id=. 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:56.276" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?commodity_name=%2F 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回200。</msg>
<msg timestamp="20191121 17:30:56.527" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?order_time=a 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回500。</msg>
<msg timestamp="20191121 17:30:56.786" level="WARN">Tests.Admin Order.Order模块中的接口：in/orders?pay_time=a 错误。test_case：Get Admin Orders Export Fail422:应返回422，但返回500。</msg>
<msg timestamp="20191121 17:30:58.950" level="WARN">Tests.Commodity.Commodity模块中的接口：rs/commodities/97e789540c4111eabc550242ac15000a 错误。test_case：Get User Commodity By commodity_id:应返回200，但返回404。</msg>
<msg timestamp="20191121 17:30:59.287" level="WARN">Tests.Commodity.Commodity.Unthorized模块中的接口：rs/commodities/97e789540c4111eabc550242ac15000a 错误。test_case：Get User Commodity By commodity_id Fail 403:应返回403，但返回404。</msg>
<msg timestamp="20191121 17:30:59.585" level="WARN">Tests.Login.Login模块中的接口：n/login 错误。test_case：Login Test:应返回204，但返回200。</msg>
</errors>
</robot>
